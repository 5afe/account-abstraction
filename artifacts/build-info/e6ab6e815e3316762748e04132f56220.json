{"id":"e6ab6e815e3316762748e04132f56220","_format":"hh-sol-build-info-1","solcVersion":"0.8.23","solcLongVersion":"0.8.23+commit.f704f362","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"contracts/core/EntryPoint.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.23;\n/* solhint-disable avoid-low-level-calls */\n/* solhint-disable no-inline-assembly */\n\nimport \"../interfaces/IAccount.sol\";\nimport \"../interfaces/IAccountExecute.sol\";\nimport \"../interfaces/IPaymaster.sol\";\nimport \"../interfaces/IEntryPoint.sol\";\n\nimport \"../utils/Exec.sol\";\nimport \"./StakeManager.sol\";\nimport \"./SenderCreator.sol\";\nimport \"./Helpers.sol\";\nimport \"./NonceManager.sol\";\nimport \"./UserOperationLib.sol\";\n\n// we also require '@gnosis.pm/safe-contracts' and both libraries have 'IERC165.sol', leading to conflicts\nimport \"@openzeppelin/contracts/utils/introspection/ERC165.sol\" as OpenZeppelin;\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n\n/*\n * Account-Abstraction (EIP-4337) singleton EntryPoint implementation.\n * Only one instance required on each chain.\n */\ncontract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, OpenZeppelin.ERC165 {\n\n    using UserOperationLib for PackedUserOperation;\n\n    SenderCreator private immutable _senderCreator = new SenderCreator();\n\n    function senderCreator() internal view virtual returns (SenderCreator) {\n        return _senderCreator;\n    }\n\n    //compensate for innerHandleOps' emit message and deposit refund.\n    // allow some slack for future gas price changes.\n    uint private constant INNER_GAS_OVERHEAD = 10000;\n\n    // Marker for inner call revert on out of gas\n    bytes32 private constant INNER_OUT_OF_GAS = hex\"deaddead\";\n\n    uint256 private constant REVERT_REASON_MAX_LEN = 2048;\n    uint256 private constant PENALTY_PERCENT = 10;\n\n    /**\n     * For simulation purposes, validateUserOp (and validatePaymasterUserOp)\n     * must return this value in case of signature failure, instead of revert.\n     */\n    uint256 public constant SIG_VALIDATION_FAILED = 1;\n\n    /// @inheritdoc OpenZeppelin.IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        // note: solidity \"type(IEntryPoint).interfaceId\" is without inherited methods but we want to check everything\n        return interfaceId == (type(IEntryPoint).interfaceId ^ type(IStakeManager).interfaceId ^ type(INonceManager).interfaceId) ||\n            interfaceId == type(IEntryPoint).interfaceId ||\n            interfaceId == type(IStakeManager).interfaceId ||\n            interfaceId == type(INonceManager).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * Compensate the caller's beneficiary address with the collected fees of all UserOperations.\n     * @param beneficiary - The address to receive the fees.\n     * @param amount      - Amount to transfer.\n     */\n    function _compensate(address payable beneficiary, uint256 amount) internal {\n        require(beneficiary != address(0), \"AA90 invalid beneficiary\");\n        (bool success, ) = beneficiary.call{value: amount}(\"\");\n        require(success, \"AA91 failed send to beneficiary\");\n    }\n\n    /**\n     * Execute a user operation.\n     * @param opIndex    - Index into the opInfo array.\n     * @param userOp     - The userOp to execute.\n     * @param opInfo     - The opInfo filled by validatePrepayment for this userOp.\n     * @return collected - The total amount this userOp paid.\n     */\n    function _executeUserOp(\n        uint256 opIndex,\n        PackedUserOperation calldata userOp,\n        UserOpInfo memory opInfo\n    )\n    internal\n    returns\n    (uint256 collected) {\n        uint256 preGas = gasleft();\n        bytes memory context = getMemoryBytesFromOffset(opInfo.contextOffset);\n        bool success;\n        {\n            uint saveFreePtr;\n            assembly (\"memory-safe\") {\n                saveFreePtr := mload(0x40)\n            }\n            bytes calldata callData = userOp.callData;\n            bytes memory innerCall;\n            bytes4 methodSig;\n            assembly {\n                let len := callData.length\n                if gt(len, 3) {\n                    methodSig := calldataload(callData.offset)\n                }\n            }\n            if (methodSig == IAccountExecute.executeUserOp.selector) {\n                bytes memory executeUserOp = abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash));\n                innerCall = abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context));\n            } else\n            {\n                innerCall = abi.encodeCall(this.innerHandleOp, (callData, opInfo, context));\n            }\n            assembly (\"memory-safe\") {\n                success := call(gas(), address(), 0, add(innerCall, 0x20), mload(innerCall), 0, 32)\n                collected := mload(0)\n                mstore(0x40, saveFreePtr)\n            }\n        }\n        if (!success) {\n            bytes32 innerRevertCode;\n            assembly (\"memory-safe\") {\n                let len := returndatasize()\n                if eq(32,len) {\n                    returndatacopy(0, 0, 32)\n                    innerRevertCode := mload(0)\n                }\n            }\n            // handleOps was called with gas limit too low. abort entire bundle.\n            if (innerRevertCode == INNER_OUT_OF_GAS) {\n                //report paymaster, since if it is not deliberately caused by the bundler,\n                // it must be a revert caused by paymaster.\n                revert FailedOp(opIndex, \"AA95 out of gas\");\n            } else {\n                emit PostOpRevertReason(\n                    opInfo.userOpHash,\n                    opInfo.mUserOp.sender,\n                    opInfo.mUserOp.nonce,\n                    Exec.getReturnData(REVERT_REASON_MAX_LEN)\n                );\n            }\n\n            uint256 actualGas = preGas - gasleft() + opInfo.preOpGas;\n            collected = _postExecution(\n                opIndex,\n                IPaymaster.PostOpMode.postOpReverted,\n                opInfo,\n                context,\n                actualGas\n            );\n        }\n    }\n\n    /// @inheritdoc IEntryPoint\n    function handleOps(\n        PackedUserOperation[] calldata ops,\n        address payable beneficiary\n    ) public nonReentrant {\n        uint256 opslen = ops.length;\n        UserOpInfo[] memory opInfos = new UserOpInfo[](opslen);\n\n        unchecked {\n            for (uint256 i = 0; i < opslen; i++) {\n                UserOpInfo memory opInfo = opInfos[i];\n                (\n                    uint256 validationData,\n                    uint256 pmValidationData\n                ) = _validatePrepayment(i, ops[i], opInfo);\n                _validateAccountAndPaymasterValidationData(\n                    i,\n                    validationData,\n                    pmValidationData,\n                    address(0)\n                );\n            }\n\n            uint256 collected = 0;\n            emit BeforeExecution();\n\n            for (uint256 i = 0; i < opslen; i++) {\n                collected += _executeUserOp(i, ops[i], opInfos[i]);\n            }\n\n            _compensate(beneficiary, collected);\n        }\n    }\n\n    /// @inheritdoc IEntryPoint\n    function handleAggregatedOps(\n        UserOpsPerAggregator[] calldata opsPerAggregator,\n        address payable beneficiary\n    ) public nonReentrant {\n\n        uint256 opasLen = opsPerAggregator.length;\n        uint256 totalOps = 0;\n        for (uint256 i = 0; i < opasLen; i++) {\n            UserOpsPerAggregator calldata opa = opsPerAggregator[i];\n            PackedUserOperation[] calldata ops = opa.userOps;\n            IAggregator aggregator = opa.aggregator;\n\n            //address(1) is special marker of \"signature error\"\n            require(\n                address(aggregator) != address(1),\n                \"AA96 invalid aggregator\"\n            );\n\n            if (address(aggregator) != address(0)) {\n                // solhint-disable-next-line no-empty-blocks\n                try aggregator.validateSignatures(ops, opa.signature) {} catch {\n                    revert SignatureValidationFailed(address(aggregator));\n                }\n            }\n\n            totalOps += ops.length;\n        }\n\n        UserOpInfo[] memory opInfos = new UserOpInfo[](totalOps);\n\n        uint256 opIndex = 0;\n        for (uint256 a = 0; a < opasLen; a++) {\n            UserOpsPerAggregator calldata opa = opsPerAggregator[a];\n            PackedUserOperation[] calldata ops = opa.userOps;\n            IAggregator aggregator = opa.aggregator;\n\n            uint256 opslen = ops.length;\n            for (uint256 i = 0; i < opslen; i++) {\n                UserOpInfo memory opInfo = opInfos[opIndex];\n                (\n                    uint256 validationData,\n                    uint256 paymasterValidationData\n                ) = _validatePrepayment(opIndex, ops[i], opInfo);\n                _validateAccountAndPaymasterValidationData(\n                    i,\n                    validationData,\n                    paymasterValidationData,\n                    address(aggregator)\n                );\n                opIndex++;\n            }\n        }\n\n        emit BeforeExecution();\n\n        uint256 collected = 0;\n        opIndex = 0;\n        for (uint256 a = 0; a < opasLen; a++) {\n            UserOpsPerAggregator calldata opa = opsPerAggregator[a];\n            emit SignatureAggregatorChanged(address(opa.aggregator));\n            PackedUserOperation[] calldata ops = opa.userOps;\n            uint256 opslen = ops.length;\n\n            for (uint256 i = 0; i < opslen; i++) {\n                collected += _executeUserOp(opIndex, ops[i], opInfos[opIndex]);\n                opIndex++;\n            }\n        }\n        emit SignatureAggregatorChanged(address(0));\n\n        _compensate(beneficiary, collected);\n    }\n\n    /**\n     * A memory copy of UserOp static fields only.\n     * Excluding: callData, initCode and signature. Replacing paymasterAndData with paymaster.\n     */\n    struct MemoryUserOp {\n        address sender;\n        uint256 nonce;\n        uint256 verificationGasLimit;\n        uint256 callGasLimit;\n        uint256 paymasterVerificationGasLimit;\n        uint256 paymasterPostOpGasLimit;\n        uint256 preVerificationGas;\n        address paymaster;\n        uint256 maxFeePerGas;\n        uint256 maxPriorityFeePerGas;\n    }\n\n    struct UserOpInfo {\n        MemoryUserOp mUserOp;\n        bytes32 userOpHash;\n        uint256 prefund;\n        uint256 contextOffset;\n        uint256 preOpGas;\n    }\n\n    /**\n     * Inner function to handle a UserOperation.\n     * Must be declared \"external\" to open a call context, but it can only be called by handleOps.\n     * @param callData - The callData to execute.\n     * @param opInfo   - The UserOpInfo struct.\n     * @param context  - The context bytes.\n     */\n    function innerHandleOp(\n        bytes memory callData,\n        UserOpInfo memory opInfo,\n        bytes calldata context\n    ) external returns (uint256 actualGasCost) {\n        uint256 preGas = gasleft();\n        require(msg.sender == address(this), \"AA92 internal call only\");\n        MemoryUserOp memory mUserOp = opInfo.mUserOp;\n\n        uint256 callGasLimit = mUserOp.callGasLimit;\n        unchecked {\n            // handleOps was called with gas limit too low. abort entire bundle.\n            if (\n                gasleft() * 63 / 64 <\n                callGasLimit +\n                mUserOp.paymasterPostOpGasLimit +\n                INNER_GAS_OVERHEAD\n            ) {\n                assembly (\"memory-safe\") {\n                    mstore(0, INNER_OUT_OF_GAS)\n                    revert(0, 32)\n                }\n            }\n        }\n\n        IPaymaster.PostOpMode mode = IPaymaster.PostOpMode.opSucceeded;\n        if (callData.length > 0) {\n            bool success = Exec.call(mUserOp.sender, 0, callData, callGasLimit);\n            if (!success) {\n                bytes memory result = Exec.getReturnData(REVERT_REASON_MAX_LEN);\n                if (result.length > 0) {\n                    emit UserOperationRevertReason(\n                        opInfo.userOpHash,\n                        mUserOp.sender,\n                        mUserOp.nonce,\n                        result\n                    );\n                }\n                mode = IPaymaster.PostOpMode.opReverted;\n            }\n        }\n\n        unchecked {\n            uint256 actualGas = preGas - gasleft() + opInfo.preOpGas;\n            // Note: opIndex is ignored (relevant only if mode==postOpReverted, which is only possible outside of innerHandleOp)\n            return _postExecution(0, mode, opInfo, context, actualGas);\n        }\n    }\n\n    /// @inheritdoc IEntryPoint\n    function getUserOpHash(\n        PackedUserOperation calldata userOp\n    ) public view returns (bytes32) {\n        return\n            keccak256(abi.encode(userOp.hash(), address(this), block.chainid));\n    }\n\n    /**\n     * Copy general fields from userOp into the memory opInfo structure.\n     * @param userOp  - The user operation.\n     * @param mUserOp - The memory user operation.\n     */\n    function _copyUserOpToMemory(\n        PackedUserOperation calldata userOp,\n        MemoryUserOp memory mUserOp\n    ) internal pure {\n        mUserOp.sender = userOp.sender;\n        mUserOp.nonce = userOp.nonce;\n        (mUserOp.verificationGasLimit, mUserOp.callGasLimit) = UserOperationLib.unpackAccountGasLimits(userOp.accountGasLimits);\n        mUserOp.preVerificationGas = userOp.preVerificationGas;\n        mUserOp.maxFeePerGas = userOp.maxFeePerGas;\n        mUserOp.maxPriorityFeePerGas = userOp.maxPriorityFeePerGas;\n        bytes calldata paymasterAndData = userOp.paymasterAndData;\n        if (paymasterAndData.length > 0) {\n            require(\n                paymasterAndData.length >= UserOperationLib.PAYMASTER_DATA_OFFSET,\n                \"AA93 invalid paymasterAndData\"\n            );\n            (mUserOp.paymaster, mUserOp.paymasterVerificationGasLimit, mUserOp.paymasterPostOpGasLimit) = UserOperationLib.unpackPaymasterStaticFields(paymasterAndData);\n        } else {\n            mUserOp.paymaster = address(0);\n            mUserOp.paymasterVerificationGasLimit = 0;\n            mUserOp.paymasterPostOpGasLimit = 0;\n        }\n    }\n\n    /**\n     * Get the required prefunded gas fee amount for an operation.\n     * @param mUserOp - The user operation in memory.\n     */\n    function _getRequiredPrefund(\n        MemoryUserOp memory mUserOp\n    ) internal pure returns (uint256 requiredPrefund) {\n        unchecked {\n            uint256 requiredGas = mUserOp.verificationGasLimit +\n                mUserOp.callGasLimit +\n                mUserOp.paymasterVerificationGasLimit +\n                mUserOp.paymasterPostOpGasLimit +\n                mUserOp.preVerificationGas;\n\n            requiredPrefund = requiredGas * mUserOp.maxFeePerGas;\n        }\n    }\n\n    /**\n     * Create sender smart contract account if init code is provided.\n     * @param opIndex  - The operation index.\n     * @param opInfo   - The operation info.\n     * @param initCode - The init code for the smart contract account.\n     */\n    function _createSenderIfNeeded(\n        uint256 opIndex,\n        UserOpInfo memory opInfo,\n        bytes calldata initCode\n    ) internal {\n        if (initCode.length != 0) {\n            address sender = opInfo.mUserOp.sender;\n            if (sender.code.length != 0)\n                revert FailedOp(opIndex, \"AA10 sender already constructed\");\n            address sender1 = senderCreator().createSender{\n                gas: opInfo.mUserOp.verificationGasLimit\n            }(initCode);\n            if (sender1 == address(0))\n                revert FailedOp(opIndex, \"AA13 initCode failed or OOG\");\n            if (sender1 != sender)\n                revert FailedOp(opIndex, \"AA14 initCode must return sender\");\n            if (sender1.code.length == 0)\n                revert FailedOp(opIndex, \"AA15 initCode must create sender\");\n            address factory = address(bytes20(initCode[0:20]));\n            emit AccountDeployed(\n                opInfo.userOpHash,\n                sender,\n                factory,\n                opInfo.mUserOp.paymaster\n            );\n        }\n    }\n\n    /// @inheritdoc IEntryPoint\n    function getSenderAddress(bytes calldata initCode) public {\n        address sender = senderCreator().createSender(initCode);\n        revert SenderAddressResult(sender);\n    }\n\n    /**\n     * Call account.validateUserOp.\n     * Revert (with FailedOp) in case validateUserOp reverts, or account didn't send required prefund.\n     * Decrement account's deposit if needed.\n     * @param opIndex         - The operation index.\n     * @param op              - The user operation.\n     * @param opInfo          - The operation info.\n     * @param requiredPrefund - The required prefund amount.\n     */\n    function _validateAccountPrepayment(\n        uint256 opIndex,\n        PackedUserOperation calldata op,\n        UserOpInfo memory opInfo,\n        uint256 requiredPrefund\n    )\n        internal\n        returns (\n            uint256 validationData\n        )\n    {\n        unchecked {\n            MemoryUserOp memory mUserOp = opInfo.mUserOp;\n            address sender = mUserOp.sender;\n            _createSenderIfNeeded(opIndex, opInfo, op.initCode);\n            address paymaster = mUserOp.paymaster;\n            uint256 missingAccountFunds = 0;\n            if (paymaster == address(0)) {\n                uint256 bal = balanceOf(sender);\n                missingAccountFunds = bal > requiredPrefund\n                    ? 0\n                    : requiredPrefund - bal;\n            }\n            try\n                IAccount(sender).validateUserOp{\n                    gas: mUserOp.verificationGasLimit\n                }(op, opInfo.userOpHash, missingAccountFunds)\n            returns (uint256 _validationData) {\n                validationData = _validationData;\n            } catch {\n                revert FailedOpWithRevert(opIndex, \"AA23 reverted\", Exec.getReturnData(REVERT_REASON_MAX_LEN));\n            }\n            if (paymaster == address(0)) {\n                DepositInfo storage senderInfo = deposits[sender];\n                uint256 deposit = senderInfo.deposit;\n                if (requiredPrefund > deposit) {\n                    revert FailedOp(opIndex, \"AA21 didn't pay prefund\");\n                }\n                senderInfo.deposit = deposit - requiredPrefund;\n            }\n        }\n    }\n\n    /**\n     * In case the request has a paymaster:\n     *  - Validate paymaster has enough deposit.\n     *  - Call paymaster.validatePaymasterUserOp.\n     *  - Revert with proper FailedOp in case paymaster reverts.\n     *  - Decrement paymaster's deposit.\n     * @param opIndex                            - The operation index.\n     * @param op                                 - The user operation.\n     * @param opInfo                             - The operation info.\n     * @param requiredPreFund                    - The required prefund amount.\n     */\n    function _validatePaymasterPrepayment(\n        uint256 opIndex,\n        PackedUserOperation calldata op,\n        UserOpInfo memory opInfo,\n        uint256 requiredPreFund\n    ) internal returns (bytes memory context, uint256 validationData) {\n        unchecked {\n            MemoryUserOp memory mUserOp = opInfo.mUserOp;\n            address paymaster = mUserOp.paymaster;\n            DepositInfo storage paymasterInfo = deposits[paymaster];\n            uint256 deposit = paymasterInfo.deposit;\n            if (deposit < requiredPreFund) {\n                revert FailedOp(opIndex, \"AA31 paymaster deposit too low\");\n            }\n            paymasterInfo.deposit = deposit - requiredPreFund;\n            try\n                IPaymaster(paymaster).validatePaymasterUserOp{gas: mUserOp.paymasterVerificationGasLimit}(\n                    op,\n                    opInfo.userOpHash,\n                    requiredPreFund\n                )\n            returns (bytes memory _context, uint256 _validationData) {\n                context = _context;\n                validationData = _validationData;\n            } catch {\n                revert FailedOpWithRevert(opIndex, \"AA33 reverted\", Exec.getReturnData(REVERT_REASON_MAX_LEN));\n            }\n        }\n    }\n\n    /**\n     * Revert if either account validationData or paymaster validationData is expired.\n     * @param opIndex                 - The operation index.\n     * @param validationData          - The account validationData.\n     * @param paymasterValidationData - The paymaster validationData.\n     * @param expectedAggregator      - The expected aggregator.\n     */\n    function _validateAccountAndPaymasterValidationData(\n        uint256 opIndex,\n        uint256 validationData,\n        uint256 paymasterValidationData,\n        address expectedAggregator\n    ) internal view {\n        (address aggregator, bool outOfTimeRange) = _getValidationData(\n            validationData\n        );\n        if (expectedAggregator != aggregator) {\n            revert FailedOp(opIndex, \"AA24 signature error\");\n        }\n        if (outOfTimeRange) {\n            revert FailedOp(opIndex, \"AA22 expired or not due\");\n        }\n        // pmAggregator is not a real signature aggregator: we don't have logic to handle it as address.\n        // Non-zero address means that the paymaster fails due to some signature check (which is ok only during estimation).\n        address pmAggregator;\n        (pmAggregator, outOfTimeRange) = _getValidationData(\n            paymasterValidationData\n        );\n        if (pmAggregator != address(0)) {\n            revert FailedOp(opIndex, \"AA34 signature error\");\n        }\n        if (outOfTimeRange) {\n            revert FailedOp(opIndex, \"AA32 paymaster expired or not due\");\n        }\n    }\n\n    /**\n     * Parse validationData into its components.\n     * @param validationData - The packed validation data (sigFailed, validAfter, validUntil).\n     */\n    function _getValidationData(\n        uint256 validationData\n    ) internal view returns (address aggregator, bool outOfTimeRange) {\n        if (validationData == 0) {\n            return (address(0), false);\n        }\n        ValidationData memory data = _parseValidationData(validationData);\n        // solhint-disable-next-line not-rely-on-time\n        outOfTimeRange = block.timestamp > data.validUntil || block.timestamp < data.validAfter;\n        aggregator = data.aggregator;\n    }\n\n    /**\n     * Validate account and paymaster (if defined) and\n     * also make sure total validation doesn't exceed verificationGasLimit.\n     * This method is called off-chain (simulateValidation()) and on-chain (from handleOps)\n     * @param opIndex - The index of this userOp into the \"opInfos\" array.\n     * @param userOp  - The userOp to validate.\n     */\n    function _validatePrepayment(\n        uint256 opIndex,\n        PackedUserOperation calldata userOp,\n        UserOpInfo memory outOpInfo\n    )\n        internal\n        returns (uint256 validationData, uint256 paymasterValidationData)\n    {\n        uint256 preGas = gasleft();\n        MemoryUserOp memory mUserOp = outOpInfo.mUserOp;\n        _copyUserOpToMemory(userOp, mUserOp);\n        outOpInfo.userOpHash = getUserOpHash(userOp);\n\n        // Validate all numeric values in userOp are well below 128 bit, so they can safely be added\n        // and multiplied without causing overflow.\n        uint256 maxGasValues = mUserOp.preVerificationGas |\n            mUserOp.verificationGasLimit |\n            mUserOp.callGasLimit |\n            mUserOp.paymasterVerificationGasLimit |\n            mUserOp.paymasterPostOpGasLimit |\n            userOp.maxFeePerGas |\n            userOp.maxPriorityFeePerGas;\n        require(maxGasValues <= type(uint120).max, \"AA94 gas values overflow\");\n\n        uint256 requiredPreFund = _getRequiredPrefund(mUserOp);\n        validationData = _validateAccountPrepayment(\n            opIndex,\n            userOp,\n            outOpInfo,\n            requiredPreFund\n        );\n\n        if (!_validateAndUpdateNonce(mUserOp.sender, mUserOp.nonce)) {\n            revert FailedOp(opIndex, \"AA25 invalid account nonce\");\n        }\n\n        bytes memory context;\n        if (mUserOp.paymaster != address(0)) {\n            (context, paymasterValidationData) = _validatePaymasterPrepayment(\n                opIndex,\n                userOp,\n                outOpInfo,\n                requiredPreFund\n            );\n        }\n        unchecked {\n            uint256 gasUsed = preGas - gasleft();\n\n            if (mUserOp.verificationGasLimit + mUserOp.paymasterVerificationGasLimit < gasUsed) {\n                revert FailedOp(opIndex, \"AA40 over verificationGasLimit\");\n            }\n            outOpInfo.prefund = requiredPreFund;\n            outOpInfo.contextOffset = getOffsetOfMemoryBytes(context);\n            outOpInfo.preOpGas = preGas - gasleft() + userOp.preVerificationGas;\n        }\n    }\n\n    /**\n     * Process post-operation, called just after the callData is executed.\n     * If a paymaster is defined and its validation returned a non-empty context, its postOp is called.\n     * The excess amount is refunded to the account (or paymaster - if it was used in the request).\n     * @param opIndex   - Index in the batch.\n     * @param mode      - Whether is called from innerHandleOp, or outside (postOpReverted).\n     * @param opInfo    - UserOp fields and info collected during validation.\n     * @param context   - The context returned in validatePaymasterUserOp.\n     * @param actualGas - The gas used so far by this user operation.\n     */\n    function _postExecution(\n        uint256 opIndex,\n        IPaymaster.PostOpMode mode,\n        UserOpInfo memory opInfo,\n        bytes memory context,\n        uint256 actualGas\n    ) private returns (uint256 actualGasCost) {\n        uint256 preGas = gasleft();\n        unchecked {\n            address refundAddress;\n            MemoryUserOp memory mUserOp = opInfo.mUserOp;\n            uint256 gasPrice = getUserOpGasPrice(mUserOp);\n\n            address paymaster = mUserOp.paymaster;\n            if (paymaster == address(0)) {\n                refundAddress = mUserOp.sender;\n            } else {\n                refundAddress = paymaster;\n                if (context.length > 0) {\n                    actualGasCost = actualGas * gasPrice;\n                    if (mode != IPaymaster.PostOpMode.postOpReverted) {\n                        try IPaymaster(paymaster).postOp{\n                            gas: mUserOp.paymasterPostOpGasLimit\n                        }(mode, context, actualGasCost, gasPrice)\n                        // solhint-disable-next-line no-empty-blocks\n                        {} catch {\n                            bytes memory reason = Exec.getReturnData(REVERT_REASON_MAX_LEN);\n                            revert PostOpReverted(reason);\n                        }\n                    }\n                }\n            }\n            actualGas += preGas - gasleft();\n\n            // Calculating a penalty for unused execution gas\n            {\n                uint256 executionGasLimit = mUserOp.callGasLimit;\n                // Note that 'verificationGasLimit' here is the limit given to the 'postOp' which is part of execution\n                if (context.length > 0){\n                    executionGasLimit += mUserOp.paymasterPostOpGasLimit;\n                }\n                uint256 executionGasUsed = actualGas - opInfo.preOpGas;\n                // this check is required for the gas used within EntryPoint and not covered by explicit gas limits\n                if (executionGasLimit > executionGasUsed) {\n                    uint256 unusedGas = executionGasLimit - executionGasUsed;\n                    uint256 unusedGasPenalty = (unusedGas * PENALTY_PERCENT) / 100;\n                    actualGas += unusedGasPenalty;\n                }\n            }\n\n            actualGasCost = actualGas * gasPrice;\n            if (opInfo.prefund < actualGasCost) {\n                revert FailedOp(opIndex, \"AA51 prefund below actualGasCost\");\n            }\n            uint256 refund = opInfo.prefund - actualGasCost;\n            _incrementDeposit(refundAddress, refund);\n            bool success = mode == IPaymaster.PostOpMode.opSucceeded;\n            emit UserOperationEvent(\n                opInfo.userOpHash,\n                mUserOp.sender,\n                mUserOp.paymaster,\n                mUserOp.nonce,\n                success,\n                actualGasCost,\n                actualGas\n            );\n        } // unchecked\n    }\n\n    /**\n     * The gas price this UserOp agrees to pay.\n     * Relayer/block builder might submit the TX with higher priorityFee, but the user should not.\n     * @param mUserOp - The userOp to get the gas price from.\n     */\n    function getUserOpGasPrice(\n        MemoryUserOp memory mUserOp\n    ) internal view returns (uint256) {\n        unchecked {\n            uint256 maxFeePerGas = mUserOp.maxFeePerGas;\n            uint256 maxPriorityFeePerGas = mUserOp.maxPriorityFeePerGas;\n            if (maxFeePerGas == maxPriorityFeePerGas) {\n                //legacy mode (for networks that don't support basefee opcode)\n                return maxFeePerGas;\n            }\n            return min(maxFeePerGas, maxPriorityFeePerGas + block.basefee);\n        }\n    }\n\n    /**\n     * The offset of the given bytes in memory.\n     * @param data - The bytes to get the offset of.\n     */\n    function getOffsetOfMemoryBytes(\n        bytes memory data\n    ) internal pure returns (uint256 offset) {\n        assembly {\n            offset := data\n        }\n    }\n\n    /**\n     * The bytes in memory at the given offset.\n     * @param offset - The offset to get the bytes from.\n     */\n    function getMemoryBytesFromOffset(\n        uint256 offset\n    ) internal pure returns (bytes memory data) {\n        assembly (\"memory-safe\") {\n            data := offset\n        }\n    }\n\n    /// @inheritdoc IEntryPoint\n    function delegateAndRevert(address target, bytes calldata data) external {\n        (bool success, bytes memory ret) = target.delegatecall(data);\n        revert DelegateAndRevert(success, ret);\n    }\n}\n"},"contracts/core/Helpers.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\n/* solhint-disable no-inline-assembly */\n\n/**\n * Returned data from validateUserOp.\n * validateUserOp returns a uint256, with is created by `_packedValidationData` and\n * parsed by `_parseValidationData`.\n * @param aggregator  - address(0) - The account validated the signature by itself.\n *                      address(1) - The account failed to validate the signature.\n *                      otherwise - This is an address of a signature aggregator that must\n *                                  be used to validate the signature.\n * @param validAfter  - This UserOp is valid only after this timestamp.\n * @param validaUntil - This UserOp is valid only up to this timestamp.\n */\nstruct ValidationData {\n    address aggregator;\n    uint48 validAfter;\n    uint48 validUntil;\n}\n\n/**\n * Extract sigFailed, validAfter, validUntil.\n * Also convert zero validUntil to type(uint48).max.\n * @param validationData - The packed validation data.\n */\nfunction _parseValidationData(\n    uint256 validationData\n) pure returns (ValidationData memory data) {\n    address aggregator = address(uint160(validationData));\n    uint48 validUntil = uint48(validationData >> 160);\n    if (validUntil == 0) {\n        validUntil = type(uint48).max;\n    }\n    uint48 validAfter = uint48(validationData >> (48 + 160));\n    return ValidationData(aggregator, validAfter, validUntil);\n}\n\n/**\n * Intersect account and paymaster ranges.\n * @param validationData          - The packed validation data of the account.\n * @param paymasterValidationData - The packed validation data of the paymaster.\n */\nfunction _intersectTimeRange(\n    uint256 validationData,\n    uint256 paymasterValidationData\n) pure returns (ValidationData memory) {\n    ValidationData memory accountValidationData = _parseValidationData(\n        validationData\n    );\n    ValidationData memory pmValidationData = _parseValidationData(\n        paymasterValidationData\n    );\n    address aggregator = accountValidationData.aggregator;\n    if (aggregator == address(0)) {\n        aggregator = pmValidationData.aggregator;\n    }\n    uint48 validAfter = accountValidationData.validAfter;\n    uint48 validUntil = accountValidationData.validUntil;\n    uint48 pmValidAfter = pmValidationData.validAfter;\n    uint48 pmValidUntil = pmValidationData.validUntil;\n\n    if (validAfter < pmValidAfter) validAfter = pmValidAfter;\n    if (validUntil > pmValidUntil) validUntil = pmValidUntil;\n    return ValidationData(aggregator, validAfter, validUntil);\n}\n\n/**\n * Helper to pack the return value for validateUserOp.\n * @param data - The ValidationData to pack.\n */\nfunction _packValidationData(\n    ValidationData memory data\n) pure returns (uint256) {\n    return\n        uint160(data.aggregator) |\n        (uint256(data.validUntil) << 160) |\n        (uint256(data.validAfter) << (160 + 48));\n}\n\n/**\n * Helper to pack the return value for validateUserOp, when not using an aggregator.\n * @param sigFailed  - True for signature failure, false for success.\n * @param validUntil - Last timestamp this UserOperation is valid (or zero for infinite).\n * @param validAfter - First timestamp this UserOperation is valid.\n */\nfunction _packValidationData(\n    bool sigFailed,\n    uint48 validUntil,\n    uint48 validAfter\n) pure returns (uint256) {\n    return\n        (sigFailed ? 1 : 0) |\n        (uint256(validUntil) << 160) |\n        (uint256(validAfter) << (160 + 48));\n}\n\n/**\n * keccak function over calldata.\n * @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it.\n */\n    function calldataKeccak(bytes calldata data) pure returns (bytes32 ret) {\n        assembly (\"memory-safe\") {\n            let mem := mload(0x40)\n            let len := data.length\n            calldatacopy(mem, data.offset, len)\n            ret := keccak256(mem, len)\n        }\n    }\n\n\n/**\n * The minimum of two numbers.\n * @param a - First number.\n * @param b - Second number.\n */\n    function min(uint256 a, uint256 b) pure returns (uint256) {\n        return a < b ? a : b;\n    }\n"},"contracts/core/NonceManager.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\nimport \"../interfaces/IEntryPoint.sol\";\n\n/**\n * nonce management functionality\n */\nabstract contract NonceManager is INonceManager {\n\n    /**\n     * The next valid sequence number for a given nonce key.\n     */\n    mapping(address => mapping(uint192 => uint256)) public nonceSequenceNumber;\n\n    function getNonce(address sender, uint192 key)\n    public view override returns (uint256 nonce) {\n        return nonceSequenceNumber[sender][key] | (uint256(key) << 64);\n    }\n\n    // allow an account to manually increment its own nonce.\n    // (mainly so that during construction nonce can be made non-zero,\n    // to \"absorb\" the gas cost of first nonce increment to 1st transaction (construction),\n    // not to 2nd transaction)\n    function incrementNonce(uint192 key) public override {\n        nonceSequenceNumber[msg.sender][key]++;\n    }\n\n    /**\n     * validate nonce uniqueness for this account.\n     * called just after validateUserOp()\n     */\n    function _validateAndUpdateNonce(address sender, uint256 nonce) internal returns (bool) {\n\n        uint192 key = uint192(nonce >> 64);\n        uint64 seq = uint64(nonce);\n        return nonceSequenceNumber[sender][key]++ == seq;\n    }\n\n}\n"},"contracts/core/SenderCreator.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\n/**\n * Helper contract for EntryPoint, to call userOp.initCode from a \"neutral\" address,\n * which is explicitly not the entryPoint itself.\n */\ncontract SenderCreator {\n    /**\n     * Call the \"initCode\" factory to create and return the sender account address.\n     * @param initCode - The initCode value from a UserOp. contains 20 bytes of factory address,\n     *                   followed by calldata.\n     * @return sender  - The returned address of the created account, or zero address on failure.\n     */\n    function createSender(\n        bytes calldata initCode\n    ) external returns (address sender) {\n        address factory = address(bytes20(initCode[0:20]));\n        bytes memory initCallData = initCode[20:];\n        bool success;\n        /* solhint-disable no-inline-assembly */\n        assembly (\"memory-safe\") {\n            success := call(\n                gas(),\n                factory,\n                0,\n                add(initCallData, 0x20),\n                mload(initCallData),\n                0,\n                32\n            )\n            sender := mload(0)\n        }\n        if (!success) {\n            sender = address(0);\n        }\n    }\n}\n"},"contracts/core/StakeManager.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.12;\n\nimport \"../interfaces/IStakeManager.sol\";\n\n/* solhint-disable avoid-low-level-calls */\n/* solhint-disable not-rely-on-time */\n\n/**\n * Manage deposits and stakes.\n * Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account).\n * Stake is value locked for at least \"unstakeDelay\" by a paymaster.\n */\nabstract contract StakeManager is IStakeManager {\n    /// maps paymaster to their deposits and stakes\n    mapping(address => DepositInfo) public deposits;\n\n    /// @inheritdoc IStakeManager\n    function getDepositInfo(\n        address account\n    ) public view returns (DepositInfo memory info) {\n        return deposits[account];\n    }\n\n    /**\n     * Internal method to return just the stake info.\n     * @param addr - The account to query.\n     */\n    function _getStakeInfo(\n        address addr\n    ) internal view returns (StakeInfo memory info) {\n        DepositInfo storage depositInfo = deposits[addr];\n        info.stake = depositInfo.stake;\n        info.unstakeDelaySec = depositInfo.unstakeDelaySec;\n    }\n\n    /**\n     * Return the deposit (for gas payment) of the account.\n     * @param account - The account to query.\n     */\n    function balanceOf(address account) public view returns (uint256) {\n        return deposits[account].deposit;\n    }\n\n    receive() external payable {\n        depositTo(msg.sender);\n    }\n\n    /**\n     * Increments an account's deposit.\n     * @param account - The account to increment.\n     * @param amount  - The amount to increment by.\n     */\n    function _incrementDeposit(address account, uint256 amount) internal returns (uint256) {\n        DepositInfo storage info = deposits[account];\n        uint256 newAmount = info.deposit + amount;\n        info.deposit = newAmount;\n        return newAmount;\n    }\n\n    /**\n     * Add to the deposit of the given account.\n     * @param account - The account to add to.\n     */\n    function depositTo(address account) public virtual payable {\n        uint256 newDeposit = _incrementDeposit(account, msg.value);\n        emit Deposited(account, newDeposit);\n    }\n\n    /**\n     * Add to the account's stake - amount and delay\n     * any pending unstake is first cancelled.\n     * @param unstakeDelaySec The new lock duration before the deposit can be withdrawn.\n     */\n    function addStake(uint32 unstakeDelaySec) public payable {\n        DepositInfo storage info = deposits[msg.sender];\n        require(unstakeDelaySec > 0, \"must specify unstake delay\");\n        require(\n            unstakeDelaySec >= info.unstakeDelaySec,\n            \"cannot decrease unstake time\"\n        );\n        uint256 stake = info.stake + msg.value;\n        require(stake > 0, \"no stake specified\");\n        require(stake <= type(uint112).max, \"stake overflow\");\n        deposits[msg.sender] = DepositInfo(\n            info.deposit,\n            true,\n            uint112(stake),\n            unstakeDelaySec,\n            0\n        );\n        emit StakeLocked(msg.sender, stake, unstakeDelaySec);\n    }\n\n    /**\n     * Attempt to unlock the stake.\n     * The value can be withdrawn (using withdrawStake) after the unstake delay.\n     */\n    function unlockStake() external {\n        DepositInfo storage info = deposits[msg.sender];\n        require(info.unstakeDelaySec != 0, \"not staked\");\n        require(info.staked, \"already unstaking\");\n        uint48 withdrawTime = uint48(block.timestamp) + info.unstakeDelaySec;\n        info.withdrawTime = withdrawTime;\n        info.staked = false;\n        emit StakeUnlocked(msg.sender, withdrawTime);\n    }\n\n    /**\n     * Withdraw from the (unlocked) stake.\n     * Must first call unlockStake and wait for the unstakeDelay to pass.\n     * @param withdrawAddress - The address to send withdrawn value.\n     */\n    function withdrawStake(address payable withdrawAddress) external {\n        DepositInfo storage info = deposits[msg.sender];\n        uint256 stake = info.stake;\n        require(stake > 0, \"No stake to withdraw\");\n        require(info.withdrawTime > 0, \"must call unlockStake() first\");\n        require(\n            info.withdrawTime <= block.timestamp,\n            \"Stake withdrawal is not due\"\n        );\n        info.unstakeDelaySec = 0;\n        info.withdrawTime = 0;\n        info.stake = 0;\n        emit StakeWithdrawn(msg.sender, withdrawAddress, stake);\n        (bool success,) = withdrawAddress.call{value: stake}(\"\");\n        require(success, \"failed to withdraw stake\");\n    }\n\n    /**\n     * Withdraw from the deposit.\n     * @param withdrawAddress - The address to send withdrawn value.\n     * @param withdrawAmount  - The amount to withdraw.\n     */\n    function withdrawTo(\n        address payable withdrawAddress,\n        uint256 withdrawAmount\n    ) external {\n        DepositInfo storage info = deposits[msg.sender];\n        require(withdrawAmount <= info.deposit, \"Withdraw amount too large\");\n        info.deposit = info.deposit - withdrawAmount;\n        emit Withdrawn(msg.sender, withdrawAddress, withdrawAmount);\n        (bool success,) = withdrawAddress.call{value: withdrawAmount}(\"\");\n        require(success, \"failed to withdraw\");\n    }\n}\n"},"contracts/core/UserOperationLib.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\n/* solhint-disable no-inline-assembly */\n\nimport \"../interfaces/PackedUserOperation.sol\";\nimport {calldataKeccak, min} from \"./Helpers.sol\";\n\n/**\n * Utility functions helpful when working with UserOperation structs.\n */\nlibrary UserOperationLib {\n\n    uint256 public constant PAYMASTER_VALIDATION_GAS_OFFSET = 20;\n    uint256 public constant PAYMASTER_POSTOP_GAS_OFFSET = 36;\n    uint256 public constant PAYMASTER_DATA_OFFSET = 52;\n    /**\n     * Get sender from user operation data.\n     * @param userOp - The user operation data.\n     */\n    function getSender(\n        PackedUserOperation calldata userOp\n    ) internal pure returns (address) {\n        address data;\n        //read sender from userOp, which is first userOp member (saves 800 gas...)\n        assembly {\n            data := calldataload(userOp)\n        }\n        return address(uint160(data));\n    }\n\n    /**\n     * Relayer/block builder might submit the TX with higher priorityFee,\n     * but the user should not pay above what he signed for.\n     * @param userOp - The user operation data.\n     */\n    function gasPrice(\n        PackedUserOperation calldata userOp\n    ) internal view returns (uint256) {\n        unchecked {\n            uint256 maxFeePerGas = userOp.maxFeePerGas;\n            uint256 maxPriorityFeePerGas = userOp.maxPriorityFeePerGas;\n            if (maxFeePerGas == maxPriorityFeePerGas) {\n                //legacy mode (for networks that don't support basefee opcode)\n                return maxFeePerGas;\n            }\n            return min(maxFeePerGas, maxPriorityFeePerGas + block.basefee);\n        }\n    }\n\n    /**\n     * Pack the user operation data into bytes for hashing.\n     * @param userOp - The user operation data.\n     */\n    function encode(\n        PackedUserOperation calldata userOp\n    ) internal pure returns (bytes memory ret) {\n        address sender = getSender(userOp);\n        uint256 nonce = userOp.nonce;\n        bytes32 hashInitCode = calldataKeccak(userOp.initCode);\n        bytes32 hashCallData = calldataKeccak(userOp.callData);\n        bytes32 accountGasLimits = userOp.accountGasLimits;\n        uint256 preVerificationGas = userOp.preVerificationGas;\n        uint256 maxFeePerGas = userOp.maxFeePerGas;\n        uint256 maxPriorityFeePerGas = userOp.maxPriorityFeePerGas;\n        bytes32 hashPaymasterAndData = calldataKeccak(userOp.paymasterAndData);\n\n        return abi.encode(\n            sender, nonce,\n            hashInitCode, hashCallData,\n            accountGasLimits, preVerificationGas,\n            maxFeePerGas, maxPriorityFeePerGas,\n            hashPaymasterAndData\n        );\n    }\n\n    function unpackAccountGasLimits(\n        bytes32 accountGasLimits\n    ) internal pure returns (uint256 validationGasLimit, uint256 callGasLimit) {\n        return (uint128(bytes16(accountGasLimits)), uint128(uint256(accountGasLimits)));\n    }\n\n    function unpackPaymasterStaticFields(\n        bytes calldata paymasterAndData\n    ) internal pure returns (address paymaster, uint256 validationGasLimit, uint256 postOp) {\n        return (\n            address(bytes20(paymasterAndData[: PAYMASTER_VALIDATION_GAS_OFFSET])),\n            uint128(bytes16(paymasterAndData[PAYMASTER_VALIDATION_GAS_OFFSET : PAYMASTER_POSTOP_GAS_OFFSET])),\n            uint128(bytes16(paymasterAndData[PAYMASTER_POSTOP_GAS_OFFSET : PAYMASTER_DATA_OFFSET]))\n        );\n    }\n\n    /**\n     * Hash the user operation data.\n     * @param userOp - The user operation data.\n     */\n    function hash(\n        PackedUserOperation calldata userOp\n    ) internal pure returns (bytes32) {\n        return keccak256(encode(userOp));\n    }\n}\n"},"contracts/interfaces/IAccount.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\nimport \"./PackedUserOperation.sol\";\n\ninterface IAccount {\n    /**\n     * Validate user's signature and nonce\n     * the entryPoint will make the call to the recipient only if this validation call returns successfully.\n     * signature failure should be reported by returning SIG_VALIDATION_FAILED (1).\n     * This allows making a \"simulation call\" without a valid signature\n     * Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\n     *\n     * @dev Must validate caller is the entryPoint.\n     *      Must validate the signature and nonce\n     * @param userOp              - The operation that is about to be executed.\n     * @param userOpHash          - Hash of the user's request data. can be used as the basis for signature.\n     * @param missingAccountFunds - Missing funds on the account's deposit in the entrypoint.\n     *                              This is the minimum amount to transfer to the sender(entryPoint) to be\n     *                              able to make the call. The excess is left as a deposit in the entrypoint\n     *                              for future calls. Can be withdrawn anytime using \"entryPoint.withdrawTo()\".\n     *                              In case there is a paymaster in the request (or the current deposit is high\n     *                              enough), this value will be zero.\n     * @return validationData       - Packaged ValidationData structure. use `_packValidationData` and\n     *                              `_unpackValidationData` to encode and decode.\n     *                              <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n     *                                 otherwise, an address of an \"authorizer\" contract.\n     *                              <6-byte> validUntil - Last timestamp this operation is valid. 0 for \"indefinite\"\n     *                              <6-byte> validAfter - First timestamp this operation is valid\n     *                                                    If an account doesn't use time-range, it is enough to\n     *                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.\n     *                              Note that the validation code cannot use block.timestamp (or block.number) directly.\n     */\n    function validateUserOp(\n        PackedUserOperation calldata userOp,\n        bytes32 userOpHash,\n        uint256 missingAccountFunds\n    ) external returns (uint256 validationData);\n}\n"},"contracts/interfaces/IAccountExecute.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\nimport \"./PackedUserOperation.sol\";\n\ninterface IAccountExecute {\n    /**\n     * Account may implement this execute method.\n     * passing this methodSig at the beginning of callData will cause the entryPoint to pass the full UserOp (and hash)\n     * to the account.\n     * The account should skip the methodSig, and use the callData (and optionally, other UserOp fields)\n     *\n     * @param userOp              - The operation that was just validated.\n     * @param userOpHash          - Hash of the user's request data.\n     */\n    function executeUserOp(\n        PackedUserOperation calldata userOp,\n        bytes32 userOpHash\n    ) external;\n}\n"},"contracts/interfaces/IAggregator.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\nimport \"./PackedUserOperation.sol\";\n\n/**\n * Aggregated Signatures validator.\n */\ninterface IAggregator {\n    /**\n     * Validate aggregated signature.\n     * Revert if the aggregated signature does not match the given list of operations.\n     * @param userOps   - Array of UserOperations to validate the signature for.\n     * @param signature - The aggregated signature.\n     */\n    function validateSignatures(\n        PackedUserOperation[] calldata userOps,\n        bytes calldata signature\n    ) external view;\n\n    /**\n     * Validate signature of a single userOp.\n     * This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation\n     * First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\n     * @param userOp        - The userOperation received from the user.\n     * @return sigForUserOp - The value to put into the signature field of the userOp when calling handleOps.\n     *                        (usually empty, unless account and aggregator support some kind of \"multisig\".\n     */\n    function validateUserOpSignature(\n        PackedUserOperation calldata userOp\n    ) external view returns (bytes memory sigForUserOp);\n\n    /**\n     * Aggregate multiple signatures into a single value.\n     * This method is called off-chain to calculate the signature to pass with handleOps()\n     * bundler MAY use optimized custom code perform this aggregation.\n     * @param userOps              - Array of UserOperations to collect the signatures from.\n     * @return aggregatedSignature - The aggregated signature.\n     */\n    function aggregateSignatures(\n        PackedUserOperation[] calldata userOps\n    ) external view returns (bytes memory aggregatedSignature);\n}\n"},"contracts/interfaces/IEntryPoint.sol":{"content":"/**\n ** Account-Abstraction (EIP-4337) singleton EntryPoint implementation.\n ** Only one instance required on each chain.\n **/\n// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\n/* solhint-disable avoid-low-level-calls */\n/* solhint-disable no-inline-assembly */\n/* solhint-disable reason-string */\n\nimport \"./PackedUserOperation.sol\";\nimport \"./IStakeManager.sol\";\nimport \"./IAggregator.sol\";\nimport \"./INonceManager.sol\";\n\ninterface IEntryPoint is IStakeManager, INonceManager {\n    /***\n     * An event emitted after each successful request.\n     * @param userOpHash    - Unique identifier for the request (hash its entire content, except signature).\n     * @param sender        - The account that generates this request.\n     * @param paymaster     - If non-null, the paymaster that pays for this request.\n     * @param nonce         - The nonce value from the request.\n     * @param success       - True if the sender transaction succeeded, false if reverted.\n     * @param actualGasCost - Actual amount paid (by account or paymaster) for this UserOperation.\n     * @param actualGasUsed - Total gas used by this UserOperation (including preVerification, creation,\n     *                        validation and execution).\n     */\n    event UserOperationEvent(\n        bytes32 indexed userOpHash,\n        address indexed sender,\n        address indexed paymaster,\n        uint256 nonce,\n        bool success,\n        uint256 actualGasCost,\n        uint256 actualGasUsed\n    );\n\n    /**\n     * Account \"sender\" was deployed.\n     * @param userOpHash - The userOp that deployed this account. UserOperationEvent will follow.\n     * @param sender     - The account that is deployed\n     * @param factory    - The factory used to deploy this account (in the initCode)\n     * @param paymaster  - The paymaster used by this UserOp\n     */\n    event AccountDeployed(\n        bytes32 indexed userOpHash,\n        address indexed sender,\n        address factory,\n        address paymaster\n    );\n\n    /**\n     * An event emitted if the UserOperation \"callData\" reverted with non-zero length.\n     * @param userOpHash   - The request unique identifier.\n     * @param sender       - The sender of this request.\n     * @param nonce        - The nonce used in the request.\n     * @param revertReason - The return bytes from the (reverted) call to \"callData\".\n     */\n    event UserOperationRevertReason(\n        bytes32 indexed userOpHash,\n        address indexed sender,\n        uint256 nonce,\n        bytes revertReason\n    );\n\n    /**\n     * An event emitted if the UserOperation Paymaster's \"postOp\" call reverted with non-zero length.\n     * @param userOpHash   - The request unique identifier.\n     * @param sender       - The sender of this request.\n     * @param nonce        - The nonce used in the request.\n     * @param revertReason - The return bytes from the (reverted) call to \"callData\".\n     */\n    event PostOpRevertReason(\n        bytes32 indexed userOpHash,\n        address indexed sender,\n        uint256 nonce,\n        bytes revertReason\n    );\n\n    /**\n     * An event emitted by handleOps(), before starting the execution loop.\n     * Any event emitted before this event, is part of the validation.\n     */\n    event BeforeExecution();\n\n    /**\n     * Signature aggregator used by the following UserOperationEvents within this bundle.\n     * @param aggregator - The aggregator used for the following UserOperationEvents.\n     */\n    event SignatureAggregatorChanged(address indexed aggregator);\n\n    /**\n     * A custom revert error of handleOps, to identify the offending op.\n     * Should be caught in off-chain handleOps simulation and not happen on-chain.\n     * Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\n     * NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\n     * @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\n     * @param reason  - Revert reason. The string starts with a unique code \"AAmn\",\n     *                  where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\n     *                  so a failure can be attributed to the correct entity.\n     */\n    error FailedOp(uint256 opIndex, string reason);\n\n    /**\n     * A custom revert error of handleOps, to report a revert by account or paymaster.\n     * @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\n     * @param reason  - Revert reason. see FailedOp(uint,string), above\n     * @param inner   - data from inner cought revert reason\n     * @dev note that inner is truncated to 2048 bytes\n     */\n    error FailedOpWithRevert(uint256 opIndex, string reason, bytes inner);\n\n    error PostOpReverted(bytes returnData);\n\n    /**\n     * Error case when a signature aggregator fails to verify the aggregated signature it had created.\n     * @param aggregator The aggregator that failed to verify the signature\n     */\n    error SignatureValidationFailed(address aggregator);\n\n    // Return value of getSenderAddress.\n    error SenderAddressResult(address sender);\n\n    // UserOps handled, per aggregator.\n    struct UserOpsPerAggregator {\n        PackedUserOperation[] userOps;\n        // Aggregator address\n        IAggregator aggregator;\n        // Aggregated signature\n        bytes signature;\n    }\n\n    /**\n     * Execute a batch of UserOperations.\n     * No signature aggregator is used.\n     * If any account requires an aggregator (that is, it returned an aggregator when\n     * performing simulateValidation), then handleAggregatedOps() must be used instead.\n     * @param ops         - The operations to execute.\n     * @param beneficiary - The address to receive the fees.\n     */\n    function handleOps(\n        PackedUserOperation[] calldata ops,\n        address payable beneficiary\n    ) external;\n\n    /**\n     * Execute a batch of UserOperation with Aggregators\n     * @param opsPerAggregator - The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\n     * @param beneficiary      - The address to receive the fees.\n     */\n    function handleAggregatedOps(\n        UserOpsPerAggregator[] calldata opsPerAggregator,\n        address payable beneficiary\n    ) external;\n\n    /**\n     * Generate a request Id - unique identifier for this request.\n     * The request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\n     * @param userOp - The user operation to generate the request ID for.\n     */\n    function getUserOpHash(\n        PackedUserOperation calldata userOp\n    ) external view returns (bytes32);\n\n    /**\n     * Gas and return values during simulation.\n     * @param preOpGas         - The gas used for validation (including preValidationGas)\n     * @param prefund          - The required prefund for this operation\n     * @param sigFailed        - ValidateUserOp's (or paymaster's) signature check failed\n     * @param validAfter       - First timestamp this UserOp is valid (merging account and paymaster time-range)\n     * @param validUntil       - Last timestamp this UserOp is valid (merging account and paymaster time-range)\n     * @param paymasterContext - Returned by validatePaymasterUserOp (to be passed into postOp)\n     */\n    struct ReturnInfo {\n        uint256 preOpGas;\n        uint256 prefund;\n        bool sigFailed;\n        uint48 validAfter;\n        uint48 validUntil;\n        bytes paymasterContext;\n    }\n\n    /**\n     * Returned aggregated signature info:\n     * The aggregator returned by the account, and its current stake.\n     */\n    struct AggregatorStakeInfo {\n        address aggregator;\n        StakeInfo stakeInfo;\n    }\n\n    /**\n     * Get counterfactual sender address.\n     * Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n     * This method always revert, and returns the address in SenderAddressResult error\n     * @param initCode - The constructor code to be passed into the UserOperation.\n     */\n    function getSenderAddress(bytes memory initCode) external;\n\n    error DelegateAndRevert(bool success, bytes ret);\n\n    /**\n     * Helper method for dry-run testing.\n     * @dev calling this method, the EntryPoint will make a delegatecall to the given data, and report (via revert) the result.\n     *  The method always revert, so is only useful off-chain for dry run calls, in cases where state-override to replace\n     *  actual EntryPoint code is less convenient.\n     */\n    function delegateAndRevert(address target, bytes calldata data) external;\n}\n"},"contracts/interfaces/INonceManager.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\ninterface INonceManager {\n\n    /**\n     * Return the next nonce for this sender.\n     * Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\n     * But UserOp with different keys can come with arbitrary order.\n     *\n     * @param sender the account address\n     * @param key the high 192 bit of the nonce\n     * @return nonce a full nonce to pass for next UserOp with this sender.\n     */\n    function getNonce(address sender, uint192 key)\n    external view returns (uint256 nonce);\n\n    /**\n     * Manually increment the nonce of the sender.\n     * This method is exposed just for completeness..\n     * Account does NOT need to call it, neither during validation, nor elsewhere,\n     * as the EntryPoint will update the nonce regardless.\n     * Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\n     * UserOperations will not pay extra for the first transaction with a given key.\n     */\n    function incrementNonce(uint192 key) external;\n}\n"},"contracts/interfaces/IPaymaster.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\nimport \"./PackedUserOperation.sol\";\n\n/**\n * The interface exposed by a paymaster contract, who agrees to pay the gas for user's operations.\n * A paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction.\n */\ninterface IPaymaster {\n    enum PostOpMode {\n        // User op succeeded.\n        opSucceeded,\n        // User op reverted. Still has to pay for gas.\n        opReverted,\n        // User op succeeded, but caused postOp to revert.\n        // Only used internally in the EntryPoint - Paymasters will not be called again.\n        postOpReverted\n    }\n\n    /**\n     * Payment validation: check if paymaster agrees to pay.\n     * Must verify sender is the entryPoint.\n     * Revert to reject this request.\n     * Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted).\n     * The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\n     * @param userOp          - The user operation.\n     * @param userOpHash      - Hash of the user's request data.\n     * @param maxCost         - The maximum cost of this transaction (based on maximum gas and gas price from userOp).\n     * @return context        - Value to send to a postOp. Zero length to signify postOp is not required.\n     * @return validationData - Signature and time-range of this operation, encoded the same as the return\n     *                          value of validateUserOperation.\n     *                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n     *                                                    otherwise, an address of an \"authorizer\" contract.\n     *                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n     *                          <6-byte> validAfter - first timestamp this operation is valid\n     *                          Note that the validation code cannot use block.timestamp (or block.number) directly.\n     */\n    function validatePaymasterUserOp(\n        PackedUserOperation calldata userOp,\n        bytes32 userOpHash,\n        uint256 maxCost\n    ) external returns (bytes memory context, uint256 validationData);\n\n    /**\n     * Post-operation handler.\n     * Must verify sender is the entryPoint.\n     * @param mode          - Enum with the following options:\n     *                        opSucceeded - User operation succeeded.\n     *                        opReverted  - User op reverted. still has to pay for gas.\n     *                        postOpReverted - User op succeeded, but caused postOp (in mode=opSucceeded) to revert.\n     *                                         Now this is the 2nd call, after user's op was deliberately reverted.\n     * @param context       - The context value returned by validatePaymasterUserOp\n     * @param actualGasCost - Actual gas used so far (without this postOp call).\n     * @param actualUserOpFeePerGas - the gas price this UserOp pays. This value is based on the UserOp's maxFeePerGas\n     *                        and maxPriorityFee (and basefee)\n     *                        It is not the same as tx.gasprice, which is what the bundler pays.\n     */\n    function postOp(\n        PostOpMode mode,\n        bytes calldata context,\n        uint256 actualGasCost,\n        uint256 actualUserOpFeePerGas\n    ) external;\n}\n"},"contracts/interfaces/IStakeManager.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.12;\n\n/**\n * Manage deposits and stakes.\n * Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account).\n * Stake is value locked for at least \"unstakeDelay\" by the staked entity.\n */\ninterface IStakeManager {\n    event Deposited(address indexed account, uint256 totalDeposit);\n\n    event Withdrawn(\n        address indexed account,\n        address withdrawAddress,\n        uint256 amount\n    );\n\n    // Emitted when stake or unstake delay are modified.\n    event StakeLocked(\n        address indexed account,\n        uint256 totalStaked,\n        uint256 unstakeDelaySec\n    );\n\n    // Emitted once a stake is scheduled for withdrawal.\n    event StakeUnlocked(address indexed account, uint256 withdrawTime);\n\n    event StakeWithdrawn(\n        address indexed account,\n        address withdrawAddress,\n        uint256 amount\n    );\n\n    /**\n     * @param deposit         - The entity's deposit.\n     * @param staked          - True if this entity is staked.\n     * @param stake           - Actual amount of ether staked for this entity.\n     * @param unstakeDelaySec - Minimum delay to withdraw the stake.\n     * @param withdrawTime    - First block timestamp where 'withdrawStake' will be callable, or zero if already locked.\n     * @dev Sizes were chosen so that (deposit,staked, stake) fit into one cell (used during handleOps)\n     *      and the rest fit into a 2nd cell.\n     *      - 112 bit allows for 10^15 eth\n     *      - 48 bit for full timestamp\n     *      - 32 bit allows 150 years for unstake delay\n     */\n    struct DepositInfo {\n        uint256 deposit;\n        bool staked;\n        uint112 stake;\n        uint32 unstakeDelaySec;\n        uint48 withdrawTime;\n    }\n\n    // API struct used by getStakeInfo and simulateValidation.\n    struct StakeInfo {\n        uint256 stake;\n        uint256 unstakeDelaySec;\n    }\n\n    /**\n     * Get deposit info.\n     * @param account - The account to query.\n     * @return info   - Full deposit information of given account.\n     */\n    function getDepositInfo(\n        address account\n    ) external view returns (DepositInfo memory info);\n\n    /**\n     * Get account balance.\n     * @param account - The account to query.\n     * @return        - The deposit (for gas payment) of the account.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * Add to the deposit of the given account.\n     * @param account - The account to add to.\n     */\n    function depositTo(address account) external payable;\n\n    /**\n     * Add to the account's stake - amount and delay\n     * any pending unstake is first cancelled.\n     * @param _unstakeDelaySec - The new lock duration before the deposit can be withdrawn.\n     */\n    function addStake(uint32 _unstakeDelaySec) external payable;\n\n    /**\n     * Attempt to unlock the stake.\n     * The value can be withdrawn (using withdrawStake) after the unstake delay.\n     */\n    function unlockStake() external;\n\n    /**\n     * Withdraw from the (unlocked) stake.\n     * Must first call unlockStake and wait for the unstakeDelay to pass.\n     * @param withdrawAddress - The address to send withdrawn value.\n     */\n    function withdrawStake(address payable withdrawAddress) external;\n\n    /**\n     * Withdraw from the deposit.\n     * @param withdrawAddress - The address to send withdrawn value.\n     * @param withdrawAmount  - The amount to withdraw.\n     */\n    function withdrawTo(\n        address payable withdrawAddress,\n        uint256 withdrawAmount\n    ) external;\n}\n"},"contracts/interfaces/PackedUserOperation.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\n/**\n * User Operation struct\n * @param sender                - The sender account of this request.\n * @param nonce                 - Unique value the sender uses to verify it is not a replay.\n * @param initCode              - If set, the account contract will be created by this constructor/\n * @param callData              - The method call to execute on this account.\n * @param accountGasLimits      - Packed gas limits for validateUserOp and gas limit passed to the callData method call.\n * @param preVerificationGas    - Gas not calculated by the handleOps method, but added to the gas paid.\n *                                Covers batch overhead.\n * @param maxFeePerGas          - Same as EIP-1559 gas parameter.\n * @param maxPriorityFeePerGas  - Same as EIP-1559 gas parameter.\n * @param paymasterAndData      - If set, this field holds the paymaster address, verification gas limit, postOp gas limit and paymaster-specific extra data\n *                                The paymaster will pay for the transaction instead of the sender.\n * @param signature             - Sender-verified signature over the entire request, the EntryPoint address and the chain ID.\n */\nstruct PackedUserOperation {\n    address sender;\n    uint256 nonce;\n    bytes initCode;\n    bytes callData;\n    bytes32 accountGasLimits;\n    uint256 preVerificationGas;\n    uint256 maxFeePerGas;\n    uint256 maxPriorityFeePerGas;\n    bytes paymasterAndData;\n    bytes signature;\n}\n"},"contracts/utils/Exec.sol":{"content":"// SPDX-License-Identifier: LGPL-3.0-only\npragma solidity >=0.7.5 <0.9.0;\n\n// solhint-disable no-inline-assembly\n\n/**\n * Utility functions helpful when making different kinds of contract calls in Solidity.\n */\nlibrary Exec {\n\n    function call(\n        address to,\n        uint256 value,\n        bytes memory data,\n        uint256 txGas\n    ) internal returns (bool success) {\n        assembly (\"memory-safe\") {\n            success := call(txGas, to, value, add(data, 0x20), mload(data), 0, 0)\n        }\n    }\n\n    function staticcall(\n        address to,\n        bytes memory data,\n        uint256 txGas\n    ) internal view returns (bool success) {\n        assembly (\"memory-safe\") {\n            success := staticcall(txGas, to, add(data, 0x20), mload(data), 0, 0)\n        }\n    }\n\n    function delegateCall(\n        address to,\n        bytes memory data,\n        uint256 txGas\n    ) internal returns (bool success) {\n        assembly (\"memory-safe\") {\n            success := delegatecall(txGas, to, add(data, 0x20), mload(data), 0, 0)\n        }\n    }\n\n    // get returned data from last call or calldelegate\n    function getReturnData(uint256 maxLen) internal pure returns (bytes memory returnData) {\n        assembly (\"memory-safe\") {\n            let len := returndatasize()\n            if gt(len, maxLen) {\n                len := maxLen\n            }\n            let ptr := mload(0x40)\n            mstore(0x40, add(ptr, add(len, 0x20)))\n            mstore(ptr, len)\n            returndatacopy(add(ptr, 0x20), 0, len)\n            returnData := ptr\n        }\n    }\n\n    // revert with explicit byte array (probably reverted info from call)\n    function revertWithData(bytes memory returnData) internal pure {\n        assembly (\"memory-safe\") {\n            revert(add(returnData, 32), mload(returnData))\n        }\n    }\n\n    function callAndRevert(address to, bytes memory data, uint256 maxLen) internal {\n        bool success = call(to,0,data,gasleft());\n        if (!success) {\n            revertWithData(getReturnData(maxLen));\n        }\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":1000000},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[68]},"id":69,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:0"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"135:750:0","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":68,"linearizedBaseContracts":[68],"name":"ReentrancyGuard","nameLocation":"904:15:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":5,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1699:11:0","nodeType":"VariableDeclaration","scope":68,"src":"1674:40:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3,"name":"uint256","nodeType":"ElementaryTypeName","src":"1674:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":4,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1713:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":8,"mutability":"constant","name":"ENTERED","nameLocation":"1745:7:0","nodeType":"VariableDeclaration","scope":68,"src":"1720:36:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":7,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1755:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":10,"mutability":"mutable","name":"_status","nameLocation":"1779:7:0","nodeType":"VariableDeclaration","scope":68,"src":"1763:23:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9,"name":"uint256","nodeType":"ElementaryTypeName","src":"1763:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"1793:52:0","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":13,"name":"ReentrancyGuardReentrantCall","nameLocation":"1856:28:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[],"src":"1884:2:0"},"src":"1850:37:0"},{"body":{"id":20,"nodeType":"Block","src":"1907:38:0","statements":[{"expression":{"id":18,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":16,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"1917:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":17,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"1927:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1917:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":19,"nodeType":"ExpressionStatement","src":"1917:21:0"}]},"id":21,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":14,"nodeType":"ParameterList","parameters":[],"src":"1904:2:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"1907:0:0"},"scope":68,"src":"1893:52:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":31,"nodeType":"Block","src":"2346:79:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":24,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"2356:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":25,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2356:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":26,"nodeType":"ExpressionStatement","src":"2356:21:0"},{"id":27,"nodeType":"PlaceholderStatement","src":"2387:1:0"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":28,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2398:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":29,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":30,"nodeType":"ExpressionStatement","src":"2398:20:0"}]},"documentation":{"id":22,"nodeType":"StructuredDocumentation","src":"1951:366:0","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":32,"name":"nonReentrant","nameLocation":"2331:12:0","nodeType":"ModifierDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[],"src":"2343:2:0"},"src":"2322:103:0","virtual":false,"visibility":"internal"},{"body":{"id":47,"nodeType":"Block","src":"2470:268:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":37,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":35,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2558:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":36,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"2569:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2558:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":42,"nodeType":"IfStatement","src":"2554:86:0","trueBody":{"id":41,"nodeType":"Block","src":"2578:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":38,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2599:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":39,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2599:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":40,"nodeType":"RevertStatement","src":"2592:37:0"}]}},{"expression":{"id":45,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":43,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2714:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":44,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"2724:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2714:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":46,"nodeType":"ExpressionStatement","src":"2714:17:0"}]},"id":48,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2440:19:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"2459:2:0"},"returnParameters":{"id":34,"nodeType":"ParameterList","parameters":[],"src":"2470:0:0"},"scope":68,"src":"2431:307:0","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":55,"nodeType":"Block","src":"2782:170:0","statements":[{"expression":{"id":53,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":51,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2924:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":52,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"2934:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2924:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":54,"nodeType":"ExpressionStatement","src":"2924:21:0"}]},"id":56,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2753:18:0","nodeType":"FunctionDefinition","parameters":{"id":49,"nodeType":"ParameterList","parameters":[],"src":"2771:2:0"},"returnParameters":{"id":50,"nodeType":"ParameterList","parameters":[],"src":"2782:0:0"},"scope":68,"src":"2744:208:0","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":66,"nodeType":"Block","src":"3195:42:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":64,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":62,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"3212:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":63,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3223:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3212:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":61,"id":65,"nodeType":"Return","src":"3205:25:0"}]},"documentation":{"id":57,"nodeType":"StructuredDocumentation","src":"2958:168:0","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":67,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3140:23:0","nodeType":"FunctionDefinition","parameters":{"id":58,"nodeType":"ParameterList","parameters":[],"src":"3163:2:0"},"returnParameters":{"id":61,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"3189:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":59,"name":"bool","nodeType":"ElementaryTypeName","src":"3189:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3188:6:0"},"scope":68,"src":"3131:106:0","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":69,"src":"886:2353:0","usedErrors":[13],"usedEvents":[]}],"src":"109:3131:0"},"id":0},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[92],"IERC165":[104]},"id":93,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":70,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:1"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":72,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":93,"sourceUnit":105,"src":"140:38:1","symbolAliases":[{"foreign":{"id":71,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":104,"src":"148:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":74,"name":"IERC165","nameLocations":["687:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":104,"src":"687:7:1"},"id":75,"nodeType":"InheritanceSpecifier","src":"687:7:1"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":73,"nodeType":"StructuredDocumentation","src":"180:478:1","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":92,"linearizedBaseContracts":[92,104],"name":"ERC165","nameLocation":"677:6:1","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[103],"body":{"id":90,"nodeType":"Block","src":"844:64:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":83,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":78,"src":"861:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":85,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":104,"src":"881:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$104_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$104_$","typeString":"type(contract IERC165)"}],"id":84,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"876:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":86,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"876:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$104","typeString":"type(contract IERC165)"}},"id":87,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"890:11:1","memberName":"interfaceId","nodeType":"MemberAccess","src":"876:25:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"861:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":82,"id":89,"nodeType":"Return","src":"854:47:1"}]},"documentation":{"id":76,"nodeType":"StructuredDocumentation","src":"701:56:1","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":91,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"771:17:1","nodeType":"FunctionDefinition","parameters":{"id":79,"nodeType":"ParameterList","parameters":[{"constant":false,"id":78,"mutability":"mutable","name":"interfaceId","nameLocation":"796:11:1","nodeType":"VariableDeclaration","scope":91,"src":"789:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":77,"name":"bytes4","nodeType":"ElementaryTypeName","src":"789:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"788:20:1"},"returnParameters":{"id":82,"nodeType":"ParameterList","parameters":[{"constant":false,"id":81,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":91,"src":"838:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":80,"name":"bool","nodeType":"ElementaryTypeName","src":"838:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"837:6:1"},"scope":92,"src":"762:146:1","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":93,"src":"659:251:1","usedErrors":[],"usedEvents":[]}],"src":"114:797:1"},"id":1},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[104]},"id":105,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":94,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":95,"nodeType":"StructuredDocumentation","src":"141:279:2","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":104,"linearizedBaseContracts":[104],"name":"IERC165","nameLocation":"431:7:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":96,"nodeType":"StructuredDocumentation","src":"445:340:2","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":103,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"799:17:2","nodeType":"FunctionDefinition","parameters":{"id":99,"nodeType":"ParameterList","parameters":[{"constant":false,"id":98,"mutability":"mutable","name":"interfaceId","nameLocation":"824:11:2","nodeType":"VariableDeclaration","scope":103,"src":"817:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":97,"name":"bytes4","nodeType":"ElementaryTypeName","src":"817:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"816:20:2"},"returnParameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":103,"src":"860:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":100,"name":"bool","nodeType":"ElementaryTypeName","src":"860:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"859:6:2"},"scope":104,"src":"790:76:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":105,"src":"421:447:2","usedErrors":[],"usedEvents":[]}],"src":"115:754:2"},"id":2},"contracts/core/EntryPoint.sol":{"ast":{"absolutePath":"contracts/core/EntryPoint.sol","exportedSymbols":{"EntryPoint":[2095],"Exec":[3650],"IAccount":[3151],"IAccountExecute":[3164],"IAggregator":[3198],"IEntryPoint":[3375],"INonceManager":[3394],"IPaymaster":[3431],"IStakeManager":[3535],"NonceManager":[2444],"OpenZeppelin":[117],"PackedUserOperation":[3559],"ReentrancyGuard":[68],"SenderCreator":[2491],"StakeManager":[2899],"UserOperationLib":[3134],"ValidationData":[2105],"_intersectTimeRange":[2251],"_packValidationData":[2288,2326],"_parseValidationData":[2165],"calldataKeccak":[2336],"min":[2354]},"id":2096,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":106,"literals":["solidity","^","0.8",".23"],"nodeType":"PragmaDirective","src":"36:24:3"},{"absolutePath":"contracts/interfaces/IAccount.sol","file":"../interfaces/IAccount.sol","id":107,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2096,"sourceUnit":3152,"src":"147:36:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IAccountExecute.sol","file":"../interfaces/IAccountExecute.sol","id":108,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2096,"sourceUnit":3165,"src":"184:43:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IPaymaster.sol","file":"../interfaces/IPaymaster.sol","id":109,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2096,"sourceUnit":3432,"src":"228:38:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IEntryPoint.sol","file":"../interfaces/IEntryPoint.sol","id":110,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2096,"sourceUnit":3376,"src":"267:39:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/utils/Exec.sol","file":"../utils/Exec.sol","id":111,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2096,"sourceUnit":3651,"src":"308:27:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/core/StakeManager.sol","file":"./StakeManager.sol","id":112,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2096,"sourceUnit":2900,"src":"336:28:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/core/SenderCreator.sol","file":"./SenderCreator.sol","id":113,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2096,"sourceUnit":2492,"src":"365:29:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/core/Helpers.sol","file":"./Helpers.sol","id":114,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2096,"sourceUnit":2355,"src":"395:23:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/core/NonceManager.sol","file":"./NonceManager.sol","id":115,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2096,"sourceUnit":2445,"src":"419:28:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/core/UserOperationLib.sol","file":"./UserOperationLib.sol","id":116,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2096,"sourceUnit":3135,"src":"448:32:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165.sol","id":117,"nameLocation":"656:12:3","nodeType":"ImportDirective","scope":2096,"sourceUnit":93,"src":"589:80:3","symbolAliases":[],"unitAlias":"OpenZeppelin"},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":118,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2096,"sourceUnit":69,"src":"670:59:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":119,"name":"IEntryPoint","nameLocations":["877:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":3375,"src":"877:11:3"},"id":120,"nodeType":"InheritanceSpecifier","src":"877:11:3"},{"baseName":{"id":121,"name":"StakeManager","nameLocations":["890:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":2899,"src":"890:12:3"},"id":122,"nodeType":"InheritanceSpecifier","src":"890:12:3"},{"baseName":{"id":123,"name":"NonceManager","nameLocations":["904:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":2444,"src":"904:12:3"},"id":124,"nodeType":"InheritanceSpecifier","src":"904:12:3"},{"baseName":{"id":125,"name":"ReentrancyGuard","nameLocations":["918:15:3"],"nodeType":"IdentifierPath","referencedDeclaration":68,"src":"918:15:3"},"id":126,"nodeType":"InheritanceSpecifier","src":"918:15:3"},{"baseName":{"id":127,"name":"OpenZeppelin.ERC165","nameLocations":["935:12:3","948:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":92,"src":"935:19:3"},"id":128,"nodeType":"InheritanceSpecifier","src":"935:19:3"}],"canonicalName":"EntryPoint","contractDependencies":[2491],"contractKind":"contract","fullyImplemented":true,"id":2095,"linearizedBaseContracts":[2095,92,104,68,2444,2899,3375,3394,3535],"name":"EntryPoint","nameLocation":"863:10:3","nodeType":"ContractDefinition","nodes":[{"global":false,"id":132,"libraryName":{"id":129,"name":"UserOperationLib","nameLocations":["968:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":3134,"src":"968:16:3"},"nodeType":"UsingForDirective","src":"962:47:3","typeName":{"id":131,"nodeType":"UserDefinedTypeName","pathNode":{"id":130,"name":"PackedUserOperation","nameLocations":["989:19:3"],"nodeType":"IdentifierPath","referencedDeclaration":3559,"src":"989:19:3"},"referencedDeclaration":3559,"src":"989:19:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_storage_ptr","typeString":"struct PackedUserOperation"}}},{"constant":false,"id":139,"mutability":"immutable","name":"_senderCreator","nameLocation":"1047:14:3","nodeType":"VariableDeclaration","scope":2095,"src":"1015:68:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_SenderCreator_$2491","typeString":"contract SenderCreator"},"typeName":{"id":134,"nodeType":"UserDefinedTypeName","pathNode":{"id":133,"name":"SenderCreator","nameLocations":["1015:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":2491,"src":"1015:13:3"},"referencedDeclaration":2491,"src":"1015:13:3","typeDescriptions":{"typeIdentifier":"t_contract$_SenderCreator_$2491","typeString":"contract SenderCreator"}},"value":{"arguments":[],"expression":{"argumentTypes":[],"id":137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"1064:17:3","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$__$returns$_t_contract$_SenderCreator_$2491_$","typeString":"function () returns (contract SenderCreator)"},"typeName":{"id":136,"nodeType":"UserDefinedTypeName","pathNode":{"id":135,"name":"SenderCreator","nameLocations":["1068:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":2491,"src":"1068:13:3"},"referencedDeclaration":2491,"src":"1068:13:3","typeDescriptions":{"typeIdentifier":"t_contract$_SenderCreator_$2491","typeString":"contract SenderCreator"}}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1064:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_SenderCreator_$2491","typeString":"contract SenderCreator"}},"visibility":"private"},{"body":{"id":147,"nodeType":"Block","src":"1161:38:3","statements":[{"expression":{"id":145,"name":"_senderCreator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"1178:14:3","typeDescriptions":{"typeIdentifier":"t_contract$_SenderCreator_$2491","typeString":"contract SenderCreator"}},"functionReturnParameters":144,"id":146,"nodeType":"Return","src":"1171:21:3"}]},"id":148,"implemented":true,"kind":"function","modifiers":[],"name":"senderCreator","nameLocation":"1099:13:3","nodeType":"FunctionDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[],"src":"1112:2:3"},"returnParameters":{"id":144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":148,"src":"1146:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_SenderCreator_$2491","typeString":"contract SenderCreator"},"typeName":{"id":142,"nodeType":"UserDefinedTypeName","pathNode":{"id":141,"name":"SenderCreator","nameLocations":["1146:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":2491,"src":"1146:13:3"},"referencedDeclaration":2491,"src":"1146:13:3","typeDescriptions":{"typeIdentifier":"t_contract$_SenderCreator_$2491","typeString":"contract SenderCreator"}},"visibility":"internal"}],"src":"1145:15:3"},"scope":2095,"src":"1090:109:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":true,"id":151,"mutability":"constant","name":"INNER_GAS_OVERHEAD","nameLocation":"1351:18:3","nodeType":"VariableDeclaration","scope":2095,"src":"1329:48:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":149,"name":"uint","nodeType":"ElementaryTypeName","src":"1329:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130303030","id":150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1372:5:3","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"visibility":"private"},{"constant":true,"id":154,"mutability":"constant","name":"INNER_OUT_OF_GAS","nameLocation":"1459:16:3","nodeType":"VariableDeclaration","scope":2095,"src":"1434:57:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1434:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"deaddead","id":153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"1478:13:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_f151d40b3e75f8fa1cd1fce06fa6cde57ba88f05b41b14197de40325455f967a","typeString":"literal_string hex\"deaddead\""},"value":"ޭޭ"},"visibility":"private"},{"constant":true,"id":157,"mutability":"constant","name":"REVERT_REASON_MAX_LEN","nameLocation":"1523:21:3","nodeType":"VariableDeclaration","scope":2095,"src":"1498:53:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":155,"name":"uint256","nodeType":"ElementaryTypeName","src":"1498:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32303438","id":156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1547:4:3","typeDescriptions":{"typeIdentifier":"t_rational_2048_by_1","typeString":"int_const 2048"},"value":"2048"},"visibility":"private"},{"constant":true,"id":160,"mutability":"constant","name":"PENALTY_PERCENT","nameLocation":"1582:15:3","nodeType":"VariableDeclaration","scope":2095,"src":"1557:45:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":158,"name":"uint256","nodeType":"ElementaryTypeName","src":"1557:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130","id":159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1600:2:3","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"visibility":"private"},{"constant":true,"documentation":{"id":161,"nodeType":"StructuredDocumentation","src":"1609:167:3","text":" For simulation purposes, validateUserOp (and validatePaymasterUserOp)\n must return this value in case of signature failure, instead of revert."},"functionSelector":"8f41ec5a","id":164,"mutability":"constant","name":"SIG_VALIDATION_FAILED","nameLocation":"1805:21:3","nodeType":"VariableDeclaration","scope":2095,"src":"1781:49:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1781:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1829:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"baseFunctions":[91],"body":{"id":217,"nodeType":"Block","src":"1969:493:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":173,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2105:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":175,"name":"IEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3375,"src":"2126:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IEntryPoint_$3375_$","typeString":"type(contract IEntryPoint)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IEntryPoint_$3375_$","typeString":"type(contract IEntryPoint)"}],"id":174,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2121:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2121:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IEntryPoint_$3375","typeString":"type(contract IEntryPoint)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2139:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"2121:29:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"expression":{"arguments":[{"id":179,"name":"IStakeManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"2158:13:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IStakeManager_$3535_$","typeString":"type(contract IStakeManager)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IStakeManager_$3535_$","typeString":"type(contract IStakeManager)"}],"id":178,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2153:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2153:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IStakeManager_$3535","typeString":"type(contract IStakeManager)"}},"id":181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2173:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"2153:31:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2121:63:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"expression":{"arguments":[{"id":184,"name":"INonceManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"2192:13:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_INonceManager_$3394_$","typeString":"type(contract INonceManager)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_INonceManager_$3394_$","typeString":"type(contract INonceManager)"}],"id":183,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2187:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2187:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_INonceManager_$3394","typeString":"type(contract INonceManager)"}},"id":186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2207:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"2187:31:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2121:97:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"id":188,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2120:99:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2105:114:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":190,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2235:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":192,"name":"IEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3375,"src":"2255:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IEntryPoint_$3375_$","typeString":"type(contract IEntryPoint)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IEntryPoint_$3375_$","typeString":"type(contract IEntryPoint)"}],"id":191,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2250:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2250:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IEntryPoint_$3375","typeString":"type(contract IEntryPoint)"}},"id":194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2268:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"2250:29:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2235:44:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2105:174:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":197,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2295:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":199,"name":"IStakeManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"2315:13:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IStakeManager_$3535_$","typeString":"type(contract IStakeManager)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IStakeManager_$3535_$","typeString":"type(contract IStakeManager)"}],"id":198,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2310:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2310:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IStakeManager_$3535","typeString":"type(contract IStakeManager)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2330:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"2310:31:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2295:46:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2105:236:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":204,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2357:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":206,"name":"INonceManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"2377:13:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_INonceManager_$3394_$","typeString":"type(contract INonceManager)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_INonceManager_$3394_$","typeString":"type(contract INonceManager)"}],"id":205,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2372:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2372:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_INonceManager_$3394","typeString":"type(contract INonceManager)"}},"id":208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2392:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"2372:31:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2357:46:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2105:298:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":213,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2443:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":211,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2419:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_EntryPoint_$2095_$","typeString":"type(contract super EntryPoint)"}},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2425:17:3","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":91,"src":"2419:23:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2419:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2105:350:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":172,"id":216,"nodeType":"Return","src":"2098:357:3"}]},"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"1837:36:3","text":"@inheritdoc OpenZeppelin.IERC165"},"functionSelector":"01ffc9a7","id":218,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1887:17:3","nodeType":"FunctionDefinition","overrides":{"id":169,"nodeType":"OverrideSpecifier","overrides":[],"src":"1945:8:3"},"parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"interfaceId","nameLocation":"1912:11:3","nodeType":"VariableDeclaration","scope":218,"src":"1905:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":166,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1905:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1904:20:3"},"returnParameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":218,"src":"1963:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":170,"name":"bool","nodeType":"ElementaryTypeName","src":"1963:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1962:6:3"},"scope":2095,"src":"1878:584:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":250,"nodeType":"Block","src":"2766:204:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":227,"name":"beneficiary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"2784:11:3","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2807:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2799:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"2799:7:3","typeDescriptions":{}}},"id":231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2784:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4141393020696e76616c69642062656e6566696369617279","id":233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2811:26:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_920f437a2d912d818562bb2b3dd9587067a8482ed696134ce94fa5e8d2567814","typeString":"literal_string \"AA90 invalid beneficiary\""},"value":"AA90 invalid beneficiary"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_920f437a2d912d818562bb2b3dd9587067a8482ed696134ce94fa5e8d2567814","typeString":"literal_string \"AA90 invalid beneficiary\""}],"id":226,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2776:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2776:62:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":235,"nodeType":"ExpressionStatement","src":"2776:62:3"},{"assignments":[237,null],"declarations":[{"constant":false,"id":237,"mutability":"mutable","name":"success","nameLocation":"2854:7:3","nodeType":"VariableDeclaration","scope":250,"src":"2849:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":236,"name":"bool","nodeType":"ElementaryTypeName","src":"2849:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":244,"initialValue":{"arguments":[{"hexValue":"","id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2899:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":238,"name":"beneficiary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"2867:11:3","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2879:4:3","memberName":"call","nodeType":"MemberAccess","src":"2867:16:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":240,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"2891:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2867:31:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2867:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2848:54:3"},{"expression":{"arguments":[{"id":246,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"2920:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41413931206661696c65642073656e6420746f2062656e6566696369617279","id":247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2929:33:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_321532189629d29421359a6160b174523b9558104989fb537a4f9d684a0aa1ea","typeString":"literal_string \"AA91 failed send to beneficiary\""},"value":"AA91 failed send to beneficiary"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_321532189629d29421359a6160b174523b9558104989fb537a4f9d684a0aa1ea","typeString":"literal_string \"AA91 failed send to beneficiary\""}],"id":245,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2912:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2912:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":249,"nodeType":"ExpressionStatement","src":"2912:51:3"}]},"documentation":{"id":219,"nodeType":"StructuredDocumentation","src":"2468:218:3","text":" Compensate the caller's beneficiary address with the collected fees of all UserOperations.\n @param beneficiary - The address to receive the fees.\n @param amount      - Amount to transfer."},"id":251,"implemented":true,"kind":"function","modifiers":[],"name":"_compensate","nameLocation":"2700:11:3","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":221,"mutability":"mutable","name":"beneficiary","nameLocation":"2728:11:3","nodeType":"VariableDeclaration","scope":251,"src":"2712:27:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":220,"name":"address","nodeType":"ElementaryTypeName","src":"2712:15:3","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"amount","nameLocation":"2749:6:3","nodeType":"VariableDeclaration","scope":251,"src":"2741:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":222,"name":"uint256","nodeType":"ElementaryTypeName","src":"2741:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:45:3"},"returnParameters":{"id":225,"nodeType":"ParameterList","parameters":[],"src":"2766:0:3"},"scope":2095,"src":"2691:279:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":398,"nodeType":"Block","src":"3460:2487:3","statements":[{"assignments":[266],"declarations":[{"constant":false,"id":266,"mutability":"mutable","name":"preGas","nameLocation":"3478:6:3","nodeType":"VariableDeclaration","scope":398,"src":"3470:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":265,"name":"uint256","nodeType":"ElementaryTypeName","src":"3470:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":269,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":267,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"3487:7:3","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3487:9:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3470:26:3"},{"assignments":[271],"declarations":[{"constant":false,"id":271,"mutability":"mutable","name":"context","nameLocation":"3519:7:3","nodeType":"VariableDeclaration","scope":398,"src":"3506:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":270,"name":"bytes","nodeType":"ElementaryTypeName","src":"3506:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":276,"initialValue":{"arguments":[{"expression":{"id":273,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"3554:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3561:13:3","memberName":"contextOffset","nodeType":"MemberAccess","referencedDeclaration":828,"src":"3554:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":272,"name":"getMemoryBytesFromOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"3529:24:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"}},"id":275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3529:46:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3506:69:3"},{"assignments":[278],"declarations":[{"constant":false,"id":278,"mutability":"mutable","name":"success","nameLocation":"3590:7:3","nodeType":"VariableDeclaration","scope":398,"src":"3585:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":277,"name":"bool","nodeType":"ElementaryTypeName","src":"3585:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":279,"nodeType":"VariableDeclarationStatement","src":"3585:12:3"},{"id":341,"nodeType":"Block","src":"3607:1114:3","statements":[{"assignments":[281],"declarations":[{"constant":false,"id":281,"mutability":"mutable","name":"saveFreePtr","nameLocation":"3626:11:3","nodeType":"VariableDeclaration","scope":341,"src":"3621:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint","nodeType":"ElementaryTypeName","src":"3621:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":282,"nodeType":"VariableDeclarationStatement","src":"3621:16:3"},{"AST":{"nativeSrc":"3676:58:3","nodeType":"YulBlock","src":"3676:58:3","statements":[{"nativeSrc":"3694:26:3","nodeType":"YulAssignment","src":"3694:26:3","value":{"arguments":[{"kind":"number","nativeSrc":"3715:4:3","nodeType":"YulLiteral","src":"3715:4:3","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3709:5:3","nodeType":"YulIdentifier","src":"3709:5:3"},"nativeSrc":"3709:11:3","nodeType":"YulFunctionCall","src":"3709:11:3"},"variableNames":[{"name":"saveFreePtr","nativeSrc":"3694:11:3","nodeType":"YulIdentifier","src":"3694:11:3"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":281,"isOffset":false,"isSlot":false,"src":"3694:11:3","valueSize":1}],"flags":["memory-safe"],"id":283,"nodeType":"InlineAssembly","src":"3651:83:3"},{"assignments":[285],"declarations":[{"constant":false,"id":285,"mutability":"mutable","name":"callData","nameLocation":"3762:8:3","nodeType":"VariableDeclaration","scope":341,"src":"3747:23:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":284,"name":"bytes","nodeType":"ElementaryTypeName","src":"3747:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":288,"initialValue":{"expression":{"id":286,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"3773:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3780:8:3","memberName":"callData","nodeType":"MemberAccess","referencedDeclaration":3546,"src":"3773:15:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"nodeType":"VariableDeclarationStatement","src":"3747:41:3"},{"assignments":[290],"declarations":[{"constant":false,"id":290,"mutability":"mutable","name":"innerCall","nameLocation":"3815:9:3","nodeType":"VariableDeclaration","scope":341,"src":"3802:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":289,"name":"bytes","nodeType":"ElementaryTypeName","src":"3802:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":291,"nodeType":"VariableDeclarationStatement","src":"3802:22:3"},{"assignments":[293],"declarations":[{"constant":false,"id":293,"mutability":"mutable","name":"methodSig","nameLocation":"3845:9:3","nodeType":"VariableDeclaration","scope":341,"src":"3838:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":292,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3838:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":294,"nodeType":"VariableDeclarationStatement","src":"3838:16:3"},{"AST":{"nativeSrc":"3877:171:3","nodeType":"YulBlock","src":"3877:171:3","statements":[{"nativeSrc":"3895:26:3","nodeType":"YulVariableDeclaration","src":"3895:26:3","value":{"name":"callData.length","nativeSrc":"3906:15:3","nodeType":"YulIdentifier","src":"3906:15:3"},"variables":[{"name":"len","nativeSrc":"3899:3:3","nodeType":"YulTypedName","src":"3899:3:3","type":""}]},{"body":{"nativeSrc":"3952:82:3","nodeType":"YulBlock","src":"3952:82:3","statements":[{"nativeSrc":"3974:42:3","nodeType":"YulAssignment","src":"3974:42:3","value":{"arguments":[{"name":"callData.offset","nativeSrc":"4000:15:3","nodeType":"YulIdentifier","src":"4000:15:3"}],"functionName":{"name":"calldataload","nativeSrc":"3987:12:3","nodeType":"YulIdentifier","src":"3987:12:3"},"nativeSrc":"3987:29:3","nodeType":"YulFunctionCall","src":"3987:29:3"},"variableNames":[{"name":"methodSig","nativeSrc":"3974:9:3","nodeType":"YulIdentifier","src":"3974:9:3"}]}]},"condition":{"arguments":[{"name":"len","nativeSrc":"3944:3:3","nodeType":"YulIdentifier","src":"3944:3:3"},{"kind":"number","nativeSrc":"3949:1:3","nodeType":"YulLiteral","src":"3949:1:3","type":"","value":"3"}],"functionName":{"name":"gt","nativeSrc":"3941:2:3","nodeType":"YulIdentifier","src":"3941:2:3"},"nativeSrc":"3941:10:3","nodeType":"YulFunctionCall","src":"3941:10:3"},"nativeSrc":"3938:96:3","nodeType":"YulIf","src":"3938:96:3"}]},"evmVersion":"paris","externalReferences":[{"declaration":285,"isOffset":false,"isSlot":false,"src":"3906:15:3","suffix":"length","valueSize":1},{"declaration":285,"isOffset":true,"isSlot":false,"src":"4000:15:3","suffix":"offset","valueSize":1},{"declaration":293,"isOffset":false,"isSlot":false,"src":"3974:9:3","valueSize":1}],"id":295,"nodeType":"InlineAssembly","src":"3868:180:3"},{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":296,"name":"methodSig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"4065:9:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":297,"name":"IAccountExecute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3164,"src":"4078:15:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccountExecute_$3164_$","typeString":"type(contract IAccountExecute)"}},"id":298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4094:13:3","memberName":"executeUserOp","nodeType":"MemberAccess","referencedDeclaration":3163,"src":"4078:29:3","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_PackedUserOperation_$3559_calldata_ptr_$_t_bytes32_$returns$__$","typeString":"function IAccountExecute.executeUserOp(struct PackedUserOperation calldata,bytes32)"}},"id":299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4108:8:3","memberName":"selector","nodeType":"MemberAccess","src":"4078:38:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"4065:51:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":338,"nodeType":"Block","src":"4370:108:3","statements":[{"expression":{"id":336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":326,"name":"innerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"4388:9:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":329,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4415:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_EntryPoint_$2095","typeString":"contract EntryPoint"}},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4420:13:3","memberName":"innerHandleOp","nodeType":"MemberAccess","referencedDeclaration":967,"src":"4415:18:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_struct$_UserOpInfo_$831_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory,struct EntryPoint.UserOpInfo memory,bytes memory) external returns (uint256)"}},{"components":[{"id":331,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"4436:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":332,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"4446:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},{"id":333,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"4454:7:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":334,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4435:27:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_calldata_ptr_$_t_struct$_UserOpInfo_$831_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"tuple(bytes calldata,struct EntryPoint.UserOpInfo memory,bytes memory)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_struct$_UserOpInfo_$831_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory,struct EntryPoint.UserOpInfo memory,bytes memory) external returns (uint256)"},{"typeIdentifier":"t_tuple$_t_bytes_calldata_ptr_$_t_struct$_UserOpInfo_$831_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"tuple(bytes calldata,struct EntryPoint.UserOpInfo memory,bytes memory)"}],"expression":{"id":327,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4400:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4404:10:3","memberName":"encodeCall","nodeType":"MemberAccess","src":"4400:14:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4400:63:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"4388:75:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":337,"nodeType":"ExpressionStatement","src":"4388:75:3"}]},"id":339,"nodeType":"IfStatement","src":"4061:417:3","trueBody":{"id":325,"nodeType":"Block","src":"4118:234:3","statements":[{"assignments":[302],"declarations":[{"constant":false,"id":302,"mutability":"mutable","name":"executeUserOp","nameLocation":"4149:13:3","nodeType":"VariableDeclaration","scope":325,"src":"4136:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":301,"name":"bytes","nodeType":"ElementaryTypeName","src":"4136:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":312,"initialValue":{"arguments":[{"expression":{"id":305,"name":"IAccountExecute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3164,"src":"4180:15:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccountExecute_$3164_$","typeString":"type(contract IAccountExecute)"}},"id":306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4196:13:3","memberName":"executeUserOp","nodeType":"MemberAccess","referencedDeclaration":3163,"src":"4180:29:3","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_PackedUserOperation_$3559_calldata_ptr_$_t_bytes32_$returns$__$","typeString":"function IAccountExecute.executeUserOp(struct PackedUserOperation calldata,bytes32)"}},{"components":[{"id":307,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"4212:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},{"expression":{"id":308,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"4220:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":309,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4227:10:3","memberName":"userOpHash","nodeType":"MemberAccess","referencedDeclaration":824,"src":"4220:17:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":310,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4211:27:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$_PackedUserOperation_$3559_calldata_ptr_$_t_bytes32_$","typeString":"tuple(struct PackedUserOperation calldata,bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_nonpayable$_t_struct$_PackedUserOperation_$3559_calldata_ptr_$_t_bytes32_$returns$__$","typeString":"function IAccountExecute.executeUserOp(struct PackedUserOperation calldata,bytes32)"},{"typeIdentifier":"t_tuple$_t_struct$_PackedUserOperation_$3559_calldata_ptr_$_t_bytes32_$","typeString":"tuple(struct PackedUserOperation calldata,bytes32)"}],"expression":{"id":303,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4165:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4169:10:3","memberName":"encodeCall","nodeType":"MemberAccess","src":"4165:14:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4165:74:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4136:103:3"},{"expression":{"id":323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":313,"name":"innerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"4257:9:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":316,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4284:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_EntryPoint_$2095","typeString":"contract EntryPoint"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4289:13:3","memberName":"innerHandleOp","nodeType":"MemberAccess","referencedDeclaration":967,"src":"4284:18:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_struct$_UserOpInfo_$831_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory,struct EntryPoint.UserOpInfo memory,bytes memory) external returns (uint256)"}},{"components":[{"id":318,"name":"executeUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"4305:13:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":319,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"4320:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},{"id":320,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"4328:7:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":321,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4304:32:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_struct$_UserOpInfo_$831_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"tuple(bytes memory,struct EntryPoint.UserOpInfo memory,bytes memory)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_struct$_UserOpInfo_$831_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory,struct EntryPoint.UserOpInfo memory,bytes memory) external returns (uint256)"},{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_struct$_UserOpInfo_$831_memory_ptr_$_t_bytes_memory_ptr_$","typeString":"tuple(bytes memory,struct EntryPoint.UserOpInfo memory,bytes memory)"}],"expression":{"id":314,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4269:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4273:10:3","memberName":"encodeCall","nodeType":"MemberAccess","src":"4269:14:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4269:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"4257:80:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":324,"nodeType":"ExpressionStatement","src":"4257:80:3"}]}},{"AST":{"nativeSrc":"4516:195:3","nodeType":"YulBlock","src":"4516:195:3","statements":[{"nativeSrc":"4534:83:3","nodeType":"YulAssignment","src":"4534:83:3","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"4550:3:3","nodeType":"YulIdentifier","src":"4550:3:3"},"nativeSrc":"4550:5:3","nodeType":"YulFunctionCall","src":"4550:5:3"},{"arguments":[],"functionName":{"name":"address","nativeSrc":"4557:7:3","nodeType":"YulIdentifier","src":"4557:7:3"},"nativeSrc":"4557:9:3","nodeType":"YulFunctionCall","src":"4557:9:3"},{"kind":"number","nativeSrc":"4568:1:3","nodeType":"YulLiteral","src":"4568:1:3","type":"","value":"0"},{"arguments":[{"name":"innerCall","nativeSrc":"4575:9:3","nodeType":"YulIdentifier","src":"4575:9:3"},{"kind":"number","nativeSrc":"4586:4:3","nodeType":"YulLiteral","src":"4586:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4571:3:3","nodeType":"YulIdentifier","src":"4571:3:3"},"nativeSrc":"4571:20:3","nodeType":"YulFunctionCall","src":"4571:20:3"},{"arguments":[{"name":"innerCall","nativeSrc":"4599:9:3","nodeType":"YulIdentifier","src":"4599:9:3"}],"functionName":{"name":"mload","nativeSrc":"4593:5:3","nodeType":"YulIdentifier","src":"4593:5:3"},"nativeSrc":"4593:16:3","nodeType":"YulFunctionCall","src":"4593:16:3"},{"kind":"number","nativeSrc":"4611:1:3","nodeType":"YulLiteral","src":"4611:1:3","type":"","value":"0"},{"kind":"number","nativeSrc":"4614:2:3","nodeType":"YulLiteral","src":"4614:2:3","type":"","value":"32"}],"functionName":{"name":"call","nativeSrc":"4545:4:3","nodeType":"YulIdentifier","src":"4545:4:3"},"nativeSrc":"4545:72:3","nodeType":"YulFunctionCall","src":"4545:72:3"},"variableNames":[{"name":"success","nativeSrc":"4534:7:3","nodeType":"YulIdentifier","src":"4534:7:3"}]},{"nativeSrc":"4634:21:3","nodeType":"YulAssignment","src":"4634:21:3","value":{"arguments":[{"kind":"number","nativeSrc":"4653:1:3","nodeType":"YulLiteral","src":"4653:1:3","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"4647:5:3","nodeType":"YulIdentifier","src":"4647:5:3"},"nativeSrc":"4647:8:3","nodeType":"YulFunctionCall","src":"4647:8:3"},"variableNames":[{"name":"collected","nativeSrc":"4634:9:3","nodeType":"YulIdentifier","src":"4634:9:3"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4679:4:3","nodeType":"YulLiteral","src":"4679:4:3","type":"","value":"0x40"},{"name":"saveFreePtr","nativeSrc":"4685:11:3","nodeType":"YulIdentifier","src":"4685:11:3"}],"functionName":{"name":"mstore","nativeSrc":"4672:6:3","nodeType":"YulIdentifier","src":"4672:6:3"},"nativeSrc":"4672:25:3","nodeType":"YulFunctionCall","src":"4672:25:3"},"nativeSrc":"4672:25:3","nodeType":"YulExpressionStatement","src":"4672:25:3"}]},"evmVersion":"paris","externalReferences":[{"declaration":263,"isOffset":false,"isSlot":false,"src":"4634:9:3","valueSize":1},{"declaration":290,"isOffset":false,"isSlot":false,"src":"4575:9:3","valueSize":1},{"declaration":290,"isOffset":false,"isSlot":false,"src":"4599:9:3","valueSize":1},{"declaration":281,"isOffset":false,"isSlot":false,"src":"4685:11:3","valueSize":1},{"declaration":278,"isOffset":false,"isSlot":false,"src":"4534:7:3","valueSize":1}],"flags":["memory-safe"],"id":340,"nodeType":"InlineAssembly","src":"4491:220:3"}]},{"condition":{"id":343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4734:8:3","subExpression":{"id":342,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"4735:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":397,"nodeType":"IfStatement","src":"4730:1211:3","trueBody":{"id":396,"nodeType":"Block","src":"4744:1197:3","statements":[{"assignments":[345],"declarations":[{"constant":false,"id":345,"mutability":"mutable","name":"innerRevertCode","nameLocation":"4766:15:3","nodeType":"VariableDeclaration","scope":396,"src":"4758:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":344,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4758:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":346,"nodeType":"VariableDeclarationStatement","src":"4758:23:3"},{"AST":{"nativeSrc":"4820:202:3","nodeType":"YulBlock","src":"4820:202:3","statements":[{"nativeSrc":"4838:27:3","nodeType":"YulVariableDeclaration","src":"4838:27:3","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"4849:14:3","nodeType":"YulIdentifier","src":"4849:14:3"},"nativeSrc":"4849:16:3","nodeType":"YulFunctionCall","src":"4849:16:3"},"variables":[{"name":"len","nativeSrc":"4842:3:3","nodeType":"YulTypedName","src":"4842:3:3","type":""}]},{"body":{"nativeSrc":"4896:112:3","nodeType":"YulBlock","src":"4896:112:3","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4933:1:3","nodeType":"YulLiteral","src":"4933:1:3","type":"","value":"0"},{"kind":"number","nativeSrc":"4936:1:3","nodeType":"YulLiteral","src":"4936:1:3","type":"","value":"0"},{"kind":"number","nativeSrc":"4939:2:3","nodeType":"YulLiteral","src":"4939:2:3","type":"","value":"32"}],"functionName":{"name":"returndatacopy","nativeSrc":"4918:14:3","nodeType":"YulIdentifier","src":"4918:14:3"},"nativeSrc":"4918:24:3","nodeType":"YulFunctionCall","src":"4918:24:3"},"nativeSrc":"4918:24:3","nodeType":"YulExpressionStatement","src":"4918:24:3"},{"nativeSrc":"4963:27:3","nodeType":"YulAssignment","src":"4963:27:3","value":{"arguments":[{"kind":"number","nativeSrc":"4988:1:3","nodeType":"YulLiteral","src":"4988:1:3","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"4982:5:3","nodeType":"YulIdentifier","src":"4982:5:3"},"nativeSrc":"4982:8:3","nodeType":"YulFunctionCall","src":"4982:8:3"},"variableNames":[{"name":"innerRevertCode","nativeSrc":"4963:15:3","nodeType":"YulIdentifier","src":"4963:15:3"}]}]},"condition":{"arguments":[{"kind":"number","nativeSrc":"4888:2:3","nodeType":"YulLiteral","src":"4888:2:3","type":"","value":"32"},{"name":"len","nativeSrc":"4891:3:3","nodeType":"YulIdentifier","src":"4891:3:3"}],"functionName":{"name":"eq","nativeSrc":"4885:2:3","nodeType":"YulIdentifier","src":"4885:2:3"},"nativeSrc":"4885:10:3","nodeType":"YulFunctionCall","src":"4885:10:3"},"nativeSrc":"4882:126:3","nodeType":"YulIf","src":"4882:126:3"}]},"evmVersion":"paris","externalReferences":[{"declaration":345,"isOffset":false,"isSlot":false,"src":"4963:15:3","valueSize":1}],"flags":["memory-safe"],"id":347,"nodeType":"InlineAssembly","src":"4795:227:3"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":348,"name":"innerRevertCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"5120:15:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":349,"name":"INNER_OUT_OF_GAS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":154,"src":"5139:16:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5120:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":372,"nodeType":"Block","src":"5390:261:3","statements":[{"eventCall":{"arguments":[{"expression":{"id":358,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"5453:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":359,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5460:10:3","memberName":"userOpHash","nodeType":"MemberAccess","referencedDeclaration":824,"src":"5453:17:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"expression":{"id":360,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"5492:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":361,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5499:7:3","memberName":"mUserOp","nodeType":"MemberAccess","referencedDeclaration":822,"src":"5492:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":362,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5507:6:3","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":800,"src":"5492:21:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":363,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"5535:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":364,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5542:7:3","memberName":"mUserOp","nodeType":"MemberAccess","referencedDeclaration":822,"src":"5535:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":365,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5550:5:3","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":802,"src":"5535:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":368,"name":"REVERT_REASON_MAX_LEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"5596:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":366,"name":"Exec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"5577:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Exec_$3650_$","typeString":"type(library Exec)"}},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5582:13:3","memberName":"getReturnData","nodeType":"MemberAccess","referencedDeclaration":3612,"src":"5577:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"}},"id":369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5577:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":357,"name":"PostOpRevertReason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"5413:18:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,address,uint256,bytes memory)"}},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5413:223:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":371,"nodeType":"EmitStatement","src":"5408:228:3"}]},"id":373,"nodeType":"IfStatement","src":"5116:535:3","trueBody":{"id":356,"nodeType":"Block","src":"5157:227:3","statements":[{"errorCall":{"arguments":[{"id":352,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"5342:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"41413935206f7574206f6620676173","id":353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5351:17:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_eb8aae105b33b8e3029845f6a1359760a9480648cd982f4e1c37f01a5ceaf980","typeString":"literal_string \"AA95 out of gas\""},"value":"AA95 out of gas"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_eb8aae105b33b8e3029845f6a1359760a9480648cd982f4e1c37f01a5ceaf980","typeString":"literal_string \"AA95 out of gas\""}],"id":351,"name":"FailedOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"5333:8:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory) pure"}},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5333:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":355,"nodeType":"RevertStatement","src":"5326:43:3"}]}},{"assignments":[375],"declarations":[{"constant":false,"id":375,"mutability":"mutable","name":"actualGas","nameLocation":"5673:9:3","nodeType":"VariableDeclaration","scope":396,"src":"5665:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":374,"name":"uint256","nodeType":"ElementaryTypeName","src":"5665:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":383,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":376,"name":"preGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"5685:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":377,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"5694:7:3","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5694:9:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5685:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":380,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"5706:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5713:8:3","memberName":"preOpGas","nodeType":"MemberAccess","referencedDeclaration":830,"src":"5706:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5685:36:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5665:56:3"},{"expression":{"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":384,"name":"collected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"5735:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":386,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"5779:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":387,"name":"IPaymaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"5804:10:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPaymaster_$3431_$","typeString":"type(contract IPaymaster)"}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5815:10:3","memberName":"PostOpMode","nodeType":"MemberAccess","referencedDeclaration":3402,"src":"5804:21:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PostOpMode_$3402_$","typeString":"type(enum IPaymaster.PostOpMode)"}},"id":389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5826:14:3","memberName":"postOpReverted","nodeType":"MemberAccess","referencedDeclaration":3401,"src":"5804:36:3","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3402","typeString":"enum IPaymaster.PostOpMode"}},{"id":390,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"5858:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},{"id":391,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"5882:7:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":392,"name":"actualGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"5907:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_PostOpMode_$3402","typeString":"enum IPaymaster.PostOpMode"},{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":385,"name":"_postExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"5747:14:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_enum$_PostOpMode_$3402_$_t_struct$_UserOpInfo_$831_memory_ptr_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,enum IPaymaster.PostOpMode,struct EntryPoint.UserOpInfo memory,bytes memory,uint256) returns (uint256)"}},"id":393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:183:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5735:195:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":395,"nodeType":"ExpressionStatement","src":"5735:195:3"}]}}]},"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"2976:296:3","text":" Execute a user operation.\n @param opIndex    - Index into the opInfo array.\n @param userOp     - The userOp to execute.\n @param opInfo     - The opInfo filled by validatePrepayment for this userOp.\n @return collected - The total amount this userOp paid."},"id":399,"implemented":true,"kind":"function","modifiers":[],"name":"_executeUserOp","nameLocation":"3286:14:3","nodeType":"FunctionDefinition","parameters":{"id":261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"opIndex","nameLocation":"3318:7:3","nodeType":"VariableDeclaration","scope":399,"src":"3310:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":253,"name":"uint256","nodeType":"ElementaryTypeName","src":"3310:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":257,"mutability":"mutable","name":"userOp","nameLocation":"3364:6:3","nodeType":"VariableDeclaration","scope":399,"src":"3335:35:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":256,"nodeType":"UserDefinedTypeName","pathNode":{"id":255,"name":"PackedUserOperation","nameLocations":["3335:19:3"],"nodeType":"IdentifierPath","referencedDeclaration":3559,"src":"3335:19:3"},"referencedDeclaration":3559,"src":"3335:19:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":260,"mutability":"mutable","name":"opInfo","nameLocation":"3398:6:3","nodeType":"VariableDeclaration","scope":399,"src":"3380:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo"},"typeName":{"id":259,"nodeType":"UserDefinedTypeName","pathNode":{"id":258,"name":"UserOpInfo","nameLocations":["3380:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":831,"src":"3380:10:3"},"referencedDeclaration":831,"src":"3380:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_storage_ptr","typeString":"struct EntryPoint.UserOpInfo"}},"visibility":"internal"}],"src":"3300:110:3"},"returnParameters":{"id":264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":263,"mutability":"mutable","name":"collected","nameLocation":"3449:9:3","nodeType":"VariableDeclaration","scope":399,"src":"3441:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":262,"name":"uint256","nodeType":"ElementaryTypeName","src":"3441:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3440:19:3"},"scope":2095,"src":"3277:2670:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3314],"body":{"id":506,"nodeType":"Block","src":"6111:889:3","statements":[{"assignments":[412],"declarations":[{"constant":false,"id":412,"mutability":"mutable","name":"opslen","nameLocation":"6129:6:3","nodeType":"VariableDeclaration","scope":506,"src":"6121:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":411,"name":"uint256","nodeType":"ElementaryTypeName","src":"6121:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":415,"initialValue":{"expression":{"id":413,"name":"ops","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"6138:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$3559_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation calldata[] calldata"}},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6142:6:3","memberName":"length","nodeType":"MemberAccess","src":"6138:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6121:27:3"},{"assignments":[420],"declarations":[{"constant":false,"id":420,"mutability":"mutable","name":"opInfos","nameLocation":"6178:7:3","nodeType":"VariableDeclaration","scope":506,"src":"6158:27:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpInfo_$831_memory_ptr_$dyn_memory_ptr","typeString":"struct EntryPoint.UserOpInfo[]"},"typeName":{"baseType":{"id":418,"nodeType":"UserDefinedTypeName","pathNode":{"id":417,"name":"UserOpInfo","nameLocations":["6158:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":831,"src":"6158:10:3"},"referencedDeclaration":831,"src":"6158:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_storage_ptr","typeString":"struct EntryPoint.UserOpInfo"}},"id":419,"nodeType":"ArrayTypeName","src":"6158:12:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpInfo_$831_storage_$dyn_storage_ptr","typeString":"struct EntryPoint.UserOpInfo[]"}},"visibility":"internal"}],"id":427,"initialValue":{"arguments":[{"id":425,"name":"opslen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"6205:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6188:16:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_UserOpInfo_$831_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct EntryPoint.UserOpInfo memory[] memory)"},"typeName":{"baseType":{"id":422,"nodeType":"UserDefinedTypeName","pathNode":{"id":421,"name":"UserOpInfo","nameLocations":["6192:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":831,"src":"6192:10:3"},"referencedDeclaration":831,"src":"6192:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_storage_ptr","typeString":"struct EntryPoint.UserOpInfo"}},"id":423,"nodeType":"ArrayTypeName","src":"6192:12:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpInfo_$831_storage_$dyn_storage_ptr","typeString":"struct EntryPoint.UserOpInfo[]"}}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6188:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpInfo_$831_memory_ptr_$dyn_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6158:54:3"},{"id":505,"nodeType":"UncheckedBlock","src":"6223:771:3","statements":[{"body":{"id":467,"nodeType":"Block","src":"6284:444:3","statements":[{"assignments":[440],"declarations":[{"constant":false,"id":440,"mutability":"mutable","name":"opInfo","nameLocation":"6320:6:3","nodeType":"VariableDeclaration","scope":467,"src":"6302:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo"},"typeName":{"id":439,"nodeType":"UserDefinedTypeName","pathNode":{"id":438,"name":"UserOpInfo","nameLocations":["6302:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":831,"src":"6302:10:3"},"referencedDeclaration":831,"src":"6302:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_storage_ptr","typeString":"struct EntryPoint.UserOpInfo"}},"visibility":"internal"}],"id":444,"initialValue":{"baseExpression":{"id":441,"name":"opInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"6329:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpInfo_$831_memory_ptr_$dyn_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory[] memory"}},"id":443,"indexExpression":{"id":442,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"6337:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6329:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"nodeType":"VariableDeclarationStatement","src":"6302:37:3"},{"assignments":[446,448],"declarations":[{"constant":false,"id":446,"mutability":"mutable","name":"validationData","nameLocation":"6387:14:3","nodeType":"VariableDeclaration","scope":467,"src":"6379:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":445,"name":"uint256","nodeType":"ElementaryTypeName","src":"6379:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":448,"mutability":"mutable","name":"pmValidationData","nameLocation":"6431:16:3","nodeType":"VariableDeclaration","scope":467,"src":"6423:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":447,"name":"uint256","nodeType":"ElementaryTypeName","src":"6423:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":456,"initialValue":{"arguments":[{"id":450,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"6488:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":451,"name":"ops","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"6491:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$3559_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation calldata[] calldata"}},"id":453,"indexExpression":{"id":452,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"6495:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6491:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},{"id":454,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"6499:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"},{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}],"id":449,"name":"_validatePrepayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"6468:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_struct$_PackedUserOperation_$3559_calldata_ptr_$_t_struct$_UserOpInfo_$831_memory_ptr_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,struct PackedUserOperation calldata,struct EntryPoint.UserOpInfo memory) returns (uint256,uint256)"}},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6468:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"6357:149:3"},{"expression":{"arguments":[{"id":458,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"6588:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":459,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"6611:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":460,"name":"pmValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"6647:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6693:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6685:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":461,"name":"address","nodeType":"ElementaryTypeName","src":"6685:7:3","typeDescriptions":{}}},"id":464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6685:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":457,"name":"_validateAccountAndPaymasterValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"6524:42:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,uint256,uint256,address) view"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6524:189:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":466,"nodeType":"ExpressionStatement","src":"6524:189:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":432,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"6267:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":433,"name":"opslen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"6271:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6267:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":468,"initializationExpression":{"assignments":[429],"declarations":[{"constant":false,"id":429,"mutability":"mutable","name":"i","nameLocation":"6260:1:3","nodeType":"VariableDeclaration","scope":468,"src":"6252:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":428,"name":"uint256","nodeType":"ElementaryTypeName","src":"6252:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":431,"initialValue":{"hexValue":"30","id":430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6264:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6252:13:3"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6279:3:3","subExpression":{"id":435,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"6279:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":437,"nodeType":"ExpressionStatement","src":"6279:3:3"},"nodeType":"ForStatement","src":"6247:481:3"},{"assignments":[470],"declarations":[{"constant":false,"id":470,"mutability":"mutable","name":"collected","nameLocation":"6750:9:3","nodeType":"VariableDeclaration","scope":505,"src":"6742:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":469,"name":"uint256","nodeType":"ElementaryTypeName","src":"6742:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":472,"initialValue":{"hexValue":"30","id":471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6762:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6742:21:3"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":473,"name":"BeforeExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"6782:15:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6782:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":475,"nodeType":"EmitStatement","src":"6777:22:3"},{"body":{"id":498,"nodeType":"Block","src":"6851:83:3","statements":[{"expression":{"id":496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":486,"name":"collected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"6869:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":488,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6897:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":489,"name":"ops","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"6900:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$3559_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation calldata[] calldata"}},"id":491,"indexExpression":{"id":490,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6904:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6900:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},{"baseExpression":{"id":492,"name":"opInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"6908:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpInfo_$831_memory_ptr_$dyn_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory[] memory"}},"id":494,"indexExpression":{"id":493,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6916:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6908:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"},{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}],"id":487,"name":"_executeUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"6882:14:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_struct$_PackedUserOperation_$3559_calldata_ptr_$_t_struct$_UserOpInfo_$831_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,struct PackedUserOperation calldata,struct EntryPoint.UserOpInfo memory) returns (uint256)"}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6882:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6869:50:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":497,"nodeType":"ExpressionStatement","src":"6869:50:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":480,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6834:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":481,"name":"opslen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"6838:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6834:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":499,"initializationExpression":{"assignments":[477],"declarations":[{"constant":false,"id":477,"mutability":"mutable","name":"i","nameLocation":"6827:1:3","nodeType":"VariableDeclaration","scope":499,"src":"6819:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":476,"name":"uint256","nodeType":"ElementaryTypeName","src":"6819:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":479,"initialValue":{"hexValue":"30","id":478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6831:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6819:13:3"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6846:3:3","subExpression":{"id":483,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"6846:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":485,"nodeType":"ExpressionStatement","src":"6846:3:3"},"nodeType":"ForStatement","src":"6814:120:3"},{"expression":{"arguments":[{"id":501,"name":"beneficiary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"6960:11:3","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":502,"name":"collected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"6973:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":500,"name":"_compensate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"6948:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256)"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6948:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":504,"nodeType":"ExpressionStatement","src":"6948:35:3"}]}]},"documentation":{"id":400,"nodeType":"StructuredDocumentation","src":"5953:27:3","text":"@inheritdoc IEntryPoint"},"functionSelector":"6b21db51","id":507,"implemented":true,"kind":"function","modifiers":[{"id":409,"kind":"modifierInvocation","modifierName":{"id":408,"name":"nonReentrant","nameLocations":["6098:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":32,"src":"6098:12:3"},"nodeType":"ModifierInvocation","src":"6098:12:3"}],"name":"handleOps","nameLocation":"5994:9:3","nodeType":"FunctionDefinition","parameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":404,"mutability":"mutable","name":"ops","nameLocation":"6044:3:3","nodeType":"VariableDeclaration","scope":507,"src":"6013:34:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$3559_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation[]"},"typeName":{"baseType":{"id":402,"nodeType":"UserDefinedTypeName","pathNode":{"id":401,"name":"PackedUserOperation","nameLocations":["6013:19:3"],"nodeType":"IdentifierPath","referencedDeclaration":3559,"src":"6013:19:3"},"referencedDeclaration":3559,"src":"6013:19:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_storage_ptr","typeString":"struct PackedUserOperation"}},"id":403,"nodeType":"ArrayTypeName","src":"6013:21:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$3559_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"}},"visibility":"internal"},{"constant":false,"id":406,"mutability":"mutable","name":"beneficiary","nameLocation":"6073:11:3","nodeType":"VariableDeclaration","scope":507,"src":"6057:27:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":405,"name":"address","nodeType":"ElementaryTypeName","src":"6057:15:3","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"6003:87:3"},"returnParameters":{"id":410,"nodeType":"ParameterList","parameters":[],"src":"6111:0:3"},"scope":2095,"src":"5985:1015:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[3324],"body":{"id":796,"nodeType":"Block","src":"7188:2460:3","statements":[{"assignments":[520],"declarations":[{"constant":false,"id":520,"mutability":"mutable","name":"opasLen","nameLocation":"7207:7:3","nodeType":"VariableDeclaration","scope":796,"src":"7199:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":519,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":523,"initialValue":{"expression":{"id":521,"name":"opsPerAggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"7217:16:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$3304_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator calldata[] calldata"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7234:6:3","memberName":"length","nodeType":"MemberAccess","src":"7217:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:41:3"},{"assignments":[525],"declarations":[{"constant":false,"id":525,"mutability":"mutable","name":"totalOps","nameLocation":"7258:8:3","nodeType":"VariableDeclaration","scope":796,"src":"7250:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":524,"name":"uint256","nodeType":"ElementaryTypeName","src":"7250:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":527,"initialValue":{"hexValue":"30","id":526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7269:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7250:20:3"},{"body":{"id":606,"nodeType":"Block","src":"7318:729:3","statements":[{"assignments":[540],"declarations":[{"constant":false,"id":540,"mutability":"mutable","name":"opa","nameLocation":"7362:3:3","nodeType":"VariableDeclaration","scope":606,"src":"7332:33:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$3304_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator"},"typeName":{"id":539,"nodeType":"UserDefinedTypeName","pathNode":{"id":538,"name":"UserOpsPerAggregator","nameLocations":["7332:20:3"],"nodeType":"IdentifierPath","referencedDeclaration":3304,"src":"7332:20:3"},"referencedDeclaration":3304,"src":"7332:20:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$3304_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator"}},"visibility":"internal"}],"id":544,"initialValue":{"baseExpression":{"id":541,"name":"opsPerAggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"7368:16:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$3304_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator calldata[] calldata"}},"id":543,"indexExpression":{"id":542,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"7385:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7368:19:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$3304_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator calldata"}},"nodeType":"VariableDeclarationStatement","src":"7332:55:3"},{"assignments":[549],"declarations":[{"constant":false,"id":549,"mutability":"mutable","name":"ops","nameLocation":"7432:3:3","nodeType":"VariableDeclaration","scope":606,"src":"7401:34:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$3559_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation[]"},"typeName":{"baseType":{"id":547,"nodeType":"UserDefinedTypeName","pathNode":{"id":546,"name":"PackedUserOperation","nameLocations":["7401:19:3"],"nodeType":"IdentifierPath","referencedDeclaration":3559,"src":"7401:19:3"},"referencedDeclaration":3559,"src":"7401:19:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_storage_ptr","typeString":"struct PackedUserOperation"}},"id":548,"nodeType":"ArrayTypeName","src":"7401:21:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$3559_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"}},"visibility":"internal"}],"id":552,"initialValue":{"expression":{"id":550,"name":"opa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"7438:3:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$3304_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator calldata"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7442:7:3","memberName":"userOps","nodeType":"MemberAccess","referencedDeclaration":3298,"src":"7438:11:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$3559_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation calldata[] calldata"}},"nodeType":"VariableDeclarationStatement","src":"7401:48:3"},{"assignments":[555],"declarations":[{"constant":false,"id":555,"mutability":"mutable","name":"aggregator","nameLocation":"7475:10:3","nodeType":"VariableDeclaration","scope":606,"src":"7463:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$3198","typeString":"contract IAggregator"},"typeName":{"id":554,"nodeType":"UserDefinedTypeName","pathNode":{"id":553,"name":"IAggregator","nameLocations":["7463:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":3198,"src":"7463:11:3"},"referencedDeclaration":3198,"src":"7463:11:3","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$3198","typeString":"contract IAggregator"}},"visibility":"internal"}],"id":558,"initialValue":{"expression":{"id":556,"name":"opa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"7488:3:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$3304_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator calldata"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7492:10:3","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":3301,"src":"7488:14:3","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$3198","typeString":"contract IAggregator"}},"nodeType":"VariableDeclarationStatement","src":"7463:39:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":562,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"7614:10:3","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$3198","typeString":"contract IAggregator"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IAggregator_$3198","typeString":"contract IAggregator"}],"id":561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7606:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":560,"name":"address","nodeType":"ElementaryTypeName","src":"7606:7:3","typeDescriptions":{}}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7606:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"31","id":566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7637:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7629:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":564,"name":"address","nodeType":"ElementaryTypeName","src":"7629:7:3","typeDescriptions":{}}},"id":567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7629:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7606:33:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4141393620696e76616c69642061676772656761746f72","id":569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7657:25:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c7b85d163e4e98261caeed8e321f4ec192af622f53fd084234a04b236b40e883","typeString":"literal_string \"AA96 invalid aggregator\""},"value":"AA96 invalid aggregator"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c7b85d163e4e98261caeed8e321f4ec192af622f53fd084234a04b236b40e883","typeString":"literal_string \"AA96 invalid aggregator\""}],"id":559,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7581:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7581:115:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":571,"nodeType":"ExpressionStatement","src":"7581:115:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":574,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"7723:10:3","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$3198","typeString":"contract IAggregator"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IAggregator_$3198","typeString":"contract IAggregator"}],"id":573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7715:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":572,"name":"address","nodeType":"ElementaryTypeName","src":"7715:7:3","typeDescriptions":{}}},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7715:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7746:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7738:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"7738:7:3","typeDescriptions":{}}},"id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7738:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7715:33:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":600,"nodeType":"IfStatement","src":"7711:289:3","trueBody":{"id":599,"nodeType":"Block","src":"7750:250:3","statements":[{"clauses":[{"block":{"id":587,"nodeType":"Block","src":"7883:2:3","statements":[]},"errorName":"","id":588,"nodeType":"TryCatchClause","src":"7883:2:3"},{"block":{"id":596,"nodeType":"Block","src":"7892:94:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":592,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"7955:10:3","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$3198","typeString":"contract IAggregator"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IAggregator_$3198","typeString":"contract IAggregator"}],"id":591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7947:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"7947:7:3","typeDescriptions":{}}},"id":593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7947:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":589,"name":"SignatureValidationFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"7921:25:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7921:46:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":595,"nodeType":"RevertStatement","src":"7914:53:3"}]},"errorName":"","id":597,"nodeType":"TryCatchClause","src":"7886:100:3"}],"externalCall":{"arguments":[{"id":583,"name":"ops","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"7863:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$3559_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation calldata[] calldata"}},{"expression":{"id":584,"name":"opa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"7868:3:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$3304_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator calldata"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7872:9:3","memberName":"signature","nodeType":"MemberAccess","referencedDeclaration":3303,"src":"7868:13:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$3559_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation calldata[] calldata"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":581,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"7833:10:3","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$3198","typeString":"contract IAggregator"}},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7844:18:3","memberName":"validateSignatures","nodeType":"MemberAccess","referencedDeclaration":3178,"src":"7833:29:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_array$_t_struct$_PackedUserOperation_$3559_memory_ptr_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct PackedUserOperation memory[] memory,bytes memory) view external"}},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7833:49:3","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":598,"nodeType":"TryStatement","src":"7829:157:3"}]}},{"expression":{"id":604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":601,"name":"totalOps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"8014:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":602,"name":"ops","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"8026:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$3559_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation calldata[] calldata"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8030:6:3","memberName":"length","nodeType":"MemberAccess","src":"8026:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8014:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":605,"nodeType":"ExpressionStatement","src":"8014:22:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":532,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"7300:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":533,"name":"opasLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"7304:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7300:11:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":607,"initializationExpression":{"assignments":[529],"declarations":[{"constant":false,"id":529,"mutability":"mutable","name":"i","nameLocation":"7293:1:3","nodeType":"VariableDeclaration","scope":607,"src":"7285:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":528,"name":"uint256","nodeType":"ElementaryTypeName","src":"7285:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":531,"initialValue":{"hexValue":"30","id":530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7297:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7285:13:3"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7313:3:3","subExpression":{"id":535,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"7313:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":537,"nodeType":"ExpressionStatement","src":"7313:3:3"},"nodeType":"ForStatement","src":"7280:767:3"},{"assignments":[612],"declarations":[{"constant":false,"id":612,"mutability":"mutable","name":"opInfos","nameLocation":"8077:7:3","nodeType":"VariableDeclaration","scope":796,"src":"8057:27:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpInfo_$831_memory_ptr_$dyn_memory_ptr","typeString":"struct EntryPoint.UserOpInfo[]"},"typeName":{"baseType":{"id":610,"nodeType":"UserDefinedTypeName","pathNode":{"id":609,"name":"UserOpInfo","nameLocations":["8057:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":831,"src":"8057:10:3"},"referencedDeclaration":831,"src":"8057:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_storage_ptr","typeString":"struct EntryPoint.UserOpInfo"}},"id":611,"nodeType":"ArrayTypeName","src":"8057:12:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpInfo_$831_storage_$dyn_storage_ptr","typeString":"struct EntryPoint.UserOpInfo[]"}},"visibility":"internal"}],"id":619,"initialValue":{"arguments":[{"id":617,"name":"totalOps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"8104:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8087:16:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_UserOpInfo_$831_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct EntryPoint.UserOpInfo memory[] memory)"},"typeName":{"baseType":{"id":614,"nodeType":"UserDefinedTypeName","pathNode":{"id":613,"name":"UserOpInfo","nameLocations":["8091:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":831,"src":"8091:10:3"},"referencedDeclaration":831,"src":"8091:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_storage_ptr","typeString":"struct EntryPoint.UserOpInfo"}},"id":615,"nodeType":"ArrayTypeName","src":"8091:12:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpInfo_$831_storage_$dyn_storage_ptr","typeString":"struct EntryPoint.UserOpInfo[]"}}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8087:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpInfo_$831_memory_ptr_$dyn_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8057:56:3"},{"assignments":[621],"declarations":[{"constant":false,"id":621,"mutability":"mutable","name":"opIndex","nameLocation":"8132:7:3","nodeType":"VariableDeclaration","scope":796,"src":"8124:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":620,"name":"uint256","nodeType":"ElementaryTypeName","src":"8124:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":623,"initialValue":{"hexValue":"30","id":622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8142:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8124:19:3"},{"body":{"id":704,"nodeType":"Block","src":"8191:793:3","statements":[{"assignments":[636],"declarations":[{"constant":false,"id":636,"mutability":"mutable","name":"opa","nameLocation":"8235:3:3","nodeType":"VariableDeclaration","scope":704,"src":"8205:33:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$3304_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator"},"typeName":{"id":635,"nodeType":"UserDefinedTypeName","pathNode":{"id":634,"name":"UserOpsPerAggregator","nameLocations":["8205:20:3"],"nodeType":"IdentifierPath","referencedDeclaration":3304,"src":"8205:20:3"},"referencedDeclaration":3304,"src":"8205:20:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$3304_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator"}},"visibility":"internal"}],"id":640,"initialValue":{"baseExpression":{"id":637,"name":"opsPerAggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"8241:16:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$3304_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator calldata[] calldata"}},"id":639,"indexExpression":{"id":638,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"8258:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8241:19:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$3304_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator calldata"}},"nodeType":"VariableDeclarationStatement","src":"8205:55:3"},{"assignments":[645],"declarations":[{"constant":false,"id":645,"mutability":"mutable","name":"ops","nameLocation":"8305:3:3","nodeType":"VariableDeclaration","scope":704,"src":"8274:34:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$3559_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation[]"},"typeName":{"baseType":{"id":643,"nodeType":"UserDefinedTypeName","pathNode":{"id":642,"name":"PackedUserOperation","nameLocations":["8274:19:3"],"nodeType":"IdentifierPath","referencedDeclaration":3559,"src":"8274:19:3"},"referencedDeclaration":3559,"src":"8274:19:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_storage_ptr","typeString":"struct PackedUserOperation"}},"id":644,"nodeType":"ArrayTypeName","src":"8274:21:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$3559_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"}},"visibility":"internal"}],"id":648,"initialValue":{"expression":{"id":646,"name":"opa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"8311:3:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$3304_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator calldata"}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8315:7:3","memberName":"userOps","nodeType":"MemberAccess","referencedDeclaration":3298,"src":"8311:11:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$3559_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation calldata[] calldata"}},"nodeType":"VariableDeclarationStatement","src":"8274:48:3"},{"assignments":[651],"declarations":[{"constant":false,"id":651,"mutability":"mutable","name":"aggregator","nameLocation":"8348:10:3","nodeType":"VariableDeclaration","scope":704,"src":"8336:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$3198","typeString":"contract IAggregator"},"typeName":{"id":650,"nodeType":"UserDefinedTypeName","pathNode":{"id":649,"name":"IAggregator","nameLocations":["8336:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":3198,"src":"8336:11:3"},"referencedDeclaration":3198,"src":"8336:11:3","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$3198","typeString":"contract IAggregator"}},"visibility":"internal"}],"id":654,"initialValue":{"expression":{"id":652,"name":"opa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"8361:3:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$3304_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator calldata"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8365:10:3","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":3301,"src":"8361:14:3","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$3198","typeString":"contract IAggregator"}},"nodeType":"VariableDeclarationStatement","src":"8336:39:3"},{"assignments":[656],"declarations":[{"constant":false,"id":656,"mutability":"mutable","name":"opslen","nameLocation":"8398:6:3","nodeType":"VariableDeclaration","scope":704,"src":"8390:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":655,"name":"uint256","nodeType":"ElementaryTypeName","src":"8390:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":659,"initialValue":{"expression":{"id":657,"name":"ops","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"8407:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$3559_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation calldata[] calldata"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8411:6:3","memberName":"length","nodeType":"MemberAccess","src":"8407:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8390:27:3"},{"body":{"id":702,"nodeType":"Block","src":"8468:506:3","statements":[{"assignments":[672],"declarations":[{"constant":false,"id":672,"mutability":"mutable","name":"opInfo","nameLocation":"8504:6:3","nodeType":"VariableDeclaration","scope":702,"src":"8486:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo"},"typeName":{"id":671,"nodeType":"UserDefinedTypeName","pathNode":{"id":670,"name":"UserOpInfo","nameLocations":["8486:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":831,"src":"8486:10:3"},"referencedDeclaration":831,"src":"8486:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_storage_ptr","typeString":"struct EntryPoint.UserOpInfo"}},"visibility":"internal"}],"id":676,"initialValue":{"baseExpression":{"id":673,"name":"opInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"8513:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpInfo_$831_memory_ptr_$dyn_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory[] memory"}},"id":675,"indexExpression":{"id":674,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"8521:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8513:16:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"nodeType":"VariableDeclarationStatement","src":"8486:43:3"},{"assignments":[678,680],"declarations":[{"constant":false,"id":678,"mutability":"mutable","name":"validationData","nameLocation":"8577:14:3","nodeType":"VariableDeclaration","scope":702,"src":"8569:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":677,"name":"uint256","nodeType":"ElementaryTypeName","src":"8569:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":680,"mutability":"mutable","name":"paymasterValidationData","nameLocation":"8621:23:3","nodeType":"VariableDeclaration","scope":702,"src":"8613:31:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":679,"name":"uint256","nodeType":"ElementaryTypeName","src":"8613:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":688,"initialValue":{"arguments":[{"id":682,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"8685:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":683,"name":"ops","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"8694:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$3559_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation calldata[] calldata"}},"id":685,"indexExpression":{"id":684,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"8698:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8694:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},{"id":686,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"8702:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"},{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}],"id":681,"name":"_validatePrepayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"8665:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_struct$_PackedUserOperation_$3559_calldata_ptr_$_t_struct$_UserOpInfo_$831_memory_ptr_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,struct PackedUserOperation calldata,struct EntryPoint.UserOpInfo memory) returns (uint256,uint256)"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8665:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"8547:162:3"},{"expression":{"arguments":[{"id":690,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"8791:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":691,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"8814:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":692,"name":"paymasterValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"8850:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":695,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"8903:10:3","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$3198","typeString":"contract IAggregator"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IAggregator_$3198","typeString":"contract IAggregator"}],"id":694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8895:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":693,"name":"address","nodeType":"ElementaryTypeName","src":"8895:7:3","typeDescriptions":{}}},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8895:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":689,"name":"_validateAccountAndPaymasterValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"8727:42:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,uint256,uint256,address) view"}},"id":697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8727:205:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":698,"nodeType":"ExpressionStatement","src":"8727:205:3"},{"expression":{"id":700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8950:9:3","subExpression":{"id":699,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"8950:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":701,"nodeType":"ExpressionStatement","src":"8950:9:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":664,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"8451:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":665,"name":"opslen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"8455:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8451:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":703,"initializationExpression":{"assignments":[661],"declarations":[{"constant":false,"id":661,"mutability":"mutable","name":"i","nameLocation":"8444:1:3","nodeType":"VariableDeclaration","scope":703,"src":"8436:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"8436:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":663,"initialValue":{"hexValue":"30","id":662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8448:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8436:13:3"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8463:3:3","subExpression":{"id":667,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"8463:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":669,"nodeType":"ExpressionStatement","src":"8463:3:3"},"nodeType":"ForStatement","src":"8431:543:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":628,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"8173:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":629,"name":"opasLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"8177:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8173:11:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":705,"initializationExpression":{"assignments":[625],"declarations":[{"constant":false,"id":625,"mutability":"mutable","name":"a","nameLocation":"8166:1:3","nodeType":"VariableDeclaration","scope":705,"src":"8158:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":624,"name":"uint256","nodeType":"ElementaryTypeName","src":"8158:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":627,"initialValue":{"hexValue":"30","id":626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8170:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8158:13:3"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8186:3:3","subExpression":{"id":631,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"8186:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":633,"nodeType":"ExpressionStatement","src":"8186:3:3"},"nodeType":"ForStatement","src":"8153:831:3"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":706,"name":"BeforeExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"8999:15:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8999:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":708,"nodeType":"EmitStatement","src":"8994:22:3"},{"assignments":[710],"declarations":[{"constant":false,"id":710,"mutability":"mutable","name":"collected","nameLocation":"9035:9:3","nodeType":"VariableDeclaration","scope":796,"src":"9027:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":709,"name":"uint256","nodeType":"ElementaryTypeName","src":"9027:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":712,"initialValue":{"hexValue":"30","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9047:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9027:21:3"},{"expression":{"id":715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":713,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"9058:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9068:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9058:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":716,"nodeType":"ExpressionStatement","src":"9058:11:3"},{"body":{"id":782,"nodeType":"Block","src":"9117:426:3","statements":[{"assignments":[729],"declarations":[{"constant":false,"id":729,"mutability":"mutable","name":"opa","nameLocation":"9161:3:3","nodeType":"VariableDeclaration","scope":782,"src":"9131:33:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$3304_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator"},"typeName":{"id":728,"nodeType":"UserDefinedTypeName","pathNode":{"id":727,"name":"UserOpsPerAggregator","nameLocations":["9131:20:3"],"nodeType":"IdentifierPath","referencedDeclaration":3304,"src":"9131:20:3"},"referencedDeclaration":3304,"src":"9131:20:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$3304_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator"}},"visibility":"internal"}],"id":733,"initialValue":{"baseExpression":{"id":730,"name":"opsPerAggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"9167:16:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$3304_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator calldata[] calldata"}},"id":732,"indexExpression":{"id":731,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"9184:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9167:19:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$3304_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator calldata"}},"nodeType":"VariableDeclarationStatement","src":"9131:55:3"},{"eventCall":{"arguments":[{"arguments":[{"expression":{"id":737,"name":"opa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"9240:3:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$3304_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator calldata"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9244:10:3","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":3301,"src":"9240:14:3","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$3198","typeString":"contract IAggregator"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IAggregator_$3198","typeString":"contract IAggregator"}],"id":736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9232:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":735,"name":"address","nodeType":"ElementaryTypeName","src":"9232:7:3","typeDescriptions":{}}},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9232:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":734,"name":"SignatureAggregatorChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"9205:26:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9205:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":741,"nodeType":"EmitStatement","src":"9200:56:3"},{"assignments":[746],"declarations":[{"constant":false,"id":746,"mutability":"mutable","name":"ops","nameLocation":"9301:3:3","nodeType":"VariableDeclaration","scope":782,"src":"9270:34:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$3559_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation[]"},"typeName":{"baseType":{"id":744,"nodeType":"UserDefinedTypeName","pathNode":{"id":743,"name":"PackedUserOperation","nameLocations":["9270:19:3"],"nodeType":"IdentifierPath","referencedDeclaration":3559,"src":"9270:19:3"},"referencedDeclaration":3559,"src":"9270:19:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_storage_ptr","typeString":"struct PackedUserOperation"}},"id":745,"nodeType":"ArrayTypeName","src":"9270:21:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$3559_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"}},"visibility":"internal"}],"id":749,"initialValue":{"expression":{"id":747,"name":"opa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"9307:3:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$3304_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator calldata"}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9311:7:3","memberName":"userOps","nodeType":"MemberAccess","referencedDeclaration":3298,"src":"9307:11:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$3559_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation calldata[] calldata"}},"nodeType":"VariableDeclarationStatement","src":"9270:48:3"},{"assignments":[751],"declarations":[{"constant":false,"id":751,"mutability":"mutable","name":"opslen","nameLocation":"9340:6:3","nodeType":"VariableDeclaration","scope":782,"src":"9332:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":750,"name":"uint256","nodeType":"ElementaryTypeName","src":"9332:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":754,"initialValue":{"expression":{"id":752,"name":"ops","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"9349:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$3559_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation calldata[] calldata"}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9353:6:3","memberName":"length","nodeType":"MemberAccess","src":"9349:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9332:27:3"},{"body":{"id":780,"nodeType":"Block","src":"9411:122:3","statements":[{"expression":{"id":775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":765,"name":"collected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"9429:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":767,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"9457:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":768,"name":"ops","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"9466:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$3559_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation calldata[] calldata"}},"id":770,"indexExpression":{"id":769,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"9470:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9466:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},{"baseExpression":{"id":771,"name":"opInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"9474:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpInfo_$831_memory_ptr_$dyn_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory[] memory"}},"id":773,"indexExpression":{"id":772,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"9482:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9474:16:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"},{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}],"id":766,"name":"_executeUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"9442:14:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_struct$_PackedUserOperation_$3559_calldata_ptr_$_t_struct$_UserOpInfo_$831_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256,struct PackedUserOperation calldata,struct EntryPoint.UserOpInfo memory) returns (uint256)"}},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9442:49:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9429:62:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":776,"nodeType":"ExpressionStatement","src":"9429:62:3"},{"expression":{"id":778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9509:9:3","subExpression":{"id":777,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"9509:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":779,"nodeType":"ExpressionStatement","src":"9509:9:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":759,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"9394:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":760,"name":"opslen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":751,"src":"9398:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9394:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":781,"initializationExpression":{"assignments":[756],"declarations":[{"constant":false,"id":756,"mutability":"mutable","name":"i","nameLocation":"9387:1:3","nodeType":"VariableDeclaration","scope":781,"src":"9379:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":755,"name":"uint256","nodeType":"ElementaryTypeName","src":"9379:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":758,"initialValue":{"hexValue":"30","id":757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9391:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9379:13:3"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9406:3:3","subExpression":{"id":762,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"9406:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":764,"nodeType":"ExpressionStatement","src":"9406:3:3"},"nodeType":"ForStatement","src":"9374:159:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":721,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"9099:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":722,"name":"opasLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"9103:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9099:11:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":783,"initializationExpression":{"assignments":[718],"declarations":[{"constant":false,"id":718,"mutability":"mutable","name":"a","nameLocation":"9092:1:3","nodeType":"VariableDeclaration","scope":783,"src":"9084:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":717,"name":"uint256","nodeType":"ElementaryTypeName","src":"9084:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":720,"initialValue":{"hexValue":"30","id":719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9096:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9084:13:3"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9112:3:3","subExpression":{"id":724,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"9112:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":726,"nodeType":"ExpressionStatement","src":"9112:3:3"},"nodeType":"ForStatement","src":"9079:464:3"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9592:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9584:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":785,"name":"address","nodeType":"ElementaryTypeName","src":"9584:7:3","typeDescriptions":{}}},"id":788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9584:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":784,"name":"SignatureAggregatorChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"9557:26:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9557:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":790,"nodeType":"EmitStatement","src":"9552:43:3"},{"expression":{"arguments":[{"id":792,"name":"beneficiary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"9618:11:3","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":793,"name":"collected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"9631:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":791,"name":"_compensate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"9606:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256)"}},"id":794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9606:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":795,"nodeType":"ExpressionStatement","src":"9606:35:3"}]},"documentation":{"id":508,"nodeType":"StructuredDocumentation","src":"7006:27:3","text":"@inheritdoc IEntryPoint"},"functionSelector":"ea8ad612","id":797,"implemented":true,"kind":"function","modifiers":[{"id":517,"kind":"modifierInvocation","modifierName":{"id":516,"name":"nonReentrant","nameLocations":["7175:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":32,"src":"7175:12:3"},"nodeType":"ModifierInvocation","src":"7175:12:3"}],"name":"handleAggregatedOps","nameLocation":"7047:19:3","nodeType":"FunctionDefinition","parameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":512,"mutability":"mutable","name":"opsPerAggregator","nameLocation":"7108:16:3","nodeType":"VariableDeclaration","scope":797,"src":"7076:48:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$3304_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"},"typeName":{"baseType":{"id":510,"nodeType":"UserDefinedTypeName","pathNode":{"id":509,"name":"UserOpsPerAggregator","nameLocations":["7076:20:3"],"nodeType":"IdentifierPath","referencedDeclaration":3304,"src":"7076:20:3"},"referencedDeclaration":3304,"src":"7076:20:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$3304_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator"}},"id":511,"nodeType":"ArrayTypeName","src":"7076:22:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$3304_storage_$dyn_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"}},"visibility":"internal"},{"constant":false,"id":514,"mutability":"mutable","name":"beneficiary","nameLocation":"7150:11:3","nodeType":"VariableDeclaration","scope":797,"src":"7134:27:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":513,"name":"address","nodeType":"ElementaryTypeName","src":"7134:15:3","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"7066:101:3"},"returnParameters":{"id":518,"nodeType":"ParameterList","parameters":[],"src":"7188:0:3"},"scope":2095,"src":"7038:2610:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"canonicalName":"EntryPoint.MemoryUserOp","documentation":{"id":798,"nodeType":"StructuredDocumentation","src":"9654:157:3","text":" A memory copy of UserOp static fields only.\n Excluding: callData, initCode and signature. Replacing paymasterAndData with paymaster."},"id":819,"members":[{"constant":false,"id":800,"mutability":"mutable","name":"sender","nameLocation":"9854:6:3","nodeType":"VariableDeclaration","scope":819,"src":"9846:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":799,"name":"address","nodeType":"ElementaryTypeName","src":"9846:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":802,"mutability":"mutable","name":"nonce","nameLocation":"9878:5:3","nodeType":"VariableDeclaration","scope":819,"src":"9870:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":801,"name":"uint256","nodeType":"ElementaryTypeName","src":"9870:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":804,"mutability":"mutable","name":"verificationGasLimit","nameLocation":"9901:20:3","nodeType":"VariableDeclaration","scope":819,"src":"9893:28:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":803,"name":"uint256","nodeType":"ElementaryTypeName","src":"9893:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":806,"mutability":"mutable","name":"callGasLimit","nameLocation":"9939:12:3","nodeType":"VariableDeclaration","scope":819,"src":"9931:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":805,"name":"uint256","nodeType":"ElementaryTypeName","src":"9931:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":808,"mutability":"mutable","name":"paymasterVerificationGasLimit","nameLocation":"9969:29:3","nodeType":"VariableDeclaration","scope":819,"src":"9961:37:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":807,"name":"uint256","nodeType":"ElementaryTypeName","src":"9961:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":810,"mutability":"mutable","name":"paymasterPostOpGasLimit","nameLocation":"10016:23:3","nodeType":"VariableDeclaration","scope":819,"src":"10008:31:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":809,"name":"uint256","nodeType":"ElementaryTypeName","src":"10008:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":812,"mutability":"mutable","name":"preVerificationGas","nameLocation":"10057:18:3","nodeType":"VariableDeclaration","scope":819,"src":"10049:26:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":811,"name":"uint256","nodeType":"ElementaryTypeName","src":"10049:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":814,"mutability":"mutable","name":"paymaster","nameLocation":"10093:9:3","nodeType":"VariableDeclaration","scope":819,"src":"10085:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":813,"name":"address","nodeType":"ElementaryTypeName","src":"10085:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":816,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"10120:12:3","nodeType":"VariableDeclaration","scope":819,"src":"10112:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":815,"name":"uint256","nodeType":"ElementaryTypeName","src":"10112:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":818,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"10150:20:3","nodeType":"VariableDeclaration","scope":819,"src":"10142:28:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":817,"name":"uint256","nodeType":"ElementaryTypeName","src":"10142:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"MemoryUserOp","nameLocation":"9823:12:3","nodeType":"StructDefinition","scope":2095,"src":"9816:361:3","visibility":"public"},{"canonicalName":"EntryPoint.UserOpInfo","id":831,"members":[{"constant":false,"id":822,"mutability":"mutable","name":"mUserOp","nameLocation":"10224:7:3","nodeType":"VariableDeclaration","scope":831,"src":"10211:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_storage_ptr","typeString":"struct EntryPoint.MemoryUserOp"},"typeName":{"id":821,"nodeType":"UserDefinedTypeName","pathNode":{"id":820,"name":"MemoryUserOp","nameLocations":["10211:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":819,"src":"10211:12:3"},"referencedDeclaration":819,"src":"10211:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_storage_ptr","typeString":"struct EntryPoint.MemoryUserOp"}},"visibility":"internal"},{"constant":false,"id":824,"mutability":"mutable","name":"userOpHash","nameLocation":"10249:10:3","nodeType":"VariableDeclaration","scope":831,"src":"10241:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":823,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10241:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":826,"mutability":"mutable","name":"prefund","nameLocation":"10277:7:3","nodeType":"VariableDeclaration","scope":831,"src":"10269:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":825,"name":"uint256","nodeType":"ElementaryTypeName","src":"10269:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":828,"mutability":"mutable","name":"contextOffset","nameLocation":"10302:13:3","nodeType":"VariableDeclaration","scope":831,"src":"10294:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":827,"name":"uint256","nodeType":"ElementaryTypeName","src":"10294:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":830,"mutability":"mutable","name":"preOpGas","nameLocation":"10333:8:3","nodeType":"VariableDeclaration","scope":831,"src":"10325:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":829,"name":"uint256","nodeType":"ElementaryTypeName","src":"10325:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"UserOpInfo","nameLocation":"10190:10:3","nodeType":"StructDefinition","scope":2095,"src":"10183:165:3","visibility":"public"},{"body":{"id":966,"nodeType":"Block","src":"10827:1647:3","statements":[{"assignments":[845],"declarations":[{"constant":false,"id":845,"mutability":"mutable","name":"preGas","nameLocation":"10845:6:3","nodeType":"VariableDeclaration","scope":966,"src":"10837:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":844,"name":"uint256","nodeType":"ElementaryTypeName","src":"10837:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":848,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":846,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"10854:7:3","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10854:9:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10837:26:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":850,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10881:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10885:6:3","memberName":"sender","nodeType":"MemberAccess","src":"10881:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":854,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10903:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_EntryPoint_$2095","typeString":"contract EntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EntryPoint_$2095","typeString":"contract EntryPoint"}],"id":853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10895:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":852,"name":"address","nodeType":"ElementaryTypeName","src":"10895:7:3","typeDescriptions":{}}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10895:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10881:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4141393220696e7465726e616c2063616c6c206f6e6c79","id":857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10910:25:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_bf4e5bbea2250480ca8cf3cc338d236d16fd3805a9bc8205224406394a71fe66","typeString":"literal_string \"AA92 internal call only\""},"value":"AA92 internal call only"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bf4e5bbea2250480ca8cf3cc338d236d16fd3805a9bc8205224406394a71fe66","typeString":"literal_string \"AA92 internal call only\""}],"id":849,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10873:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10873:63:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":859,"nodeType":"ExpressionStatement","src":"10873:63:3"},{"assignments":[862],"declarations":[{"constant":false,"id":862,"mutability":"mutable","name":"mUserOp","nameLocation":"10966:7:3","nodeType":"VariableDeclaration","scope":966,"src":"10946:27:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp"},"typeName":{"id":861,"nodeType":"UserDefinedTypeName","pathNode":{"id":860,"name":"MemoryUserOp","nameLocations":["10946:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":819,"src":"10946:12:3"},"referencedDeclaration":819,"src":"10946:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_storage_ptr","typeString":"struct EntryPoint.MemoryUserOp"}},"visibility":"internal"}],"id":865,"initialValue":{"expression":{"id":863,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"10976:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":864,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10983:7:3","memberName":"mUserOp","nodeType":"MemberAccess","referencedDeclaration":822,"src":"10976:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"nodeType":"VariableDeclarationStatement","src":"10946:44:3"},{"assignments":[867],"declarations":[{"constant":false,"id":867,"mutability":"mutable","name":"callGasLimit","nameLocation":"11009:12:3","nodeType":"VariableDeclaration","scope":966,"src":"11001:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":866,"name":"uint256","nodeType":"ElementaryTypeName","src":"11001:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":870,"initialValue":{"expression":{"id":868,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"11024:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":869,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11032:12:3","memberName":"callGasLimit","nodeType":"MemberAccess","referencedDeclaration":806,"src":"11024:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11001:43:3"},{"id":887,"nodeType":"UncheckedBlock","src":"11054:446:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":871,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"11180:7:3","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11180:9:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3633","id":873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11192:2:3","typeDescriptions":{"typeIdentifier":"t_rational_63_by_1","typeString":"int_const 63"},"value":"63"},"src":"11180:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3634","id":875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11197:2:3","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11180:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":877,"name":"callGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"11218:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":878,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"11249:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":879,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11257:23:3","memberName":"paymasterPostOpGasLimit","nodeType":"MemberAccess","referencedDeclaration":810,"src":"11249:31:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11218:62:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":881,"name":"INNER_GAS_OVERHEAD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"11299:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11218:99:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11180:137:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":886,"nodeType":"IfStatement","src":"11159:331:3","trueBody":{"id":885,"nodeType":"Block","src":"11332:158:3","statements":[{"AST":{"nativeSrc":"11375:101:3","nodeType":"YulBlock","src":"11375:101:3","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11404:1:3","nodeType":"YulLiteral","src":"11404:1:3","type":"","value":"0"},{"name":"INNER_OUT_OF_GAS","nativeSrc":"11407:16:3","nodeType":"YulIdentifier","src":"11407:16:3"}],"functionName":{"name":"mstore","nativeSrc":"11397:6:3","nodeType":"YulIdentifier","src":"11397:6:3"},"nativeSrc":"11397:27:3","nodeType":"YulFunctionCall","src":"11397:27:3"},"nativeSrc":"11397:27:3","nodeType":"YulExpressionStatement","src":"11397:27:3"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11452:1:3","nodeType":"YulLiteral","src":"11452:1:3","type":"","value":"0"},{"kind":"number","nativeSrc":"11455:2:3","nodeType":"YulLiteral","src":"11455:2:3","type":"","value":"32"}],"functionName":{"name":"revert","nativeSrc":"11445:6:3","nodeType":"YulIdentifier","src":"11445:6:3"},"nativeSrc":"11445:13:3","nodeType":"YulFunctionCall","src":"11445:13:3"},"nativeSrc":"11445:13:3","nodeType":"YulExpressionStatement","src":"11445:13:3"}]},"evmVersion":"paris","externalReferences":[{"declaration":154,"isOffset":false,"isSlot":false,"src":"11407:16:3","valueSize":1}],"flags":["memory-safe"],"id":884,"nodeType":"InlineAssembly","src":"11350:126:3"}]}}]},{"assignments":[892],"declarations":[{"constant":false,"id":892,"mutability":"mutable","name":"mode","nameLocation":"11532:4:3","nodeType":"VariableDeclaration","scope":966,"src":"11510:26:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3402","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":891,"nodeType":"UserDefinedTypeName","pathNode":{"id":890,"name":"IPaymaster.PostOpMode","nameLocations":["11510:10:3","11521:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":3402,"src":"11510:21:3"},"referencedDeclaration":3402,"src":"11510:21:3","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3402","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"}],"id":896,"initialValue":{"expression":{"expression":{"id":893,"name":"IPaymaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"11539:10:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPaymaster_$3431_$","typeString":"type(contract IPaymaster)"}},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11550:10:3","memberName":"PostOpMode","nodeType":"MemberAccess","referencedDeclaration":3402,"src":"11539:21:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PostOpMode_$3402_$","typeString":"type(enum IPaymaster.PostOpMode)"}},"id":895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11561:11:3","memberName":"opSucceeded","nodeType":"MemberAccess","referencedDeclaration":3399,"src":"11539:33:3","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3402","typeString":"enum IPaymaster.PostOpMode"}},"nodeType":"VariableDeclarationStatement","src":"11510:62:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":897,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"11586:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11595:6:3","memberName":"length","nodeType":"MemberAccess","src":"11586:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11604:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11586:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":946,"nodeType":"IfStatement","src":"11582:584:3","trueBody":{"id":945,"nodeType":"Block","src":"11607:559:3","statements":[{"assignments":[902],"declarations":[{"constant":false,"id":902,"mutability":"mutable","name":"success","nameLocation":"11626:7:3","nodeType":"VariableDeclaration","scope":945,"src":"11621:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":901,"name":"bool","nodeType":"ElementaryTypeName","src":"11621:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":911,"initialValue":{"arguments":[{"expression":{"id":905,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"11646:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":906,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11654:6:3","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":800,"src":"11646:14:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11662:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":908,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"11665:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":909,"name":"callGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"11675:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":903,"name":"Exec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"11636:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Exec_$3650_$","typeString":"type(library Exec)"}},"id":904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11641:4:3","memberName":"call","nodeType":"MemberAccess","referencedDeclaration":3577,"src":"11636:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory,uint256) returns (bool)"}},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11636:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"11621:67:3"},{"condition":{"id":913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11706:8:3","subExpression":{"id":912,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"11707:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":944,"nodeType":"IfStatement","src":"11702:454:3","trueBody":{"id":943,"nodeType":"Block","src":"11716:440:3","statements":[{"assignments":[915],"declarations":[{"constant":false,"id":915,"mutability":"mutable","name":"result","nameLocation":"11747:6:3","nodeType":"VariableDeclaration","scope":943,"src":"11734:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":914,"name":"bytes","nodeType":"ElementaryTypeName","src":"11734:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":920,"initialValue":{"arguments":[{"id":918,"name":"REVERT_REASON_MAX_LEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"11775:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":916,"name":"Exec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"11756:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Exec_$3650_$","typeString":"type(library Exec)"}},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11761:13:3","memberName":"getReturnData","nodeType":"MemberAccess","referencedDeclaration":3612,"src":"11756:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"}},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11756:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"11734:63:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":921,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"11819:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11826:6:3","memberName":"length","nodeType":"MemberAccess","src":"11819:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11835:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11819:17:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":936,"nodeType":"IfStatement","src":"11815:270:3","trueBody":{"id":935,"nodeType":"Block","src":"11838:247:3","statements":[{"eventCall":{"arguments":[{"expression":{"id":926,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"11916:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":927,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11923:10:3","memberName":"userOpHash","nodeType":"MemberAccess","referencedDeclaration":824,"src":"11916:17:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":928,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"11959:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":929,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11967:6:3","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":800,"src":"11959:14:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":930,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"11999:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":931,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12007:5:3","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":802,"src":"11999:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":932,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"12038:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":925,"name":"UserOperationRevertReason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"11865:25:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,address,uint256,bytes memory)"}},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11865:201:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":934,"nodeType":"EmitStatement","src":"11860:206:3"}]}},{"expression":{"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":937,"name":"mode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"12102:4:3","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3402","typeString":"enum IPaymaster.PostOpMode"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":938,"name":"IPaymaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"12109:10:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPaymaster_$3431_$","typeString":"type(contract IPaymaster)"}},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12120:10:3","memberName":"PostOpMode","nodeType":"MemberAccess","referencedDeclaration":3402,"src":"12109:21:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PostOpMode_$3402_$","typeString":"type(enum IPaymaster.PostOpMode)"}},"id":940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12131:10:3","memberName":"opReverted","nodeType":"MemberAccess","referencedDeclaration":3400,"src":"12109:32:3","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3402","typeString":"enum IPaymaster.PostOpMode"}},"src":"12102:39:3","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3402","typeString":"enum IPaymaster.PostOpMode"}},"id":942,"nodeType":"ExpressionStatement","src":"12102:39:3"}]}}]}},{"id":965,"nodeType":"UncheckedBlock","src":"12176:292:3","statements":[{"assignments":[948],"declarations":[{"constant":false,"id":948,"mutability":"mutable","name":"actualGas","nameLocation":"12208:9:3","nodeType":"VariableDeclaration","scope":965,"src":"12200:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":947,"name":"uint256","nodeType":"ElementaryTypeName","src":"12200:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":956,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":949,"name":"preGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"12220:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":950,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"12229:7:3","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12229:9:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12220:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":953,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"12241:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":954,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12248:8:3","memberName":"preOpGas","nodeType":"MemberAccess","referencedDeclaration":830,"src":"12241:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12220:36:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12200:56:3"},{"expression":{"arguments":[{"hexValue":"30","id":958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12421:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":959,"name":"mode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"12424:4:3","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3402","typeString":"enum IPaymaster.PostOpMode"}},{"id":960,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"12430:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},{"id":961,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"12438:7:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":962,"name":"actualGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"12447:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_enum$_PostOpMode_$3402","typeString":"enum IPaymaster.PostOpMode"},{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":957,"name":"_postExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"12406:14:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_enum$_PostOpMode_$3402_$_t_struct$_UserOpInfo_$831_memory_ptr_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,enum IPaymaster.PostOpMode,struct EntryPoint.UserOpInfo memory,bytes memory,uint256) returns (uint256)"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12406:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":843,"id":964,"nodeType":"Return","src":"12399:58:3"}]}]},"documentation":{"id":832,"nodeType":"StructuredDocumentation","src":"10354:301:3","text":" Inner function to handle a UserOperation.\n Must be declared \"external\" to open a call context, but it can only be called by handleOps.\n @param callData - The callData to execute.\n @param opInfo   - The UserOpInfo struct.\n @param context  - The context bytes."},"functionSelector":"0042dc53","id":967,"implemented":true,"kind":"function","modifiers":[],"name":"innerHandleOp","nameLocation":"10669:13:3","nodeType":"FunctionDefinition","parameters":{"id":840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":834,"mutability":"mutable","name":"callData","nameLocation":"10705:8:3","nodeType":"VariableDeclaration","scope":967,"src":"10692:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":833,"name":"bytes","nodeType":"ElementaryTypeName","src":"10692:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":837,"mutability":"mutable","name":"opInfo","nameLocation":"10741:6:3","nodeType":"VariableDeclaration","scope":967,"src":"10723:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo"},"typeName":{"id":836,"nodeType":"UserDefinedTypeName","pathNode":{"id":835,"name":"UserOpInfo","nameLocations":["10723:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":831,"src":"10723:10:3"},"referencedDeclaration":831,"src":"10723:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_storage_ptr","typeString":"struct EntryPoint.UserOpInfo"}},"visibility":"internal"},{"constant":false,"id":839,"mutability":"mutable","name":"context","nameLocation":"10772:7:3","nodeType":"VariableDeclaration","scope":967,"src":"10757:22:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":838,"name":"bytes","nodeType":"ElementaryTypeName","src":"10757:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10682:103:3"},"returnParameters":{"id":843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":842,"mutability":"mutable","name":"actualGasCost","nameLocation":"10812:13:3","nodeType":"VariableDeclaration","scope":967,"src":"10804:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":841,"name":"uint256","nodeType":"ElementaryTypeName","src":"10804:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10803:23:3"},"scope":2095,"src":"10660:1814:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[3333],"body":{"id":991,"nodeType":"Block","src":"12616:102:3","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":979,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"12666:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12673:4:3","memberName":"hash","nodeType":"MemberAccess","referencedDeclaration":3133,"src":"12666:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_PackedUserOperation_$3559_calldata_ptr_$returns$_t_bytes32_$attached_to$_t_struct$_PackedUserOperation_$3559_calldata_ptr_$","typeString":"function (struct PackedUserOperation calldata) pure returns (bytes32)"}},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12666:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":984,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12689:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_EntryPoint_$2095","typeString":"contract EntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EntryPoint_$2095","typeString":"contract EntryPoint"}],"id":983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12681:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":982,"name":"address","nodeType":"ElementaryTypeName","src":"12681:7:3","typeDescriptions":{}}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12681:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":986,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12696:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12702:7:3","memberName":"chainid","nodeType":"MemberAccess","src":"12696:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":977,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"12655:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12659:6:3","memberName":"encode","nodeType":"MemberAccess","src":"12655:10:3","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12655:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":976,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"12645:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12645:66:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":975,"id":990,"nodeType":"Return","src":"12626:85:3"}]},"documentation":{"id":968,"nodeType":"StructuredDocumentation","src":"12480:27:3","text":"@inheritdoc IEntryPoint"},"functionSelector":"02101e49","id":992,"implemented":true,"kind":"function","modifiers":[],"name":"getUserOpHash","nameLocation":"12521:13:3","nodeType":"FunctionDefinition","parameters":{"id":972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":971,"mutability":"mutable","name":"userOp","nameLocation":"12573:6:3","nodeType":"VariableDeclaration","scope":992,"src":"12544:35:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":970,"nodeType":"UserDefinedTypeName","pathNode":{"id":969,"name":"PackedUserOperation","nameLocations":["12544:19:3"],"nodeType":"IdentifierPath","referencedDeclaration":3559,"src":"12544:19:3"},"referencedDeclaration":3559,"src":"12544:19:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"12534:51:3"},"returnParameters":{"id":975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":974,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":992,"src":"12607:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":973,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12607:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12606:9:3"},"scope":2095,"src":"12512:206:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1106,"nodeType":"Block","src":"13039:1020:3","statements":[{"expression":{"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1002,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"13049:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1004,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13057:6:3","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":800,"src":"13049:14:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1005,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"13066:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13073:6:3","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":3540,"src":"13066:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13049:30:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1008,"nodeType":"ExpressionStatement","src":"13049:30:3"},{"expression":{"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1009,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"13089:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1011,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13097:5:3","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":802,"src":"13089:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1012,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"13105:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13112:5:3","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":3542,"src":"13105:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13089:28:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1015,"nodeType":"ExpressionStatement","src":"13089:28:3"},{"expression":{"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"expression":{"id":1016,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"13128:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1018,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13136:20:3","memberName":"verificationGasLimit","nodeType":"MemberAccess","referencedDeclaration":804,"src":"13128:28:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1019,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"13158:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1020,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13166:12:3","memberName":"callGasLimit","nodeType":"MemberAccess","referencedDeclaration":806,"src":"13158:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1021,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13127:52:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1024,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"13222:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13229:16:3","memberName":"accountGasLimits","nodeType":"MemberAccess","referencedDeclaration":3548,"src":"13222:23:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1022,"name":"UserOperationLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3134,"src":"13182:16:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UserOperationLib_$3134_$","typeString":"type(library UserOperationLib)"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13199:22:3","memberName":"unpackAccountGasLimits","nodeType":"MemberAccess","referencedDeclaration":3074,"src":"13182:39:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256,uint256)"}},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13182:64:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13127:119:3","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1028,"nodeType":"ExpressionStatement","src":"13127:119:3"},{"expression":{"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1029,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"13256:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1031,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13264:18:3","memberName":"preVerificationGas","nodeType":"MemberAccess","referencedDeclaration":812,"src":"13256:26:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1032,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"13285:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13292:18:3","memberName":"preVerificationGas","nodeType":"MemberAccess","referencedDeclaration":3550,"src":"13285:25:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13256:54:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1035,"nodeType":"ExpressionStatement","src":"13256:54:3"},{"expression":{"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1036,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"13320:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1038,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13328:12:3","memberName":"maxFeePerGas","nodeType":"MemberAccess","referencedDeclaration":816,"src":"13320:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1039,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"13343:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13350:12:3","memberName":"maxFeePerGas","nodeType":"MemberAccess","referencedDeclaration":3552,"src":"13343:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13320:42:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1042,"nodeType":"ExpressionStatement","src":"13320:42:3"},{"expression":{"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1043,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"13372:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1045,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13380:20:3","memberName":"maxPriorityFeePerGas","nodeType":"MemberAccess","referencedDeclaration":818,"src":"13372:28:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1046,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"13403:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13410:20:3","memberName":"maxPriorityFeePerGas","nodeType":"MemberAccess","referencedDeclaration":3554,"src":"13403:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13372:58:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1049,"nodeType":"ExpressionStatement","src":"13372:58:3"},{"assignments":[1051],"declarations":[{"constant":false,"id":1051,"mutability":"mutable","name":"paymasterAndData","nameLocation":"13455:16:3","nodeType":"VariableDeclaration","scope":1106,"src":"13440:31:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1050,"name":"bytes","nodeType":"ElementaryTypeName","src":"13440:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1054,"initialValue":{"expression":{"id":1052,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"13474:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13481:16:3","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":3556,"src":"13474:23:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"nodeType":"VariableDeclarationStatement","src":"13440:57:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1055,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"13511:16:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13528:6:3","memberName":"length","nodeType":"MemberAccess","src":"13511:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13537:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13511:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1104,"nodeType":"Block","src":"13894:159:3","statements":[{"expression":{"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1083,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"13908:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1085,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13916:9:3","memberName":"paymaster","nodeType":"MemberAccess","referencedDeclaration":814,"src":"13908:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":1088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13936:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13928:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1086,"name":"address","nodeType":"ElementaryTypeName","src":"13928:7:3","typeDescriptions":{}}},"id":1089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13928:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13908:30:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1091,"nodeType":"ExpressionStatement","src":"13908:30:3"},{"expression":{"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1092,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"13952:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1094,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13960:29:3","memberName":"paymasterVerificationGasLimit","nodeType":"MemberAccess","referencedDeclaration":808,"src":"13952:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13992:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13952:41:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1097,"nodeType":"ExpressionStatement","src":"13952:41:3"},{"expression":{"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1098,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"14007:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1100,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14015:23:3","memberName":"paymasterPostOpGasLimit","nodeType":"MemberAccess","referencedDeclaration":810,"src":"14007:31:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14041:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14007:35:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1103,"nodeType":"ExpressionStatement","src":"14007:35:3"}]},"id":1105,"nodeType":"IfStatement","src":"13507:546:3","trueBody":{"id":1082,"nodeType":"Block","src":"13540:348:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1060,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"13579:16:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13596:6:3","memberName":"length","nodeType":"MemberAccess","src":"13579:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":1062,"name":"UserOperationLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3134,"src":"13606:16:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UserOperationLib_$3134_$","typeString":"type(library UserOperationLib)"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13623:21:3","memberName":"PAYMASTER_DATA_OFFSET","nodeType":"MemberAccess","referencedDeclaration":2915,"src":"13606:38:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13579:65:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4141393320696e76616c6964207061796d6173746572416e6444617461","id":1065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13662:31:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_bed5bf2586bcf71963468f5a6e4def651dfab48dcb520989dbad3d1cd3cd8bdd","typeString":"literal_string \"AA93 invalid paymasterAndData\""},"value":"AA93 invalid paymasterAndData"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bed5bf2586bcf71963468f5a6e4def651dfab48dcb520989dbad3d1cd3cd8bdd","typeString":"literal_string \"AA93 invalid paymasterAndData\""}],"id":1059,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13554:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13554:153:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1067,"nodeType":"ExpressionStatement","src":"13554:153:3"},{"expression":{"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"expression":{"id":1068,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"13722:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1070,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13730:9:3","memberName":"paymaster","nodeType":"MemberAccess","referencedDeclaration":814,"src":"13722:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1071,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"13741:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1072,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13749:29:3","memberName":"paymasterVerificationGasLimit","nodeType":"MemberAccess","referencedDeclaration":808,"src":"13741:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1073,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"13780:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1074,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13788:23:3","memberName":"paymasterPostOpGasLimit","nodeType":"MemberAccess","referencedDeclaration":810,"src":"13780:31:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1075,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13721:91:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$_t_uint256_$","typeString":"tuple(address,uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1078,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"13860:16:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":1076,"name":"UserOperationLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3134,"src":"13815:16:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UserOperationLib_$3134_$","typeString":"type(library UserOperationLib)"}},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13832:27:3","memberName":"unpackPaymasterStaticFields","nodeType":"MemberAccess","referencedDeclaration":3117,"src":"13815:44:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_address_$_t_uint256_$_t_uint256_$","typeString":"function (bytes calldata) pure returns (address,uint256,uint256)"}},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13815:62:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$_t_uint256_$","typeString":"tuple(address,uint256,uint256)"}},"src":"13721:156:3","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1081,"nodeType":"ExpressionStatement","src":"13721:156:3"}]}}]},"documentation":{"id":993,"nodeType":"StructuredDocumentation","src":"12724:179:3","text":" Copy general fields from userOp into the memory opInfo structure.\n @param userOp  - The user operation.\n @param mUserOp - The memory user operation."},"id":1107,"implemented":true,"kind":"function","modifiers":[],"name":"_copyUserOpToMemory","nameLocation":"12917:19:3","nodeType":"FunctionDefinition","parameters":{"id":1000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":996,"mutability":"mutable","name":"userOp","nameLocation":"12975:6:3","nodeType":"VariableDeclaration","scope":1107,"src":"12946:35:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":995,"nodeType":"UserDefinedTypeName","pathNode":{"id":994,"name":"PackedUserOperation","nameLocations":["12946:19:3"],"nodeType":"IdentifierPath","referencedDeclaration":3559,"src":"12946:19:3"},"referencedDeclaration":3559,"src":"12946:19:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":999,"mutability":"mutable","name":"mUserOp","nameLocation":"13011:7:3","nodeType":"VariableDeclaration","scope":1107,"src":"12991:27:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp"},"typeName":{"id":998,"nodeType":"UserDefinedTypeName","pathNode":{"id":997,"name":"MemoryUserOp","nameLocations":["12991:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":819,"src":"12991:12:3"},"referencedDeclaration":819,"src":"12991:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_storage_ptr","typeString":"struct EntryPoint.MemoryUserOp"}},"visibility":"internal"}],"src":"12936:88:3"},"returnParameters":{"id":1001,"nodeType":"ParameterList","parameters":[],"src":"13039:0:3"},"scope":2095,"src":"12908:1151:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1141,"nodeType":"Block","src":"14322:358:3","statements":[{"id":1140,"nodeType":"UncheckedBlock","src":"14332:342:3","statements":[{"assignments":[1117],"declarations":[{"constant":false,"id":1117,"mutability":"mutable","name":"requiredGas","nameLocation":"14364:11:3","nodeType":"VariableDeclaration","scope":1140,"src":"14356:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1116,"name":"uint256","nodeType":"ElementaryTypeName","src":"14356:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1132,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1118,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"14378:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1119,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14386:20:3","memberName":"verificationGasLimit","nodeType":"MemberAccess","referencedDeclaration":804,"src":"14378:28:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1120,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"14425:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1121,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14433:12:3","memberName":"callGasLimit","nodeType":"MemberAccess","referencedDeclaration":806,"src":"14425:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14378:67:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1123,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"14464:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1124,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14472:29:3","memberName":"paymasterVerificationGasLimit","nodeType":"MemberAccess","referencedDeclaration":808,"src":"14464:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14378:123:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1126,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"14520:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1127,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14528:23:3","memberName":"paymasterPostOpGasLimit","nodeType":"MemberAccess","referencedDeclaration":810,"src":"14520:31:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14378:173:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1129,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"14570:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1130,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14578:18:3","memberName":"preVerificationGas","nodeType":"MemberAccess","referencedDeclaration":812,"src":"14570:26:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14378:218:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14356:240:3"},{"expression":{"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1133,"name":"requiredPrefund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"14611:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1134,"name":"requiredGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"14629:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":1135,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"14643:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1136,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14651:12:3","memberName":"maxFeePerGas","nodeType":"MemberAccess","referencedDeclaration":816,"src":"14643:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14629:34:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14611:52:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1139,"nodeType":"ExpressionStatement","src":"14611:52:3"}]}]},"documentation":{"id":1108,"nodeType":"StructuredDocumentation","src":"14065:132:3","text":" Get the required prefunded gas fee amount for an operation.\n @param mUserOp - The user operation in memory."},"id":1142,"implemented":true,"kind":"function","modifiers":[],"name":"_getRequiredPrefund","nameLocation":"14211:19:3","nodeType":"FunctionDefinition","parameters":{"id":1112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1111,"mutability":"mutable","name":"mUserOp","nameLocation":"14260:7:3","nodeType":"VariableDeclaration","scope":1142,"src":"14240:27:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp"},"typeName":{"id":1110,"nodeType":"UserDefinedTypeName","pathNode":{"id":1109,"name":"MemoryUserOp","nameLocations":["14240:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":819,"src":"14240:12:3"},"referencedDeclaration":819,"src":"14240:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_storage_ptr","typeString":"struct EntryPoint.MemoryUserOp"}},"visibility":"internal"}],"src":"14230:43:3"},"returnParameters":{"id":1115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1114,"mutability":"mutable","name":"requiredPrefund","nameLocation":"14305:15:3","nodeType":"VariableDeclaration","scope":1142,"src":"14297:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1113,"name":"uint256","nodeType":"ElementaryTypeName","src":"14297:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14296:25:3"},"scope":2095,"src":"14202:478:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1243,"nodeType":"Block","src":"15072:948:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1153,"name":"initCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"15086:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15095:6:3","memberName":"length","nodeType":"MemberAccess","src":"15086:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15105:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15086:20:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1242,"nodeType":"IfStatement","src":"15082:932:3","trueBody":{"id":1241,"nodeType":"Block","src":"15108:906:3","statements":[{"assignments":[1158],"declarations":[{"constant":false,"id":1158,"mutability":"mutable","name":"sender","nameLocation":"15130:6:3","nodeType":"VariableDeclaration","scope":1241,"src":"15122:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1157,"name":"address","nodeType":"ElementaryTypeName","src":"15122:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1162,"initialValue":{"expression":{"expression":{"id":1159,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"15139:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":1160,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15146:7:3","memberName":"mUserOp","nodeType":"MemberAccess","referencedDeclaration":822,"src":"15139:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1161,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15154:6:3","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":800,"src":"15139:21:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15122:38:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1163,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"15178:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15185:4:3","memberName":"code","nodeType":"MemberAccess","src":"15178:11:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15190:6:3","memberName":"length","nodeType":"MemberAccess","src":"15178:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15200:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15178:23:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1173,"nodeType":"IfStatement","src":"15174:104:3","trueBody":{"errorCall":{"arguments":[{"id":1169,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"15235:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"414131302073656e64657220616c726561647920636f6e7374727563746564","id":1170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15244:33:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_267485e0b239ff7726cfbcfb111a14e388e8253ef89a57c2a12abc410bbc1a79","typeString":"literal_string \"AA10 sender already constructed\""},"value":"AA10 sender already constructed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_267485e0b239ff7726cfbcfb111a14e388e8253ef89a57c2a12abc410bbc1a79","typeString":"literal_string \"AA10 sender already constructed\""}],"id":1168,"name":"FailedOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"15226:8:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory) pure"}},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15226:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1172,"nodeType":"RevertStatement","src":"15219:59:3"}},{"assignments":[1175],"declarations":[{"constant":false,"id":1175,"mutability":"mutable","name":"sender1","nameLocation":"15300:7:3","nodeType":"VariableDeclaration","scope":1241,"src":"15292:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1174,"name":"address","nodeType":"ElementaryTypeName","src":"15292:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1185,"initialValue":{"arguments":[{"id":1183,"name":"initCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"15411:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1176,"name":"senderCreator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"15310:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_SenderCreator_$2491_$","typeString":"function () view returns (contract SenderCreator)"}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15310:15:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_SenderCreator_$2491","typeString":"contract SenderCreator"}},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15326:12:3","memberName":"createSender","nodeType":"MemberAccess","referencedDeclaration":2490,"src":"15310:28:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes memory) external returns (address)"}},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["gas"],"nodeType":"FunctionCallOptions","options":[{"expression":{"expression":{"id":1179,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"15361:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":1180,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15368:7:3","memberName":"mUserOp","nodeType":"MemberAccess","referencedDeclaration":822,"src":"15361:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1181,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15376:20:3","memberName":"verificationGasLimit","nodeType":"MemberAccess","referencedDeclaration":804,"src":"15361:35:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"15310:100:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_address_$gas","typeString":"function (bytes memory) external returns (address)"}},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15310:110:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15292:128:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1186,"name":"sender1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"15438:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15457:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15449:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1187,"name":"address","nodeType":"ElementaryTypeName","src":"15449:7:3","typeDescriptions":{}}},"id":1190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15449:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15438:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1197,"nodeType":"IfStatement","src":"15434:98:3","trueBody":{"errorCall":{"arguments":[{"id":1193,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"15493:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"4141313320696e6974436f6465206661696c6564206f72204f4f47","id":1194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15502:29:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_a46d515f685002bbb631614d07729b129ca01335d4ee63cf10853491e47dee73","typeString":"literal_string \"AA13 initCode failed or OOG\""},"value":"AA13 initCode failed or OOG"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_a46d515f685002bbb631614d07729b129ca01335d4ee63cf10853491e47dee73","typeString":"literal_string \"AA13 initCode failed or OOG\""}],"id":1192,"name":"FailedOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"15484:8:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory) pure"}},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15484:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1196,"nodeType":"RevertStatement","src":"15477:55:3"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1198,"name":"sender1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"15550:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1199,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"15561:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15550:17:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1206,"nodeType":"IfStatement","src":"15546:99:3","trueBody":{"errorCall":{"arguments":[{"id":1202,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"15601:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"4141313420696e6974436f6465206d7573742072657475726e2073656e646572","id":1203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15610:34:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_cf8e5f91822a9ca4de44f9559ff5db3083e7cb35e25710632c57dc900da04602","typeString":"literal_string \"AA14 initCode must return sender\""},"value":"AA14 initCode must return sender"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_cf8e5f91822a9ca4de44f9559ff5db3083e7cb35e25710632c57dc900da04602","typeString":"literal_string \"AA14 initCode must return sender\""}],"id":1201,"name":"FailedOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"15592:8:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory) pure"}},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15592:53:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1205,"nodeType":"RevertStatement","src":"15585:60:3"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1207,"name":"sender1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"15663:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15671:4:3","memberName":"code","nodeType":"MemberAccess","src":"15663:12:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15676:6:3","memberName":"length","nodeType":"MemberAccess","src":"15663:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15686:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15663:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1217,"nodeType":"IfStatement","src":"15659:106:3","trueBody":{"errorCall":{"arguments":[{"id":1213,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"15721:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"4141313520696e6974436f6465206d757374206372656174652073656e646572","id":1214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15730:34:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_bb1e067ee25aabe05bbdddb7ea9a4490fa96ed7d10c6207acd0a3c723a9b7ed6","typeString":"literal_string \"AA15 initCode must create sender\""},"value":"AA15 initCode must create sender"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_bb1e067ee25aabe05bbdddb7ea9a4490fa96ed7d10c6207acd0a3c723a9b7ed6","typeString":"literal_string \"AA15 initCode must create sender\""}],"id":1212,"name":"FailedOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"15712:8:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory) pure"}},"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15712:53:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1216,"nodeType":"RevertStatement","src":"15705:60:3"}},{"assignments":[1219],"declarations":[{"constant":false,"id":1219,"mutability":"mutable","name":"factory","nameLocation":"15787:7:3","nodeType":"VariableDeclaration","scope":1241,"src":"15779:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1218,"name":"address","nodeType":"ElementaryTypeName","src":"15779:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1230,"initialValue":{"arguments":[{"arguments":[{"baseExpression":{"id":1224,"name":"initCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"15813:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"hexValue":"3230","id":1226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15824:2:3","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"15813:14:3","startExpression":{"hexValue":"30","id":1225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15822:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":1223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15805:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":1222,"name":"bytes20","nodeType":"ElementaryTypeName","src":"15805:7:3","typeDescriptions":{}}},"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15805:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":1221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15797:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1220,"name":"address","nodeType":"ElementaryTypeName","src":"15797:7:3","typeDescriptions":{}}},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15797:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15779:50:3"},{"eventCall":{"arguments":[{"expression":{"id":1232,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"15881:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":1233,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15888:10:3","memberName":"userOpHash","nodeType":"MemberAccess","referencedDeclaration":824,"src":"15881:17:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1234,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"15916:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1235,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"15940:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":1236,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"15965:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":1237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15972:7:3","memberName":"mUserOp","nodeType":"MemberAccess","referencedDeclaration":822,"src":"15965:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1238,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15980:9:3","memberName":"paymaster","nodeType":"MemberAccess","referencedDeclaration":814,"src":"15965:24:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1231,"name":"AccountDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3235,"src":"15848:15:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address,address)"}},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15848:155:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1240,"nodeType":"EmitStatement","src":"15843:160:3"}]}}]},"documentation":{"id":1143,"nodeType":"StructuredDocumentation","src":"14686:243:3","text":" Create sender smart contract account if init code is provided.\n @param opIndex  - The operation index.\n @param opInfo   - The operation info.\n @param initCode - The init code for the smart contract account."},"id":1244,"implemented":true,"kind":"function","modifiers":[],"name":"_createSenderIfNeeded","nameLocation":"14943:21:3","nodeType":"FunctionDefinition","parameters":{"id":1151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1145,"mutability":"mutable","name":"opIndex","nameLocation":"14982:7:3","nodeType":"VariableDeclaration","scope":1244,"src":"14974:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1144,"name":"uint256","nodeType":"ElementaryTypeName","src":"14974:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1148,"mutability":"mutable","name":"opInfo","nameLocation":"15017:6:3","nodeType":"VariableDeclaration","scope":1244,"src":"14999:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo"},"typeName":{"id":1147,"nodeType":"UserDefinedTypeName","pathNode":{"id":1146,"name":"UserOpInfo","nameLocations":["14999:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":831,"src":"14999:10:3"},"referencedDeclaration":831,"src":"14999:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_storage_ptr","typeString":"struct EntryPoint.UserOpInfo"}},"visibility":"internal"},{"constant":false,"id":1150,"mutability":"mutable","name":"initCode","nameLocation":"15048:8:3","nodeType":"VariableDeclaration","scope":1244,"src":"15033:23:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1149,"name":"bytes","nodeType":"ElementaryTypeName","src":"15033:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14964:98:3"},"returnParameters":{"id":1152,"nodeType":"ParameterList","parameters":[],"src":"15072:0:3"},"scope":2095,"src":"14934:1086:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3360],"body":{"id":1262,"nodeType":"Block","src":"16116:116:3","statements":[{"assignments":[1251],"declarations":[{"constant":false,"id":1251,"mutability":"mutable","name":"sender","nameLocation":"16134:6:3","nodeType":"VariableDeclaration","scope":1262,"src":"16126:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1250,"name":"address","nodeType":"ElementaryTypeName","src":"16126:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1257,"initialValue":{"arguments":[{"id":1255,"name":"initCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"16172:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1252,"name":"senderCreator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"16143:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_SenderCreator_$2491_$","typeString":"function () view returns (contract SenderCreator)"}},"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16143:15:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_SenderCreator_$2491","typeString":"contract SenderCreator"}},"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16159:12:3","memberName":"createSender","nodeType":"MemberAccess","referencedDeclaration":2490,"src":"16143:28:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes memory) external returns (address)"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16143:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16126:55:3"},{"errorCall":{"arguments":[{"id":1259,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"16218:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1258,"name":"SenderAddressResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"16198:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16198:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1261,"nodeType":"RevertStatement","src":"16191:34:3"}]},"documentation":{"id":1245,"nodeType":"StructuredDocumentation","src":"16026:27:3","text":"@inheritdoc IEntryPoint"},"functionSelector":"9b249f69","id":1263,"implemented":true,"kind":"function","modifiers":[],"name":"getSenderAddress","nameLocation":"16067:16:3","nodeType":"FunctionDefinition","parameters":{"id":1248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1247,"mutability":"mutable","name":"initCode","nameLocation":"16099:8:3","nodeType":"VariableDeclaration","scope":1263,"src":"16084:23:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1246,"name":"bytes","nodeType":"ElementaryTypeName","src":"16084:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16083:25:3"},"returnParameters":{"id":1249,"nodeType":"ParameterList","parameters":[],"src":"16116:0:3"},"scope":2095,"src":"16058:174:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1403,"nodeType":"Block","src":"16916:1345:3","statements":[{"id":1402,"nodeType":"UncheckedBlock","src":"16926:1329:3","statements":[{"assignments":[1281],"declarations":[{"constant":false,"id":1281,"mutability":"mutable","name":"mUserOp","nameLocation":"16970:7:3","nodeType":"VariableDeclaration","scope":1402,"src":"16950:27:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp"},"typeName":{"id":1280,"nodeType":"UserDefinedTypeName","pathNode":{"id":1279,"name":"MemoryUserOp","nameLocations":["16950:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":819,"src":"16950:12:3"},"referencedDeclaration":819,"src":"16950:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_storage_ptr","typeString":"struct EntryPoint.MemoryUserOp"}},"visibility":"internal"}],"id":1284,"initialValue":{"expression":{"id":1282,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"16980:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":1283,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16987:7:3","memberName":"mUserOp","nodeType":"MemberAccess","referencedDeclaration":822,"src":"16980:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"nodeType":"VariableDeclarationStatement","src":"16950:44:3"},{"assignments":[1286],"declarations":[{"constant":false,"id":1286,"mutability":"mutable","name":"sender","nameLocation":"17016:6:3","nodeType":"VariableDeclaration","scope":1402,"src":"17008:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1285,"name":"address","nodeType":"ElementaryTypeName","src":"17008:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1289,"initialValue":{"expression":{"id":1287,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"17025:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1288,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17033:6:3","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":800,"src":"17025:14:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"17008:31:3"},{"expression":{"arguments":[{"id":1291,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"17075:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1292,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"17084:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},{"expression":{"id":1293,"name":"op","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"17092:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17095:8:3","memberName":"initCode","nodeType":"MemberAccess","referencedDeclaration":3544,"src":"17092:11:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1290,"name":"_createSenderIfNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"17053:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_struct$_UserOpInfo_$831_memory_ptr_$_t_bytes_calldata_ptr_$returns$__$","typeString":"function (uint256,struct EntryPoint.UserOpInfo memory,bytes calldata)"}},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17053:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1296,"nodeType":"ExpressionStatement","src":"17053:51:3"},{"assignments":[1298],"declarations":[{"constant":false,"id":1298,"mutability":"mutable","name":"paymaster","nameLocation":"17126:9:3","nodeType":"VariableDeclaration","scope":1402,"src":"17118:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1297,"name":"address","nodeType":"ElementaryTypeName","src":"17118:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1301,"initialValue":{"expression":{"id":1299,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"17138:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1300,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17146:9:3","memberName":"paymaster","nodeType":"MemberAccess","referencedDeclaration":814,"src":"17138:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"17118:37:3"},{"assignments":[1303],"declarations":[{"constant":false,"id":1303,"mutability":"mutable","name":"missingAccountFunds","nameLocation":"17177:19:3","nodeType":"VariableDeclaration","scope":1402,"src":"17169:27:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1302,"name":"uint256","nodeType":"ElementaryTypeName","src":"17169:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1305,"initialValue":{"hexValue":"30","id":1304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17199:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17169:31:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1306,"name":"paymaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"17218:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17239:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17231:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1307,"name":"address","nodeType":"ElementaryTypeName","src":"17231:7:3","typeDescriptions":{}}},"id":1310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17231:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17218:23:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1330,"nodeType":"IfStatement","src":"17214:222:3","trueBody":{"id":1329,"nodeType":"Block","src":"17243:193:3","statements":[{"assignments":[1313],"declarations":[{"constant":false,"id":1313,"mutability":"mutable","name":"bal","nameLocation":"17269:3:3","nodeType":"VariableDeclaration","scope":1329,"src":"17261:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1312,"name":"uint256","nodeType":"ElementaryTypeName","src":"17261:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1317,"initialValue":{"arguments":[{"id":1315,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"17285:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1314,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"17275:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17275:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17261:31:3"},{"expression":{"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1318,"name":"missingAccountFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"17310:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1319,"name":"bal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"17332:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1320,"name":"requiredPrefund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"17338:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17332:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1323,"name":"requiredPrefund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"17400:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1324,"name":"bal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"17418:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17400:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"17332:89:3","trueExpression":{"hexValue":"30","id":1322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17376:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17310:111:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1328,"nodeType":"ExpressionStatement","src":"17310:111:3"}]}},{"clauses":[{"block":{"id":1350,"nodeType":"Block","src":"17664:65:3","statements":[{"expression":{"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1346,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"17682:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1347,"name":"_validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"17699:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17682:32:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1349,"nodeType":"ExpressionStatement","src":"17682:32:3"}]},"errorName":"","id":1351,"nodeType":"TryCatchClause","parameters":{"id":1345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1344,"mutability":"mutable","name":"_validationData","nameLocation":"17647:15:3","nodeType":"VariableDeclaration","scope":1351,"src":"17639:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1343,"name":"uint256","nodeType":"ElementaryTypeName","src":"17639:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17638:25:3"},"src":"17630:99:3"},{"block":{"id":1361,"nodeType":"Block","src":"17736:127:3","statements":[{"errorCall":{"arguments":[{"id":1353,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"17780:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"41413233207265766572746564","id":1354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17789:15:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_f272bf03d6e7cfb67a72dd0c4aee94925483c9b766e02beaec86cf4f0a3b9477","typeString":"literal_string \"AA23 reverted\""},"value":"AA23 reverted"},{"arguments":[{"id":1357,"name":"REVERT_REASON_MAX_LEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"17825:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1355,"name":"Exec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"17806:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Exec_$3650_$","typeString":"type(library Exec)"}},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17811:13:3","memberName":"getReturnData","nodeType":"MemberAccess","referencedDeclaration":3612,"src":"17806:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"}},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17806:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_f272bf03d6e7cfb67a72dd0c4aee94925483c9b766e02beaec86cf4f0a3b9477","typeString":"literal_string \"AA23 reverted\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1352,"name":"FailedOpWithRevert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"17761:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint256,string memory,bytes memory) pure"}},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17761:87:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1360,"nodeType":"RevertStatement","src":"17754:94:3"}]},"errorName":"","id":1362,"nodeType":"TryCatchClause","src":"17730:133:3"}],"externalCall":{"arguments":[{"id":1338,"name":"op","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"17574:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},{"expression":{"id":1339,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"17578:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":1340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17585:10:3","memberName":"userOpHash","nodeType":"MemberAccess","referencedDeclaration":824,"src":"17578:17:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1341,"name":"missingAccountFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"17597:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1332,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"17478:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1331,"name":"IAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3151,"src":"17469:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccount_$3151_$","typeString":"type(contract IAccount)"}},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17469:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAccount_$3151","typeString":"contract IAccount"}},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17486:14:3","memberName":"validateUserOp","nodeType":"MemberAccess","referencedDeclaration":3150,"src":"17469:31:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_struct$_PackedUserOperation_$3559_memory_ptr_$_t_bytes32_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct PackedUserOperation memory,bytes32,uint256) external returns (uint256)"}},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["gas"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":1335,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"17527:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1336,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17535:20:3","memberName":"verificationGasLimit","nodeType":"MemberAccess","referencedDeclaration":804,"src":"17527:28:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"17469:104:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_struct$_PackedUserOperation_$3559_memory_ptr_$_t_bytes32_$_t_uint256_$returns$_t_uint256_$gas","typeString":"function (struct PackedUserOperation memory,bytes32,uint256) external returns (uint256)"}},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17469:148:3","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1363,"nodeType":"TryStatement","src":"17449:414:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1364,"name":"paymaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"17880:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17901:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17893:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1365,"name":"address","nodeType":"ElementaryTypeName","src":"17893:7:3","typeDescriptions":{}}},"id":1368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17893:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17880:23:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1401,"nodeType":"IfStatement","src":"17876:369:3","trueBody":{"id":1400,"nodeType":"Block","src":"17905:340:3","statements":[{"assignments":[1372],"declarations":[{"constant":false,"id":1372,"mutability":"mutable","name":"senderInfo","nameLocation":"17943:10:3","nodeType":"VariableDeclaration","scope":1400,"src":"17923:30:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo"},"typeName":{"id":1371,"nodeType":"UserDefinedTypeName","pathNode":{"id":1370,"name":"DepositInfo","nameLocations":["17923:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":3482,"src":"17923:11:3"},"referencedDeclaration":3482,"src":"17923:11:3","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo"}},"visibility":"internal"}],"id":1376,"initialValue":{"baseExpression":{"id":1373,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"17956:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_DepositInfo_$3482_storage_$","typeString":"mapping(address => struct IStakeManager.DepositInfo storage ref)"}},"id":1375,"indexExpression":{"id":1374,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"17965:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17956:16:3","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage","typeString":"struct IStakeManager.DepositInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"17923:49:3"},{"assignments":[1378],"declarations":[{"constant":false,"id":1378,"mutability":"mutable","name":"deposit","nameLocation":"17998:7:3","nodeType":"VariableDeclaration","scope":1400,"src":"17990:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1377,"name":"uint256","nodeType":"ElementaryTypeName","src":"17990:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1381,"initialValue":{"expression":{"id":1379,"name":"senderInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"18008:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":1380,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18019:7:3","memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":3473,"src":"18008:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17990:36:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1382,"name":"requiredPrefund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"18048:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1383,"name":"deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"18066:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18048:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1391,"nodeType":"IfStatement","src":"18044:123:3","trueBody":{"id":1390,"nodeType":"Block","src":"18075:92:3","statements":[{"errorCall":{"arguments":[{"id":1386,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"18113:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"41413231206469646e2774207061792070726566756e64","id":1387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18122:25:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_af9d5dc558e78f4dcea94657e51b2cc454e4ce4aecf26fcc28fc02e10982eb3d","typeString":"literal_string \"AA21 didn't pay prefund\""},"value":"AA21 didn't pay prefund"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_af9d5dc558e78f4dcea94657e51b2cc454e4ce4aecf26fcc28fc02e10982eb3d","typeString":"literal_string \"AA21 didn't pay prefund\""}],"id":1385,"name":"FailedOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"18104:8:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory) pure"}},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18104:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1389,"nodeType":"RevertStatement","src":"18097:51:3"}]}},{"expression":{"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1392,"name":"senderInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"18184:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":1394,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"18195:7:3","memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":3473,"src":"18184:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1395,"name":"deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"18205:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1396,"name":"requiredPrefund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"18215:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18205:25:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18184:46:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1399,"nodeType":"ExpressionStatement","src":"18184:46:3"}]}}]}]},"documentation":{"id":1264,"nodeType":"StructuredDocumentation","src":"16238:414:3","text":" Call account.validateUserOp.\n Revert (with FailedOp) in case validateUserOp reverts, or account didn't send required prefund.\n Decrement account's deposit if needed.\n @param opIndex         - The operation index.\n @param op              - The user operation.\n @param opInfo          - The operation info.\n @param requiredPrefund - The required prefund amount."},"id":1404,"implemented":true,"kind":"function","modifiers":[],"name":"_validateAccountPrepayment","nameLocation":"16666:26:3","nodeType":"FunctionDefinition","parameters":{"id":1275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1266,"mutability":"mutable","name":"opIndex","nameLocation":"16710:7:3","nodeType":"VariableDeclaration","scope":1404,"src":"16702:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1265,"name":"uint256","nodeType":"ElementaryTypeName","src":"16702:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1269,"mutability":"mutable","name":"op","nameLocation":"16756:2:3","nodeType":"VariableDeclaration","scope":1404,"src":"16727:31:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":1268,"nodeType":"UserDefinedTypeName","pathNode":{"id":1267,"name":"PackedUserOperation","nameLocations":["16727:19:3"],"nodeType":"IdentifierPath","referencedDeclaration":3559,"src":"16727:19:3"},"referencedDeclaration":3559,"src":"16727:19:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":1272,"mutability":"mutable","name":"opInfo","nameLocation":"16786:6:3","nodeType":"VariableDeclaration","scope":1404,"src":"16768:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo"},"typeName":{"id":1271,"nodeType":"UserDefinedTypeName","pathNode":{"id":1270,"name":"UserOpInfo","nameLocations":["16768:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":831,"src":"16768:10:3"},"referencedDeclaration":831,"src":"16768:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_storage_ptr","typeString":"struct EntryPoint.UserOpInfo"}},"visibility":"internal"},{"constant":false,"id":1274,"mutability":"mutable","name":"requiredPrefund","nameLocation":"16810:15:3","nodeType":"VariableDeclaration","scope":1404,"src":"16802:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1273,"name":"uint256","nodeType":"ElementaryTypeName","src":"16802:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16692:139:3"},"returnParameters":{"id":1278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1277,"mutability":"mutable","name":"validationData","nameLocation":"16887:14:3","nodeType":"VariableDeclaration","scope":1404,"src":"16879:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1276,"name":"uint256","nodeType":"ElementaryTypeName","src":"16879:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16865:46:3"},"scope":2095,"src":"16657:1604:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1503,"nodeType":"Block","src":"19067:1011:3","statements":[{"id":1502,"nodeType":"UncheckedBlock","src":"19077:995:3","statements":[{"assignments":[1424],"declarations":[{"constant":false,"id":1424,"mutability":"mutable","name":"mUserOp","nameLocation":"19121:7:3","nodeType":"VariableDeclaration","scope":1502,"src":"19101:27:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp"},"typeName":{"id":1423,"nodeType":"UserDefinedTypeName","pathNode":{"id":1422,"name":"MemoryUserOp","nameLocations":["19101:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":819,"src":"19101:12:3"},"referencedDeclaration":819,"src":"19101:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_storage_ptr","typeString":"struct EntryPoint.MemoryUserOp"}},"visibility":"internal"}],"id":1427,"initialValue":{"expression":{"id":1425,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"19131:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":1426,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19138:7:3","memberName":"mUserOp","nodeType":"MemberAccess","referencedDeclaration":822,"src":"19131:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"nodeType":"VariableDeclarationStatement","src":"19101:44:3"},{"assignments":[1429],"declarations":[{"constant":false,"id":1429,"mutability":"mutable","name":"paymaster","nameLocation":"19167:9:3","nodeType":"VariableDeclaration","scope":1502,"src":"19159:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1428,"name":"address","nodeType":"ElementaryTypeName","src":"19159:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1432,"initialValue":{"expression":{"id":1430,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"19179:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1431,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19187:9:3","memberName":"paymaster","nodeType":"MemberAccess","referencedDeclaration":814,"src":"19179:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"19159:37:3"},{"assignments":[1435],"declarations":[{"constant":false,"id":1435,"mutability":"mutable","name":"paymasterInfo","nameLocation":"19230:13:3","nodeType":"VariableDeclaration","scope":1502,"src":"19210:33:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo"},"typeName":{"id":1434,"nodeType":"UserDefinedTypeName","pathNode":{"id":1433,"name":"DepositInfo","nameLocations":["19210:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":3482,"src":"19210:11:3"},"referencedDeclaration":3482,"src":"19210:11:3","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo"}},"visibility":"internal"}],"id":1439,"initialValue":{"baseExpression":{"id":1436,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"19246:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_DepositInfo_$3482_storage_$","typeString":"mapping(address => struct IStakeManager.DepositInfo storage ref)"}},"id":1438,"indexExpression":{"id":1437,"name":"paymaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"19255:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19246:19:3","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage","typeString":"struct IStakeManager.DepositInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"19210:55:3"},{"assignments":[1441],"declarations":[{"constant":false,"id":1441,"mutability":"mutable","name":"deposit","nameLocation":"19287:7:3","nodeType":"VariableDeclaration","scope":1502,"src":"19279:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1440,"name":"uint256","nodeType":"ElementaryTypeName","src":"19279:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1444,"initialValue":{"expression":{"id":1442,"name":"paymasterInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"19297:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":1443,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19311:7:3","memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":3473,"src":"19297:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19279:39:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1445,"name":"deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"19336:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1446,"name":"requiredPreFund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"19346:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19336:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1454,"nodeType":"IfStatement","src":"19332:122:3","trueBody":{"id":1453,"nodeType":"Block","src":"19363:91:3","statements":[{"errorCall":{"arguments":[{"id":1449,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"19397:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"41413331207061796d6173746572206465706f73697420746f6f206c6f77","id":1450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19406:32:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_423a165b7dbbda2ae3873c5d3fae3c0ad56dda63b0eb4d372683317213e4df0f","typeString":"literal_string \"AA31 paymaster deposit too low\""},"value":"AA31 paymaster deposit too low"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_423a165b7dbbda2ae3873c5d3fae3c0ad56dda63b0eb4d372683317213e4df0f","typeString":"literal_string \"AA31 paymaster deposit too low\""}],"id":1448,"name":"FailedOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"19388:8:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory) pure"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19388:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1452,"nodeType":"RevertStatement","src":"19381:58:3"}]}},{"expression":{"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1455,"name":"paymasterInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"19467:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":1457,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"19481:7:3","memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":3473,"src":"19467:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1458,"name":"deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"19491:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1459,"name":"requiredPreFund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"19501:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19491:25:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19467:49:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1462,"nodeType":"ExpressionStatement","src":"19467:49:3"},{"clauses":[{"block":{"id":1488,"nodeType":"Block","src":"19827:101:3","statements":[{"expression":{"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1480,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"19845:7:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1481,"name":"_context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"19855:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19845:18:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1483,"nodeType":"ExpressionStatement","src":"19845:18:3"},{"expression":{"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1484,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"19881:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1485,"name":"_validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"19898:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19881:32:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1487,"nodeType":"ExpressionStatement","src":"19881:32:3"}]},"errorName":"","id":1489,"nodeType":"TryCatchClause","parameters":{"id":1479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1476,"mutability":"mutable","name":"_context","nameLocation":"19792:8:3","nodeType":"VariableDeclaration","scope":1489,"src":"19779:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1475,"name":"bytes","nodeType":"ElementaryTypeName","src":"19779:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1478,"mutability":"mutable","name":"_validationData","nameLocation":"19810:15:3","nodeType":"VariableDeclaration","scope":1489,"src":"19802:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1477,"name":"uint256","nodeType":"ElementaryTypeName","src":"19802:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19778:48:3"},"src":"19770:158:3"},{"block":{"id":1499,"nodeType":"Block","src":"19935:127:3","statements":[{"errorCall":{"arguments":[{"id":1491,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"19979:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"41413333207265766572746564","id":1492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19988:15:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_06edc37a8d32c7fe78db72f91122302e62b14234c1d15f3c0564559dca4729f7","typeString":"literal_string \"AA33 reverted\""},"value":"AA33 reverted"},{"arguments":[{"id":1495,"name":"REVERT_REASON_MAX_LEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"20024:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1493,"name":"Exec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"20005:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Exec_$3650_$","typeString":"type(library Exec)"}},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20010:13:3","memberName":"getReturnData","nodeType":"MemberAccess","referencedDeclaration":3612,"src":"20005:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"}},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20005:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_06edc37a8d32c7fe78db72f91122302e62b14234c1d15f3c0564559dca4729f7","typeString":"literal_string \"AA33 reverted\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1490,"name":"FailedOpWithRevert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"19960:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint256,string memory,bytes memory) pure"}},"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19960:87:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1498,"nodeType":"RevertStatement","src":"19953:94:3"}]},"errorName":"","id":1500,"nodeType":"TryCatchClause","src":"19929:133:3"}],"externalCall":{"arguments":[{"id":1470,"name":"op","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"19661:2:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},{"expression":{"id":1471,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"19685:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":1472,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19692:10:3","memberName":"userOpHash","nodeType":"MemberAccess","referencedDeclaration":824,"src":"19685:17:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1473,"name":"requiredPreFund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"19724:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1464,"name":"paymaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"19561:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1463,"name":"IPaymaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"19550:10:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPaymaster_$3431_$","typeString":"type(contract IPaymaster)"}},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19550:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPaymaster_$3431","typeString":"contract IPaymaster"}},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19572:23:3","memberName":"validatePaymasterUserOp","nodeType":"MemberAccess","referencedDeclaration":3417,"src":"19550:45:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_struct$_PackedUserOperation_$3559_memory_ptr_$_t_bytes32_$_t_uint256_$returns$_t_bytes_memory_ptr_$_t_uint256_$","typeString":"function (struct PackedUserOperation memory,bytes32,uint256) external returns (bytes memory,uint256)"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["gas"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":1467,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"19601:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1468,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19609:29:3","memberName":"paymasterVerificationGasLimit","nodeType":"MemberAccess","referencedDeclaration":808,"src":"19601:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"19550:89:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_struct$_PackedUserOperation_$3559_memory_ptr_$_t_bytes32_$_t_uint256_$returns$_t_bytes_memory_ptr_$_t_uint256_$gas","typeString":"function (struct PackedUserOperation memory,bytes32,uint256) external returns (bytes memory,uint256)"}},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19550:207:3","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_uint256_$","typeString":"tuple(bytes memory,uint256)"}},"id":1501,"nodeType":"TryStatement","src":"19530:532:3"}]}]},"documentation":{"id":1405,"nodeType":"StructuredDocumentation","src":"18267:554:3","text":" In case the request has a paymaster:\n  - Validate paymaster has enough deposit.\n  - Call paymaster.validatePaymasterUserOp.\n  - Revert with proper FailedOp in case paymaster reverts.\n  - Decrement paymaster's deposit.\n @param opIndex                            - The operation index.\n @param op                                 - The user operation.\n @param opInfo                             - The operation info.\n @param requiredPreFund                    - The required prefund amount."},"id":1504,"implemented":true,"kind":"function","modifiers":[],"name":"_validatePaymasterPrepayment","nameLocation":"18835:28:3","nodeType":"FunctionDefinition","parameters":{"id":1416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1407,"mutability":"mutable","name":"opIndex","nameLocation":"18881:7:3","nodeType":"VariableDeclaration","scope":1504,"src":"18873:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1406,"name":"uint256","nodeType":"ElementaryTypeName","src":"18873:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1410,"mutability":"mutable","name":"op","nameLocation":"18927:2:3","nodeType":"VariableDeclaration","scope":1504,"src":"18898:31:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":1409,"nodeType":"UserDefinedTypeName","pathNode":{"id":1408,"name":"PackedUserOperation","nameLocations":["18898:19:3"],"nodeType":"IdentifierPath","referencedDeclaration":3559,"src":"18898:19:3"},"referencedDeclaration":3559,"src":"18898:19:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":1413,"mutability":"mutable","name":"opInfo","nameLocation":"18957:6:3","nodeType":"VariableDeclaration","scope":1504,"src":"18939:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo"},"typeName":{"id":1412,"nodeType":"UserDefinedTypeName","pathNode":{"id":1411,"name":"UserOpInfo","nameLocations":["18939:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":831,"src":"18939:10:3"},"referencedDeclaration":831,"src":"18939:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_storage_ptr","typeString":"struct EntryPoint.UserOpInfo"}},"visibility":"internal"},{"constant":false,"id":1415,"mutability":"mutable","name":"requiredPreFund","nameLocation":"18981:15:3","nodeType":"VariableDeclaration","scope":1504,"src":"18973:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1414,"name":"uint256","nodeType":"ElementaryTypeName","src":"18973:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18863:139:3"},"returnParameters":{"id":1421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1418,"mutability":"mutable","name":"context","nameLocation":"19034:7:3","nodeType":"VariableDeclaration","scope":1504,"src":"19021:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1417,"name":"bytes","nodeType":"ElementaryTypeName","src":"19021:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1420,"mutability":"mutable","name":"validationData","nameLocation":"19051:14:3","nodeType":"VariableDeclaration","scope":1504,"src":"19043:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1419,"name":"uint256","nodeType":"ElementaryTypeName","src":"19043:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19020:46:3"},"scope":2095,"src":"18826:1252:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1574,"nodeType":"Block","src":"20657:939:3","statements":[{"assignments":[1517,1519],"declarations":[{"constant":false,"id":1517,"mutability":"mutable","name":"aggregator","nameLocation":"20676:10:3","nodeType":"VariableDeclaration","scope":1574,"src":"20668:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1516,"name":"address","nodeType":"ElementaryTypeName","src":"20668:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1519,"mutability":"mutable","name":"outOfTimeRange","nameLocation":"20693:14:3","nodeType":"VariableDeclaration","scope":1574,"src":"20688:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1518,"name":"bool","nodeType":"ElementaryTypeName","src":"20688:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1523,"initialValue":{"arguments":[{"id":1521,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"20743:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1520,"name":"_getValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"20711:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$_t_bool_$","typeString":"function (uint256) view returns (address,bool)"}},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20711:56:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bool_$","typeString":"tuple(address,bool)"}},"nodeType":"VariableDeclarationStatement","src":"20667:100:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1524,"name":"expectedAggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"20781:18:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1525,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"20803:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20781:32:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1533,"nodeType":"IfStatement","src":"20777:111:3","trueBody":{"id":1532,"nodeType":"Block","src":"20815:73:3","statements":[{"errorCall":{"arguments":[{"id":1528,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"20845:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"41413234207369676e6174757265206572726f72","id":1529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20854:22:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_230fad9992163f7c7bca82563472469d2ae8f1696105d00fd8b1abf9e366de4e","typeString":"literal_string \"AA24 signature error\""},"value":"AA24 signature error"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_230fad9992163f7c7bca82563472469d2ae8f1696105d00fd8b1abf9e366de4e","typeString":"literal_string \"AA24 signature error\""}],"id":1527,"name":"FailedOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"20836:8:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory) pure"}},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20836:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1531,"nodeType":"RevertStatement","src":"20829:48:3"}]}},{"condition":{"id":1534,"name":"outOfTimeRange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"20901:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1541,"nodeType":"IfStatement","src":"20897:96:3","trueBody":{"id":1540,"nodeType":"Block","src":"20917:76:3","statements":[{"errorCall":{"arguments":[{"id":1536,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"20947:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"414132322065787069726564206f72206e6f7420647565","id":1537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20956:25:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f6af422606d6fab6224761f4f503b9674de8994d20a0052616d3524b670e766","typeString":"literal_string \"AA22 expired or not due\""},"value":"AA22 expired or not due"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_4f6af422606d6fab6224761f4f503b9674de8994d20a0052616d3524b670e766","typeString":"literal_string \"AA22 expired or not due\""}],"id":1535,"name":"FailedOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"20938:8:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory) pure"}},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20938:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1539,"nodeType":"RevertStatement","src":"20931:51:3"}]}},{"assignments":[1543],"declarations":[{"constant":false,"id":1543,"mutability":"mutable","name":"pmAggregator","nameLocation":"21240:12:3","nodeType":"VariableDeclaration","scope":1574,"src":"21232:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1542,"name":"address","nodeType":"ElementaryTypeName","src":"21232:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1544,"nodeType":"VariableDeclarationStatement","src":"21232:20:3"},{"expression":{"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1545,"name":"pmAggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"21263:12:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1546,"name":"outOfTimeRange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"21277:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1547,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"21262:30:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bool_$","typeString":"tuple(address,bool)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1549,"name":"paymasterValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"21327:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1548,"name":"_getValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"21295:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$_t_bool_$","typeString":"function (uint256) view returns (address,bool)"}},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21295:65:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bool_$","typeString":"tuple(address,bool)"}},"src":"21262:98:3","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1552,"nodeType":"ExpressionStatement","src":"21262:98:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1553,"name":"pmAggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"21374:12:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21398:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21390:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1554,"name":"address","nodeType":"ElementaryTypeName","src":"21390:7:3","typeDescriptions":{}}},"id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21390:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21374:26:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1565,"nodeType":"IfStatement","src":"21370:105:3","trueBody":{"id":1564,"nodeType":"Block","src":"21402:73:3","statements":[{"errorCall":{"arguments":[{"id":1560,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"21432:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"41413334207369676e6174757265206572726f72","id":1561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21441:22:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_b49ba4e4826dc300b471d06b2a8612d53c4c2eb033cbfd2061c54c636bb00871","typeString":"literal_string \"AA34 signature error\""},"value":"AA34 signature error"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_b49ba4e4826dc300b471d06b2a8612d53c4c2eb033cbfd2061c54c636bb00871","typeString":"literal_string \"AA34 signature error\""}],"id":1559,"name":"FailedOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"21423:8:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory) pure"}},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21423:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1563,"nodeType":"RevertStatement","src":"21416:48:3"}]}},{"condition":{"id":1566,"name":"outOfTimeRange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"21488:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1573,"nodeType":"IfStatement","src":"21484:106:3","trueBody":{"id":1572,"nodeType":"Block","src":"21504:86:3","statements":[{"errorCall":{"arguments":[{"id":1568,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"21534:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"41413332207061796d61737465722065787069726564206f72206e6f7420647565","id":1569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21543:35:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_15a824f4c22cc564e6215a3b0d10da3af06bea6cdb58dc3760d85748fcd6036b","typeString":"literal_string \"AA32 paymaster expired or not due\""},"value":"AA32 paymaster expired or not due"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_15a824f4c22cc564e6215a3b0d10da3af06bea6cdb58dc3760d85748fcd6036b","typeString":"literal_string \"AA32 paymaster expired or not due\""}],"id":1567,"name":"FailedOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"21525:8:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory) pure"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21525:54:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1571,"nodeType":"RevertStatement","src":"21518:61:3"}]}}]},"documentation":{"id":1505,"nodeType":"StructuredDocumentation","src":"20084:362:3","text":" Revert if either account validationData or paymaster validationData is expired.\n @param opIndex                 - The operation index.\n @param validationData          - The account validationData.\n @param paymasterValidationData - The paymaster validationData.\n @param expectedAggregator      - The expected aggregator."},"id":1575,"implemented":true,"kind":"function","modifiers":[],"name":"_validateAccountAndPaymasterValidationData","nameLocation":"20460:42:3","nodeType":"FunctionDefinition","parameters":{"id":1514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1507,"mutability":"mutable","name":"opIndex","nameLocation":"20520:7:3","nodeType":"VariableDeclaration","scope":1575,"src":"20512:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1506,"name":"uint256","nodeType":"ElementaryTypeName","src":"20512:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1509,"mutability":"mutable","name":"validationData","nameLocation":"20545:14:3","nodeType":"VariableDeclaration","scope":1575,"src":"20537:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1508,"name":"uint256","nodeType":"ElementaryTypeName","src":"20537:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1511,"mutability":"mutable","name":"paymasterValidationData","nameLocation":"20577:23:3","nodeType":"VariableDeclaration","scope":1575,"src":"20569:31:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1510,"name":"uint256","nodeType":"ElementaryTypeName","src":"20569:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1513,"mutability":"mutable","name":"expectedAggregator","nameLocation":"20618:18:3","nodeType":"VariableDeclaration","scope":1575,"src":"20610:26:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1512,"name":"address","nodeType":"ElementaryTypeName","src":"20610:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"20502:140:3"},"returnParameters":{"id":1515,"nodeType":"ParameterList","parameters":[],"src":"20657:0:3"},"scope":2095,"src":"20451:1145:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1623,"nodeType":"Block","src":"21892:356:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1585,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"21906:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21924:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21906:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1596,"nodeType":"IfStatement","src":"21902:76:3","trueBody":{"id":1595,"nodeType":"Block","src":"21927:51:3","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21957:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21949:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1588,"name":"address","nodeType":"ElementaryTypeName","src":"21949:7:3","typeDescriptions":{}}},"id":1591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21949:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":1592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21961:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"id":1593,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21948:19:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bool_$","typeString":"tuple(address,bool)"}},"functionReturnParameters":1584,"id":1594,"nodeType":"Return","src":"21941:26:3"}]}},{"assignments":[1599],"declarations":[{"constant":false,"id":1599,"mutability":"mutable","name":"data","nameLocation":"22009:4:3","nodeType":"VariableDeclaration","scope":1623,"src":"21987:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2105_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":1598,"nodeType":"UserDefinedTypeName","pathNode":{"id":1597,"name":"ValidationData","nameLocations":["21987:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":2105,"src":"21987:14:3"},"referencedDeclaration":2105,"src":"21987:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2105_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"id":1603,"initialValue":{"arguments":[{"id":1601,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"22037:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1600,"name":"_parseValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"22016:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_ValidationData_$2105_memory_ptr_$","typeString":"function (uint256) pure returns (struct ValidationData memory)"}},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22016:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2105_memory_ptr","typeString":"struct ValidationData memory"}},"nodeType":"VariableDeclarationStatement","src":"21987:65:3"},{"expression":{"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1604,"name":"outOfTimeRange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"22116:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1605,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"22133:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22139:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"22133:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1607,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"22151:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2105_memory_ptr","typeString":"struct ValidationData memory"}},"id":1608,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22156:10:3","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":2104,"src":"22151:15:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"22133:33:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1610,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"22170:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22176:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"22170:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1612,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"22188:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2105_memory_ptr","typeString":"struct ValidationData memory"}},"id":1613,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22193:10:3","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":2102,"src":"22188:15:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"22170:33:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22133:70:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22116:87:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1617,"nodeType":"ExpressionStatement","src":"22116:87:3"},{"expression":{"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1618,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"22213:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1619,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"22226:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2105_memory_ptr","typeString":"struct ValidationData memory"}},"id":1620,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22231:10:3","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":2100,"src":"22226:15:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"22213:28:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1622,"nodeType":"ExpressionStatement","src":"22213:28:3"}]},"documentation":{"id":1576,"nodeType":"StructuredDocumentation","src":"21602:155:3","text":" Parse validationData into its components.\n @param validationData - The packed validation data (sigFailed, validAfter, validUntil)."},"id":1624,"implemented":true,"kind":"function","modifiers":[],"name":"_getValidationData","nameLocation":"21771:18:3","nodeType":"FunctionDefinition","parameters":{"id":1579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1578,"mutability":"mutable","name":"validationData","nameLocation":"21807:14:3","nodeType":"VariableDeclaration","scope":1624,"src":"21799:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1577,"name":"uint256","nodeType":"ElementaryTypeName","src":"21799:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21789:38:3"},"returnParameters":{"id":1584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1581,"mutability":"mutable","name":"aggregator","nameLocation":"21859:10:3","nodeType":"VariableDeclaration","scope":1624,"src":"21851:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1580,"name":"address","nodeType":"ElementaryTypeName","src":"21851:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1583,"mutability":"mutable","name":"outOfTimeRange","nameLocation":"21876:14:3","nodeType":"VariableDeclaration","scope":1624,"src":"21871:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1582,"name":"bool","nodeType":"ElementaryTypeName","src":"21871:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21850:41:3"},"scope":2095,"src":"21762:486:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1798,"nodeType":"Block","src":"22853:1876:3","statements":[{"assignments":[1641],"declarations":[{"constant":false,"id":1641,"mutability":"mutable","name":"preGas","nameLocation":"22871:6:3","nodeType":"VariableDeclaration","scope":1798,"src":"22863:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1640,"name":"uint256","nodeType":"ElementaryTypeName","src":"22863:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1644,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1642,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"22880:7:3","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22880:9:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22863:26:3"},{"assignments":[1647],"declarations":[{"constant":false,"id":1647,"mutability":"mutable","name":"mUserOp","nameLocation":"22919:7:3","nodeType":"VariableDeclaration","scope":1798,"src":"22899:27:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp"},"typeName":{"id":1646,"nodeType":"UserDefinedTypeName","pathNode":{"id":1645,"name":"MemoryUserOp","nameLocations":["22899:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":819,"src":"22899:12:3"},"referencedDeclaration":819,"src":"22899:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_storage_ptr","typeString":"struct EntryPoint.MemoryUserOp"}},"visibility":"internal"}],"id":1650,"initialValue":{"expression":{"id":1648,"name":"outOpInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"22929:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":1649,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22939:7:3","memberName":"mUserOp","nodeType":"MemberAccess","referencedDeclaration":822,"src":"22929:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"nodeType":"VariableDeclarationStatement","src":"22899:47:3"},{"expression":{"arguments":[{"id":1652,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"22976:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},{"id":1653,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"22984:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"},{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}],"id":1651,"name":"_copyUserOpToMemory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"22956:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_PackedUserOperation_$3559_calldata_ptr_$_t_struct$_MemoryUserOp_$819_memory_ptr_$returns$__$","typeString":"function (struct PackedUserOperation calldata,struct EntryPoint.MemoryUserOp memory) pure"}},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22956:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1655,"nodeType":"ExpressionStatement","src":"22956:36:3"},{"expression":{"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1656,"name":"outOpInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"23002:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":1658,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"23012:10:3","memberName":"userOpHash","nodeType":"MemberAccess","referencedDeclaration":824,"src":"23002:20:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1660,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"23039:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"}],"id":1659,"name":"getUserOpHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"23025:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_PackedUserOperation_$3559_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (struct PackedUserOperation calldata) view returns (bytes32)"}},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23025:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"23002:44:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1663,"nodeType":"ExpressionStatement","src":"23002:44:3"},{"assignments":[1665],"declarations":[{"constant":false,"id":1665,"mutability":"mutable","name":"maxGasValues","nameLocation":"23218:12:3","nodeType":"VariableDeclaration","scope":1798,"src":"23210:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1664,"name":"uint256","nodeType":"ElementaryTypeName","src":"23210:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1686,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1666,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"23233:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1667,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23241:18:3","memberName":"preVerificationGas","nodeType":"MemberAccess","referencedDeclaration":812,"src":"23233:26:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":1668,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"23274:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1669,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23282:20:3","memberName":"verificationGasLimit","nodeType":"MemberAccess","referencedDeclaration":804,"src":"23274:28:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23233:69:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":1671,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"23317:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1672,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23325:12:3","memberName":"callGasLimit","nodeType":"MemberAccess","referencedDeclaration":806,"src":"23317:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23233:104:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":1674,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"23352:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1675,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23360:29:3","memberName":"paymasterVerificationGasLimit","nodeType":"MemberAccess","referencedDeclaration":808,"src":"23352:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23233:156:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":1677,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"23404:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1678,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23412:23:3","memberName":"paymasterPostOpGasLimit","nodeType":"MemberAccess","referencedDeclaration":810,"src":"23404:31:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23233:202:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":1680,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"23450:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23457:12:3","memberName":"maxFeePerGas","nodeType":"MemberAccess","referencedDeclaration":3552,"src":"23450:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23233:236:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":1683,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"23484:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23491:20:3","memberName":"maxPriorityFeePerGas","nodeType":"MemberAccess","referencedDeclaration":3554,"src":"23484:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23233:278:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23210:301:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1688,"name":"maxGasValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"23529:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23550:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":1690,"name":"uint120","nodeType":"ElementaryTypeName","src":"23550:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":1689,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"23545:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23545:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":1693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"23559:3:3","memberName":"max","nodeType":"MemberAccess","src":"23545:17:3","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"23529:33:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41413934206761732076616c756573206f766572666c6f77","id":1695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23564:26:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_2454d602dd1245dd701375973b2bac347a9e27dc7542cb5ffbdc114cb2232f69","typeString":"literal_string \"AA94 gas values overflow\""},"value":"AA94 gas values overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2454d602dd1245dd701375973b2bac347a9e27dc7542cb5ffbdc114cb2232f69","typeString":"literal_string \"AA94 gas values overflow\""}],"id":1687,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23521:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23521:70:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1697,"nodeType":"ExpressionStatement","src":"23521:70:3"},{"assignments":[1699],"declarations":[{"constant":false,"id":1699,"mutability":"mutable","name":"requiredPreFund","nameLocation":"23610:15:3","nodeType":"VariableDeclaration","scope":1798,"src":"23602:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1698,"name":"uint256","nodeType":"ElementaryTypeName","src":"23602:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1703,"initialValue":{"arguments":[{"id":1701,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"23648:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}],"id":1700,"name":"_getRequiredPrefund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"23628:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_MemoryUserOp_$819_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct EntryPoint.MemoryUserOp memory) pure returns (uint256)"}},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23628:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23602:54:3"},{"expression":{"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1704,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"23666:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1706,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"23723:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1707,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"23744:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},{"id":1708,"name":"outOpInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"23764:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},{"id":1709,"name":"requiredPreFund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"23787:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"},{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1705,"name":"_validateAccountPrepayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"23683:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_struct$_PackedUserOperation_$3559_calldata_ptr_$_t_struct$_UserOpInfo_$831_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,struct PackedUserOperation calldata,struct EntryPoint.UserOpInfo memory,uint256) returns (uint256)"}},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23683:129:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23666:146:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1712,"nodeType":"ExpressionStatement","src":"23666:146:3"},{"condition":{"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"23827:55:3","subExpression":{"arguments":[{"expression":{"id":1714,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"23852:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1715,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23860:6:3","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":800,"src":"23852:14:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1716,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"23868:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1717,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23876:5:3","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":802,"src":"23868:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1713,"name":"_validateAndUpdateNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"23828:23:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23828:54:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1726,"nodeType":"IfStatement","src":"23823:140:3","trueBody":{"id":1725,"nodeType":"Block","src":"23884:79:3","statements":[{"errorCall":{"arguments":[{"id":1721,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"23914:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"4141323520696e76616c6964206163636f756e74206e6f6e6365","id":1722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23923:28:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_1a6d2773a48550bbfcfd396dd79645bef61ab18efc53f13933af43bfa63cc5b5","typeString":"literal_string \"AA25 invalid account nonce\""},"value":"AA25 invalid account nonce"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_1a6d2773a48550bbfcfd396dd79645bef61ab18efc53f13933af43bfa63cc5b5","typeString":"literal_string \"AA25 invalid account nonce\""}],"id":1720,"name":"FailedOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"23905:8:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory) pure"}},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23905:47:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1724,"nodeType":"RevertStatement","src":"23898:54:3"}]}},{"assignments":[1728],"declarations":[{"constant":false,"id":1728,"mutability":"mutable","name":"context","nameLocation":"23986:7:3","nodeType":"VariableDeclaration","scope":1798,"src":"23973:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1727,"name":"bytes","nodeType":"ElementaryTypeName","src":"23973:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1729,"nodeType":"VariableDeclarationStatement","src":"23973:20:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1730,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"24007:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1731,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24015:9:3","memberName":"paymaster","nodeType":"MemberAccess","referencedDeclaration":814,"src":"24007:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24036:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24028:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1732,"name":"address","nodeType":"ElementaryTypeName","src":"24028:7:3","typeDescriptions":{}}},"id":1735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24028:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"24007:31:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1749,"nodeType":"IfStatement","src":"24003:250:3","trueBody":{"id":1748,"nodeType":"Block","src":"24040:213:3","statements":[{"expression":{"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1737,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"24055:7:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1738,"name":"paymasterValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"24064:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1739,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"24054:34:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_uint256_$","typeString":"tuple(bytes memory,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1741,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"24137:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1742,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"24162:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},{"id":1743,"name":"outOpInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"24186:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},{"id":1744,"name":"requiredPreFund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"24213:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"},{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1740,"name":"_validatePaymasterPrepayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"24091:28:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_struct$_PackedUserOperation_$3559_calldata_ptr_$_t_struct$_UserOpInfo_$831_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$_t_uint256_$","typeString":"function (uint256,struct PackedUserOperation calldata,struct EntryPoint.UserOpInfo memory,uint256) returns (bytes memory,uint256)"}},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24091:151:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_uint256_$","typeString":"tuple(bytes memory,uint256)"}},"src":"24054:188:3","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1747,"nodeType":"ExpressionStatement","src":"24054:188:3"}]}},{"id":1797,"nodeType":"UncheckedBlock","src":"24262:461:3","statements":[{"assignments":[1751],"declarations":[{"constant":false,"id":1751,"mutability":"mutable","name":"gasUsed","nameLocation":"24294:7:3","nodeType":"VariableDeclaration","scope":1797,"src":"24286:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1750,"name":"uint256","nodeType":"ElementaryTypeName","src":"24286:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1756,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1752,"name":"preGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"24304:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1753,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"24313:7:3","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24313:9:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24304:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"24286:36:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1757,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"24341:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1758,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24349:20:3","memberName":"verificationGasLimit","nodeType":"MemberAccess","referencedDeclaration":804,"src":"24341:28:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1759,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"24372:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1760,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24380:29:3","memberName":"paymasterVerificationGasLimit","nodeType":"MemberAccess","referencedDeclaration":808,"src":"24372:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24341:68:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1762,"name":"gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"24412:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24341:78:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1770,"nodeType":"IfStatement","src":"24337:175:3","trueBody":{"id":1769,"nodeType":"Block","src":"24421:91:3","statements":[{"errorCall":{"arguments":[{"id":1765,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"24455:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"41413430206f76657220766572696669636174696f6e4761734c696d6974","id":1766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24464:32:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_7d1dd4a09dc6414e69300598bfd3bd697585d57a99ffc262a56c7dd3f91bdcaf","typeString":"literal_string \"AA40 over verificationGasLimit\""},"value":"AA40 over verificationGasLimit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_7d1dd4a09dc6414e69300598bfd3bd697585d57a99ffc262a56c7dd3f91bdcaf","typeString":"literal_string \"AA40 over verificationGasLimit\""}],"id":1764,"name":"FailedOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"24446:8:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory) pure"}},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24446:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1768,"nodeType":"RevertStatement","src":"24439:58:3"}]}},{"expression":{"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1771,"name":"outOpInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"24525:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":1773,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"24535:7:3","memberName":"prefund","nodeType":"MemberAccess","referencedDeclaration":826,"src":"24525:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1774,"name":"requiredPreFund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"24545:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24525:35:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1776,"nodeType":"ExpressionStatement","src":"24525:35:3"},{"expression":{"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1777,"name":"outOpInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"24574:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":1779,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"24584:13:3","memberName":"contextOffset","nodeType":"MemberAccess","referencedDeclaration":828,"src":"24574:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1781,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"24623:7:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1780,"name":"getOffsetOfMemoryBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"24600:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory) pure returns (uint256)"}},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24600:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24574:57:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1784,"nodeType":"ExpressionStatement","src":"24574:57:3"},{"expression":{"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1785,"name":"outOpInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"24645:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":1787,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"24655:8:3","memberName":"preOpGas","nodeType":"MemberAccess","referencedDeclaration":830,"src":"24645:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1788,"name":"preGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"24666:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1789,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"24675:7:3","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24675:9:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24666:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1792,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"24687:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24694:18:3","memberName":"preVerificationGas","nodeType":"MemberAccess","referencedDeclaration":3550,"src":"24687:25:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24666:46:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24645:67:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1796,"nodeType":"ExpressionStatement","src":"24645:67:3"}]}]},"documentation":{"id":1625,"nodeType":"StructuredDocumentation","src":"22254:357:3","text":" Validate account and paymaster (if defined) and\n also make sure total validation doesn't exceed verificationGasLimit.\n This method is called off-chain (simulateValidation()) and on-chain (from handleOps)\n @param opIndex - The index of this userOp into the \"opInfos\" array.\n @param userOp  - The userOp to validate."},"id":1799,"implemented":true,"kind":"function","modifiers":[],"name":"_validatePrepayment","nameLocation":"22625:19:3","nodeType":"FunctionDefinition","parameters":{"id":1634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1627,"mutability":"mutable","name":"opIndex","nameLocation":"22662:7:3","nodeType":"VariableDeclaration","scope":1799,"src":"22654:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1626,"name":"uint256","nodeType":"ElementaryTypeName","src":"22654:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1630,"mutability":"mutable","name":"userOp","nameLocation":"22708:6:3","nodeType":"VariableDeclaration","scope":1799,"src":"22679:35:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":1629,"nodeType":"UserDefinedTypeName","pathNode":{"id":1628,"name":"PackedUserOperation","nameLocations":["22679:19:3"],"nodeType":"IdentifierPath","referencedDeclaration":3559,"src":"22679:19:3"},"referencedDeclaration":3559,"src":"22679:19:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":1633,"mutability":"mutable","name":"outOpInfo","nameLocation":"22742:9:3","nodeType":"VariableDeclaration","scope":1799,"src":"22724:27:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo"},"typeName":{"id":1632,"nodeType":"UserDefinedTypeName","pathNode":{"id":1631,"name":"UserOpInfo","nameLocations":["22724:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":831,"src":"22724:10:3"},"referencedDeclaration":831,"src":"22724:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_storage_ptr","typeString":"struct EntryPoint.UserOpInfo"}},"visibility":"internal"}],"src":"22644:113:3"},"returnParameters":{"id":1639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1636,"mutability":"mutable","name":"validationData","nameLocation":"22800:14:3","nodeType":"VariableDeclaration","scope":1799,"src":"22792:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1635,"name":"uint256","nodeType":"ElementaryTypeName","src":"22792:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1638,"mutability":"mutable","name":"paymasterValidationData","nameLocation":"22824:23:3","nodeType":"VariableDeclaration","scope":1799,"src":"22816:31:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1637,"name":"uint256","nodeType":"ElementaryTypeName","src":"22816:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22791:57:3"},"scope":2095,"src":"22616:2113:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2014,"nodeType":"Block","src":"25614:2720:3","statements":[{"assignments":[1818],"declarations":[{"constant":false,"id":1818,"mutability":"mutable","name":"preGas","nameLocation":"25632:6:3","nodeType":"VariableDeclaration","scope":2014,"src":"25624:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1817,"name":"uint256","nodeType":"ElementaryTypeName","src":"25624:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1821,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1819,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"25641:7:3","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25641:9:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25624:26:3"},{"id":2013,"nodeType":"UncheckedBlock","src":"25660:2655:3","statements":[{"assignments":[1823],"declarations":[{"constant":false,"id":1823,"mutability":"mutable","name":"refundAddress","nameLocation":"25692:13:3","nodeType":"VariableDeclaration","scope":2013,"src":"25684:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1822,"name":"address","nodeType":"ElementaryTypeName","src":"25684:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1824,"nodeType":"VariableDeclarationStatement","src":"25684:21:3"},{"assignments":[1827],"declarations":[{"constant":false,"id":1827,"mutability":"mutable","name":"mUserOp","nameLocation":"25739:7:3","nodeType":"VariableDeclaration","scope":2013,"src":"25719:27:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp"},"typeName":{"id":1826,"nodeType":"UserDefinedTypeName","pathNode":{"id":1825,"name":"MemoryUserOp","nameLocations":["25719:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":819,"src":"25719:12:3"},"referencedDeclaration":819,"src":"25719:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_storage_ptr","typeString":"struct EntryPoint.MemoryUserOp"}},"visibility":"internal"}],"id":1830,"initialValue":{"expression":{"id":1828,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"25749:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":1829,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25756:7:3","memberName":"mUserOp","nodeType":"MemberAccess","referencedDeclaration":822,"src":"25749:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"nodeType":"VariableDeclarationStatement","src":"25719:44:3"},{"assignments":[1832],"declarations":[{"constant":false,"id":1832,"mutability":"mutable","name":"gasPrice","nameLocation":"25785:8:3","nodeType":"VariableDeclaration","scope":2013,"src":"25777:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1831,"name":"uint256","nodeType":"ElementaryTypeName","src":"25777:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1836,"initialValue":{"arguments":[{"id":1834,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"25814:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}],"id":1833,"name":"getUserOpGasPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"25796:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_MemoryUserOp_$819_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct EntryPoint.MemoryUserOp memory) view returns (uint256)"}},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25796:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25777:45:3"},{"assignments":[1838],"declarations":[{"constant":false,"id":1838,"mutability":"mutable","name":"paymaster","nameLocation":"25845:9:3","nodeType":"VariableDeclaration","scope":2013,"src":"25837:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1837,"name":"address","nodeType":"ElementaryTypeName","src":"25837:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1841,"initialValue":{"expression":{"id":1839,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"25857:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1840,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25865:9:3","memberName":"paymaster","nodeType":"MemberAccess","referencedDeclaration":814,"src":"25857:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"25837:37:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1842,"name":"paymaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"25892:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25913:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25905:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1843,"name":"address","nodeType":"ElementaryTypeName","src":"25905:7:3","typeDescriptions":{}}},"id":1846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25905:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"25892:23:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1905,"nodeType":"Block","src":"25986:741:3","statements":[{"expression":{"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1854,"name":"refundAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"26004:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1855,"name":"paymaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"26020:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"26004:25:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1857,"nodeType":"ExpressionStatement","src":"26004:25:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1858,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"26051:7:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26059:6:3","memberName":"length","nodeType":"MemberAccess","src":"26051:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26068:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"26051:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1904,"nodeType":"IfStatement","src":"26047:666:3","trueBody":{"id":1903,"nodeType":"Block","src":"26071:642:3","statements":[{"expression":{"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1862,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"26093:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1863,"name":"actualGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"26109:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1864,"name":"gasPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"26121:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26109:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26093:36:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1867,"nodeType":"ExpressionStatement","src":"26093:36:3"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_PostOpMode_$3402","typeString":"enum IPaymaster.PostOpMode"},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1868,"name":"mode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"26155:4:3","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3402","typeString":"enum IPaymaster.PostOpMode"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1869,"name":"IPaymaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"26163:10:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPaymaster_$3431_$","typeString":"type(contract IPaymaster)"}},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26174:10:3","memberName":"PostOpMode","nodeType":"MemberAccess","referencedDeclaration":3402,"src":"26163:21:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PostOpMode_$3402_$","typeString":"type(enum IPaymaster.PostOpMode)"}},"id":1871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"26185:14:3","memberName":"postOpReverted","nodeType":"MemberAccess","referencedDeclaration":3401,"src":"26163:36:3","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3402","typeString":"enum IPaymaster.PostOpMode"}},"src":"26155:44:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1902,"nodeType":"IfStatement","src":"26151:544:3","trueBody":{"id":1901,"nodeType":"Block","src":"26201:494:3","statements":[{"clauses":[{"block":{"id":1885,"nodeType":"Block","src":"26485:2:3","statements":[]},"errorName":"","id":1886,"nodeType":"TryCatchClause","src":"26485:2:3"},{"block":{"id":1898,"nodeType":"Block","src":"26494:179:3","statements":[{"assignments":[1888],"declarations":[{"constant":false,"id":1888,"mutability":"mutable","name":"reason","nameLocation":"26537:6:3","nodeType":"VariableDeclaration","scope":1898,"src":"26524:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1887,"name":"bytes","nodeType":"ElementaryTypeName","src":"26524:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1893,"initialValue":{"arguments":[{"id":1891,"name":"REVERT_REASON_MAX_LEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"26565:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1889,"name":"Exec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"26546:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Exec_$3650_$","typeString":"type(library Exec)"}},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26551:13:3","memberName":"getReturnData","nodeType":"MemberAccess","referencedDeclaration":3612,"src":"26546:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"}},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26546:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"26524:63:3"},{"errorCall":{"arguments":[{"id":1895,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"26639:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1894,"name":"PostOpReverted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"26624:14:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26624:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1897,"nodeType":"RevertStatement","src":"26617:29:3"}]},"errorName":"","id":1899,"nodeType":"TryCatchClause","src":"26488:185:3"}],"externalCall":{"arguments":[{"id":1880,"name":"mode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"26352:4:3","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3402","typeString":"enum IPaymaster.PostOpMode"}},{"id":1881,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"26358:7:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1882,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"26367:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1883,"name":"gasPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"26382:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_PostOpMode_$3402","typeString":"enum IPaymaster.PostOpMode"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_PostOpMode_$3402","typeString":"enum IPaymaster.PostOpMode"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1874,"name":"paymaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"26242:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1873,"name":"IPaymaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"26231:10:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPaymaster_$3431_$","typeString":"type(contract IPaymaster)"}},"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26231:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPaymaster_$3431","typeString":"contract IPaymaster"}},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26253:6:3","memberName":"postOp","nodeType":"MemberAccess","referencedDeclaration":3430,"src":"26231:28:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_enum$_PostOpMode_$3402_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (enum IPaymaster.PostOpMode,bytes memory,uint256,uint256) external"}},"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["gas"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":1877,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"26294:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1878,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26302:23:3","memberName":"paymasterPostOpGasLimit","nodeType":"MemberAccess","referencedDeclaration":810,"src":"26294:31:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"26231:120:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_enum$_PostOpMode_$3402_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$gas","typeString":"function (enum IPaymaster.PostOpMode,bytes memory,uint256,uint256) external"}},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26231:160:3","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1900,"nodeType":"TryStatement","src":"26227:446:3"}]}}]}}]},"id":1906,"nodeType":"IfStatement","src":"25888:839:3","trueBody":{"id":1853,"nodeType":"Block","src":"25917:63:3","statements":[{"expression":{"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1848,"name":"refundAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"25935:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1849,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"25951:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1850,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25959:6:3","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":800,"src":"25951:14:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"25935:30:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1852,"nodeType":"ExpressionStatement","src":"25935:30:3"}]}},{"expression":{"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1907,"name":"actualGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"26740:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1908,"name":"preGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"26753:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1909,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"26762:7:3","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:9:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26753:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26740:31:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1913,"nodeType":"ExpressionStatement","src":"26740:31:3"},{"id":1961,"nodeType":"Block","src":"26848:812:3","statements":[{"assignments":[1915],"declarations":[{"constant":false,"id":1915,"mutability":"mutable","name":"executionGasLimit","nameLocation":"26874:17:3","nodeType":"VariableDeclaration","scope":1961,"src":"26866:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1914,"name":"uint256","nodeType":"ElementaryTypeName","src":"26866:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1918,"initialValue":{"expression":{"id":1916,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"26894:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1917,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26902:12:3","memberName":"callGasLimit","nodeType":"MemberAccess","referencedDeclaration":806,"src":"26894:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26866:48:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1919,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"27055:7:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27063:6:3","memberName":"length","nodeType":"MemberAccess","src":"27055:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27072:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"27055:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1929,"nodeType":"IfStatement","src":"27051:116:3","trueBody":{"id":1928,"nodeType":"Block","src":"27074:93:3","statements":[{"expression":{"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1923,"name":"executionGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"27096:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":1924,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"27117:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":1925,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27125:23:3","memberName":"paymasterPostOpGasLimit","nodeType":"MemberAccess","referencedDeclaration":810,"src":"27117:31:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27096:52:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1927,"nodeType":"ExpressionStatement","src":"27096:52:3"}]}},{"assignments":[1931],"declarations":[{"constant":false,"id":1931,"mutability":"mutable","name":"executionGasUsed","nameLocation":"27192:16:3","nodeType":"VariableDeclaration","scope":1961,"src":"27184:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1930,"name":"uint256","nodeType":"ElementaryTypeName","src":"27184:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1936,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1932,"name":"actualGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"27211:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":1933,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"27223:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":1934,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27230:8:3","memberName":"preOpGas","nodeType":"MemberAccess","referencedDeclaration":830,"src":"27223:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27211:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27184:54:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1937,"name":"executionGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"27376:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1938,"name":"executionGasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"27396:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27376:36:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1960,"nodeType":"IfStatement","src":"27372:274:3","trueBody":{"id":1959,"nodeType":"Block","src":"27414:232:3","statements":[{"assignments":[1941],"declarations":[{"constant":false,"id":1941,"mutability":"mutable","name":"unusedGas","nameLocation":"27444:9:3","nodeType":"VariableDeclaration","scope":1959,"src":"27436:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1940,"name":"uint256","nodeType":"ElementaryTypeName","src":"27436:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1945,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1942,"name":"executionGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"27456:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1943,"name":"executionGasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"27476:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27456:36:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27436:56:3"},{"assignments":[1947],"declarations":[{"constant":false,"id":1947,"mutability":"mutable","name":"unusedGasPenalty","nameLocation":"27522:16:3","nodeType":"VariableDeclaration","scope":1959,"src":"27514:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1946,"name":"uint256","nodeType":"ElementaryTypeName","src":"27514:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1954,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1948,"name":"unusedGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"27542:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1949,"name":"PENALTY_PERCENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"27554:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27542:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1951,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27541:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":1952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27573:3:3","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"27541:35:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27514:62:3"},{"expression":{"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1955,"name":"actualGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"27598:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1956,"name":"unusedGasPenalty","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"27611:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27598:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1958,"nodeType":"ExpressionStatement","src":"27598:29:3"}]}}]},{"expression":{"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1962,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"27674:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1963,"name":"actualGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"27690:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1964,"name":"gasPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"27702:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27690:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27674:36:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1967,"nodeType":"ExpressionStatement","src":"27674:36:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1968,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"27728:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":1969,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27735:7:3","memberName":"prefund","nodeType":"MemberAccess","referencedDeclaration":826,"src":"27728:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1970,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"27745:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27728:30:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1978,"nodeType":"IfStatement","src":"27724:129:3","trueBody":{"id":1977,"nodeType":"Block","src":"27760:93:3","statements":[{"errorCall":{"arguments":[{"id":1973,"name":"opIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"27794:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"414135312070726566756e642062656c6f772061637475616c476173436f7374","id":1974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27803:34:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d9dc9889ad1c5031a22e90fdbb1ca90f7e3143417446c3f113ca547893317fb","typeString":"literal_string \"AA51 prefund below actualGasCost\""},"value":"AA51 prefund below actualGasCost"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_6d9dc9889ad1c5031a22e90fdbb1ca90f7e3143417446c3f113ca547893317fb","typeString":"literal_string \"AA51 prefund below actualGasCost\""}],"id":1972,"name":"FailedOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"27785:8:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory) pure"}},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27785:53:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1976,"nodeType":"RevertStatement","src":"27778:60:3"}]}},{"assignments":[1980],"declarations":[{"constant":false,"id":1980,"mutability":"mutable","name":"refund","nameLocation":"27874:6:3","nodeType":"VariableDeclaration","scope":2013,"src":"27866:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1979,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1985,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1981,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"27883:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":1982,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"27890:7:3","memberName":"prefund","nodeType":"MemberAccess","referencedDeclaration":826,"src":"27883:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1983,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"27900:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27883:30:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27866:47:3"},{"expression":{"arguments":[{"id":1987,"name":"refundAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"27945:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1988,"name":"refund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"27960:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1986,"name":"_incrementDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"27927:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) returns (uint256)"}},"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27927:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1990,"nodeType":"ExpressionStatement","src":"27927:40:3"},{"assignments":[1992],"declarations":[{"constant":false,"id":1992,"mutability":"mutable","name":"success","nameLocation":"27986:7:3","nodeType":"VariableDeclaration","scope":2013,"src":"27981:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1991,"name":"bool","nodeType":"ElementaryTypeName","src":"27981:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1998,"initialValue":{"commonType":{"typeIdentifier":"t_enum$_PostOpMode_$3402","typeString":"enum IPaymaster.PostOpMode"},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1993,"name":"mode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"27996:4:3","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3402","typeString":"enum IPaymaster.PostOpMode"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":1994,"name":"IPaymaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"28004:10:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPaymaster_$3431_$","typeString":"type(contract IPaymaster)"}},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28015:10:3","memberName":"PostOpMode","nodeType":"MemberAccess","referencedDeclaration":3402,"src":"28004:21:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PostOpMode_$3402_$","typeString":"type(enum IPaymaster.PostOpMode)"}},"id":1996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"28026:11:3","memberName":"opSucceeded","nodeType":"MemberAccess","referencedDeclaration":3399,"src":"28004:33:3","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3402","typeString":"enum IPaymaster.PostOpMode"}},"src":"27996:41:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"27981:56:3"},{"eventCall":{"arguments":[{"expression":{"id":2000,"name":"opInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"28092:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo memory"}},"id":2001,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"28099:10:3","memberName":"userOpHash","nodeType":"MemberAccess","referencedDeclaration":824,"src":"28092:17:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2002,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"28127:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":2003,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"28135:6:3","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":800,"src":"28127:14:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2004,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"28159:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":2005,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"28167:9:3","memberName":"paymaster","nodeType":"MemberAccess","referencedDeclaration":814,"src":"28159:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2006,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"28194:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":2007,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"28202:5:3","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":802,"src":"28194:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2008,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"28225:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2009,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"28250:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2010,"name":"actualGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"28281:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1999,"name":"UserOperationEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"28056:18:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$_t_bool_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,address,uint256,bool,uint256,uint256)"}},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28056:248:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2012,"nodeType":"EmitStatement","src":"28051:253:3"}]}]},"documentation":{"id":1800,"nodeType":"StructuredDocumentation","src":"24735:652:3","text":" Process post-operation, called just after the callData is executed.\n If a paymaster is defined and its validation returned a non-empty context, its postOp is called.\n The excess amount is refunded to the account (or paymaster - if it was used in the request).\n @param opIndex   - Index in the batch.\n @param mode      - Whether is called from innerHandleOp, or outside (postOpReverted).\n @param opInfo    - UserOp fields and info collected during validation.\n @param context   - The context returned in validatePaymasterUserOp.\n @param actualGas - The gas used so far by this user operation."},"id":2015,"implemented":true,"kind":"function","modifiers":[],"name":"_postExecution","nameLocation":"25401:14:3","nodeType":"FunctionDefinition","parameters":{"id":1813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1802,"mutability":"mutable","name":"opIndex","nameLocation":"25433:7:3","nodeType":"VariableDeclaration","scope":2015,"src":"25425:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1801,"name":"uint256","nodeType":"ElementaryTypeName","src":"25425:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1805,"mutability":"mutable","name":"mode","nameLocation":"25472:4:3","nodeType":"VariableDeclaration","scope":2015,"src":"25450:26:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3402","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":1804,"nodeType":"UserDefinedTypeName","pathNode":{"id":1803,"name":"IPaymaster.PostOpMode","nameLocations":["25450:10:3","25461:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":3402,"src":"25450:21:3"},"referencedDeclaration":3402,"src":"25450:21:3","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3402","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":1808,"mutability":"mutable","name":"opInfo","nameLocation":"25504:6:3","nodeType":"VariableDeclaration","scope":2015,"src":"25486:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_memory_ptr","typeString":"struct EntryPoint.UserOpInfo"},"typeName":{"id":1807,"nodeType":"UserDefinedTypeName","pathNode":{"id":1806,"name":"UserOpInfo","nameLocations":["25486:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":831,"src":"25486:10:3"},"referencedDeclaration":831,"src":"25486:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpInfo_$831_storage_ptr","typeString":"struct EntryPoint.UserOpInfo"}},"visibility":"internal"},{"constant":false,"id":1810,"mutability":"mutable","name":"context","nameLocation":"25533:7:3","nodeType":"VariableDeclaration","scope":2015,"src":"25520:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1809,"name":"bytes","nodeType":"ElementaryTypeName","src":"25520:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1812,"mutability":"mutable","name":"actualGas","nameLocation":"25558:9:3","nodeType":"VariableDeclaration","scope":2015,"src":"25550:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1811,"name":"uint256","nodeType":"ElementaryTypeName","src":"25550:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25415:158:3"},"returnParameters":{"id":1816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1815,"mutability":"mutable","name":"actualGasCost","nameLocation":"25599:13:3","nodeType":"VariableDeclaration","scope":2015,"src":"25591:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1814,"name":"uint256","nodeType":"ElementaryTypeName","src":"25591:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25590:23:3"},"scope":2095,"src":"25392:2942:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2050,"nodeType":"Block","src":"28667:429:3","statements":[{"id":2049,"nodeType":"UncheckedBlock","src":"28677:413:3","statements":[{"assignments":[2025],"declarations":[{"constant":false,"id":2025,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"28709:12:3","nodeType":"VariableDeclaration","scope":2049,"src":"28701:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2024,"name":"uint256","nodeType":"ElementaryTypeName","src":"28701:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2028,"initialValue":{"expression":{"id":2026,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"28724:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":2027,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"28732:12:3","memberName":"maxFeePerGas","nodeType":"MemberAccess","referencedDeclaration":816,"src":"28724:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28701:43:3"},{"assignments":[2030],"declarations":[{"constant":false,"id":2030,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"28766:20:3","nodeType":"VariableDeclaration","scope":2049,"src":"28758:28:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2029,"name":"uint256","nodeType":"ElementaryTypeName","src":"28758:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2033,"initialValue":{"expression":{"id":2031,"name":"mUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"28789:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp memory"}},"id":2032,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"28797:20:3","memberName":"maxPriorityFeePerGas","nodeType":"MemberAccess","referencedDeclaration":818,"src":"28789:28:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28758:59:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2034,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"28835:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2035,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"28851:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28835:36:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2040,"nodeType":"IfStatement","src":"28831:173:3","trueBody":{"id":2039,"nodeType":"Block","src":"28873:131:3","statements":[{"expression":{"id":2037,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"28977:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2023,"id":2038,"nodeType":"Return","src":"28970:19:3"}]}},{"expression":{"arguments":[{"id":2042,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"29028:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2043,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"29042:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":2044,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"29065:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29071:7:3","memberName":"basefee","nodeType":"MemberAccess","src":"29065:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29042:36:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2041,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"29024:3:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29024:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2023,"id":2048,"nodeType":"Return","src":"29017:62:3"}]}]},"documentation":{"id":2016,"nodeType":"StructuredDocumentation","src":"28340:220:3","text":" The gas price this UserOp agrees to pay.\n Relayer/block builder might submit the TX with higher priorityFee, but the user should not.\n @param mUserOp - The userOp to get the gas price from."},"id":2051,"implemented":true,"kind":"function","modifiers":[],"name":"getUserOpGasPrice","nameLocation":"28574:17:3","nodeType":"FunctionDefinition","parameters":{"id":2020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2019,"mutability":"mutable","name":"mUserOp","nameLocation":"28621:7:3","nodeType":"VariableDeclaration","scope":2051,"src":"28601:27:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_memory_ptr","typeString":"struct EntryPoint.MemoryUserOp"},"typeName":{"id":2018,"nodeType":"UserDefinedTypeName","pathNode":{"id":2017,"name":"MemoryUserOp","nameLocations":["28601:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":819,"src":"28601:12:3"},"referencedDeclaration":819,"src":"28601:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_MemoryUserOp_$819_storage_ptr","typeString":"struct EntryPoint.MemoryUserOp"}},"visibility":"internal"}],"src":"28591:43:3"},"returnParameters":{"id":2023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2051,"src":"28658:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2021,"name":"uint256","nodeType":"ElementaryTypeName","src":"28658:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28657:9:3"},"scope":2095,"src":"28565:531:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2060,"nodeType":"Block","src":"29323:63:3","statements":[{"AST":{"nativeSrc":"29342:38:3","nodeType":"YulBlock","src":"29342:38:3","statements":[{"nativeSrc":"29356:14:3","nodeType":"YulAssignment","src":"29356:14:3","value":{"name":"data","nativeSrc":"29366:4:3","nodeType":"YulIdentifier","src":"29366:4:3"},"variableNames":[{"name":"offset","nativeSrc":"29356:6:3","nodeType":"YulIdentifier","src":"29356:6:3"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2054,"isOffset":false,"isSlot":false,"src":"29366:4:3","valueSize":1},{"declaration":2057,"isOffset":false,"isSlot":false,"src":"29356:6:3","valueSize":1}],"id":2059,"nodeType":"InlineAssembly","src":"29333:47:3"}]},"documentation":{"id":2052,"nodeType":"StructuredDocumentation","src":"29102:112:3","text":" The offset of the given bytes in memory.\n @param data - The bytes to get the offset of."},"id":2061,"implemented":true,"kind":"function","modifiers":[],"name":"getOffsetOfMemoryBytes","nameLocation":"29228:22:3","nodeType":"FunctionDefinition","parameters":{"id":2055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2054,"mutability":"mutable","name":"data","nameLocation":"29273:4:3","nodeType":"VariableDeclaration","scope":2061,"src":"29260:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2053,"name":"bytes","nodeType":"ElementaryTypeName","src":"29260:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"29250:33:3"},"returnParameters":{"id":2058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2057,"mutability":"mutable","name":"offset","nameLocation":"29315:6:3","nodeType":"VariableDeclaration","scope":2061,"src":"29307:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2056,"name":"uint256","nodeType":"ElementaryTypeName","src":"29307:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29306:16:3"},"scope":2095,"src":"29219:167:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2070,"nodeType":"Block","src":"29619:79:3","statements":[{"AST":{"nativeSrc":"29654:38:3","nodeType":"YulBlock","src":"29654:38:3","statements":[{"nativeSrc":"29668:14:3","nodeType":"YulAssignment","src":"29668:14:3","value":{"name":"offset","nativeSrc":"29676:6:3","nodeType":"YulIdentifier","src":"29676:6:3"},"variableNames":[{"name":"data","nativeSrc":"29668:4:3","nodeType":"YulIdentifier","src":"29668:4:3"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2067,"isOffset":false,"isSlot":false,"src":"29668:4:3","valueSize":1},{"declaration":2064,"isOffset":false,"isSlot":false,"src":"29676:6:3","valueSize":1}],"flags":["memory-safe"],"id":2069,"nodeType":"InlineAssembly","src":"29629:63:3"}]},"documentation":{"id":2062,"nodeType":"StructuredDocumentation","src":"29392:116:3","text":" The bytes in memory at the given offset.\n @param offset - The offset to get the bytes from."},"id":2071,"implemented":true,"kind":"function","modifiers":[],"name":"getMemoryBytesFromOffset","nameLocation":"29522:24:3","nodeType":"FunctionDefinition","parameters":{"id":2065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2064,"mutability":"mutable","name":"offset","nameLocation":"29564:6:3","nodeType":"VariableDeclaration","scope":2071,"src":"29556:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2063,"name":"uint256","nodeType":"ElementaryTypeName","src":"29556:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29546:30:3"},"returnParameters":{"id":2068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2067,"mutability":"mutable","name":"data","nameLocation":"29613:4:3","nodeType":"VariableDeclaration","scope":2071,"src":"29600:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2066,"name":"bytes","nodeType":"ElementaryTypeName","src":"29600:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"29599:19:3"},"scope":2095,"src":"29513:185:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"baseFunctions":[3374],"body":{"id":2093,"nodeType":"Block","src":"29809:125:3","statements":[{"assignments":[2080,2082],"declarations":[{"constant":false,"id":2080,"mutability":"mutable","name":"success","nameLocation":"29825:7:3","nodeType":"VariableDeclaration","scope":2093,"src":"29820:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2079,"name":"bool","nodeType":"ElementaryTypeName","src":"29820:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2082,"mutability":"mutable","name":"ret","nameLocation":"29847:3:3","nodeType":"VariableDeclaration","scope":2093,"src":"29834:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2081,"name":"bytes","nodeType":"ElementaryTypeName","src":"29834:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2087,"initialValue":{"arguments":[{"id":2085,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"29874:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":2083,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"29854:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29861:12:3","memberName":"delegatecall","nodeType":"MemberAccess","src":"29854:19:3","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29854:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"29819:60:3"},{"errorCall":{"arguments":[{"id":2089,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"29914:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2090,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"29923:3:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2088,"name":"DelegateAndRevert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"29896:17:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bool,bytes memory) pure"}},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29896:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2092,"nodeType":"RevertStatement","src":"29889:38:3"}]},"documentation":{"id":2072,"nodeType":"StructuredDocumentation","src":"29704:27:3","text":"@inheritdoc IEntryPoint"},"functionSelector":"850aaf62","id":2094,"implemented":true,"kind":"function","modifiers":[],"name":"delegateAndRevert","nameLocation":"29745:17:3","nodeType":"FunctionDefinition","parameters":{"id":2077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2074,"mutability":"mutable","name":"target","nameLocation":"29771:6:3","nodeType":"VariableDeclaration","scope":2094,"src":"29763:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2073,"name":"address","nodeType":"ElementaryTypeName","src":"29763:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2076,"mutability":"mutable","name":"data","nameLocation":"29794:4:3","nodeType":"VariableDeclaration","scope":2094,"src":"29779:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2075,"name":"bytes","nodeType":"ElementaryTypeName","src":"29779:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"29762:37:3"},"returnParameters":{"id":2078,"nodeType":"ParameterList","parameters":[],"src":"29809:0:3"},"scope":2095,"src":"29736:198:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2096,"src":"854:29082:3","usedErrors":[13,3272,3281,3285,3290,3294,3366],"usedEvents":[3224,3235,3246,3257,3260,3265,3440,3448,3456,3462,3470]}],"src":"36:29901:3"},"id":3},"contracts/core/Helpers.sol":{"ast":{"absolutePath":"contracts/core/Helpers.sol","exportedSymbols":{"ValidationData":[2105],"_intersectTimeRange":[2251],"_packValidationData":[2288,2326],"_parseValidationData":[2165],"calldataKeccak":[2336],"min":[2354]},"id":2355,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":2097,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"36:24:4"},{"canonicalName":"ValidationData","documentation":{"id":2098,"nodeType":"StructuredDocumentation","src":"104:639:4","text":" Returned data from validateUserOp.\n validateUserOp returns a uint256, with is created by `_packedValidationData` and\n parsed by `_parseValidationData`.\n @param aggregator  - address(0) - The account validated the signature by itself.\n                      address(1) - The account failed to validate the signature.\n                      otherwise - This is an address of a signature aggregator that must\n                                  be used to validate the signature.\n @param validAfter  - This UserOp is valid only after this timestamp.\n @param validaUntil - This UserOp is valid only up to this timestamp."},"id":2105,"members":[{"constant":false,"id":2100,"mutability":"mutable","name":"aggregator","nameLocation":"780:10:4","nodeType":"VariableDeclaration","scope":2105,"src":"772:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2099,"name":"address","nodeType":"ElementaryTypeName","src":"772:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2102,"mutability":"mutable","name":"validAfter","nameLocation":"803:10:4","nodeType":"VariableDeclaration","scope":2105,"src":"796:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2101,"name":"uint48","nodeType":"ElementaryTypeName","src":"796:6:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":2104,"mutability":"mutable","name":"validUntil","nameLocation":"826:10:4","nodeType":"VariableDeclaration","scope":2105,"src":"819:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2103,"name":"uint48","nodeType":"ElementaryTypeName","src":"819:6:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"ValidationData","nameLocation":"751:14:4","nodeType":"StructDefinition","scope":2355,"src":"744:95:4","visibility":"public"},{"body":{"id":2164,"nodeType":"Block","src":"1105:314:4","statements":[{"assignments":[2115],"declarations":[{"constant":false,"id":2115,"mutability":"mutable","name":"aggregator","nameLocation":"1119:10:4","nodeType":"VariableDeclaration","scope":2164,"src":"1111:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2114,"name":"address","nodeType":"ElementaryTypeName","src":"1111:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2123,"initialValue":{"arguments":[{"arguments":[{"id":2120,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2108,"src":"1148:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1140:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2118,"name":"uint160","nodeType":"ElementaryTypeName","src":"1140:7:4","typeDescriptions":{}}},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1140:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1132:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2116,"name":"address","nodeType":"ElementaryTypeName","src":"1132:7:4","typeDescriptions":{}}},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1132:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1111:53:4"},{"assignments":[2125],"declarations":[{"constant":false,"id":2125,"mutability":"mutable","name":"validUntil","nameLocation":"1177:10:4","nodeType":"VariableDeclaration","scope":2164,"src":"1170:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2124,"name":"uint48","nodeType":"ElementaryTypeName","src":"1170:6:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":2132,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2128,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2108,"src":"1197:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313630","id":2129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1215:3:4","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"1197:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1190:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":2126,"name":"uint48","nodeType":"ElementaryTypeName","src":"1190:6:4","typeDescriptions":{}}},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1190:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1170:49:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2133,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"1229:10:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1243:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1229:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2145,"nodeType":"IfStatement","src":"1225:67:4","trueBody":{"id":2144,"nodeType":"Block","src":"1246:46:4","statements":[{"expression":{"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2136,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"1256:10:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":2139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1274:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":2138,"name":"uint48","nodeType":"ElementaryTypeName","src":"1274:6:4","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":2137,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1269:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1269:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":2141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1282:3:4","memberName":"max","nodeType":"MemberAccess","src":"1269:16:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"1256:29:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":2143,"nodeType":"ExpressionStatement","src":"1256:29:4"}]}},{"assignments":[2147],"declarations":[{"constant":false,"id":2147,"mutability":"mutable","name":"validAfter","nameLocation":"1304:10:4","nodeType":"VariableDeclaration","scope":2164,"src":"1297:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2146,"name":"uint48","nodeType":"ElementaryTypeName","src":"1297:6:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":2157,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2150,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2108,"src":"1324:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":2153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":2151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:2:4","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"313630","id":2152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1348:3:4","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"1343:8:4","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":2154,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1342:10:4","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"1324:28:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1317:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":2148,"name":"uint48","nodeType":"ElementaryTypeName","src":"1317:6:4","typeDescriptions":{}}},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1317:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1297:56:4"},{"expression":{"arguments":[{"id":2159,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"1381:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2160,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"1393:10:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":2161,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"1405:10:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":2158,"name":"ValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"1366:14:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ValidationData_$2105_storage_ptr_$","typeString":"type(struct ValidationData storage pointer)"}},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:50:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2105_memory_ptr","typeString":"struct ValidationData memory"}},"functionReturnParameters":2113,"id":2163,"nodeType":"Return","src":"1359:57:4"}]},"documentation":{"id":2106,"nodeType":"StructuredDocumentation","src":"841:161:4","text":" Extract sigFailed, validAfter, validUntil.\n Also convert zero validUntil to type(uint48).max.\n @param validationData - The packed validation data."},"id":2165,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_parseValidationData","nameLocation":"1012:20:4","nodeType":"FunctionDefinition","parameters":{"id":2109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2108,"mutability":"mutable","name":"validationData","nameLocation":"1046:14:4","nodeType":"VariableDeclaration","scope":2165,"src":"1038:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2107,"name":"uint256","nodeType":"ElementaryTypeName","src":"1038:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1032:30:4"},"returnParameters":{"id":2113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2112,"mutability":"mutable","name":"data","nameLocation":"1099:4:4","nodeType":"VariableDeclaration","scope":2165,"src":"1077:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2105_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":2111,"nodeType":"UserDefinedTypeName","pathNode":{"id":2110,"name":"ValidationData","nameLocations":["1077:14:4"],"nodeType":"IdentifierPath","referencedDeclaration":2105,"src":"1077:14:4"},"referencedDeclaration":2105,"src":"1077:14:4","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2105_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"1076:28:4"},"scope":2355,"src":"1003:416:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2250,"nodeType":"Block","src":"1765:776:4","statements":[{"assignments":[2178],"declarations":[{"constant":false,"id":2178,"mutability":"mutable","name":"accountValidationData","nameLocation":"1793:21:4","nodeType":"VariableDeclaration","scope":2250,"src":"1771:43:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2105_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":2177,"nodeType":"UserDefinedTypeName","pathNode":{"id":2176,"name":"ValidationData","nameLocations":["1771:14:4"],"nodeType":"IdentifierPath","referencedDeclaration":2105,"src":"1771:14:4"},"referencedDeclaration":2105,"src":"1771:14:4","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2105_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"id":2182,"initialValue":{"arguments":[{"id":2180,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"1847:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2179,"name":"_parseValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"1817:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_ValidationData_$2105_memory_ptr_$","typeString":"function (uint256) pure returns (struct ValidationData memory)"}},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1817:50:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2105_memory_ptr","typeString":"struct ValidationData memory"}},"nodeType":"VariableDeclarationStatement","src":"1771:96:4"},{"assignments":[2185],"declarations":[{"constant":false,"id":2185,"mutability":"mutable","name":"pmValidationData","nameLocation":"1895:16:4","nodeType":"VariableDeclaration","scope":2250,"src":"1873:38:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2105_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":2184,"nodeType":"UserDefinedTypeName","pathNode":{"id":2183,"name":"ValidationData","nameLocations":["1873:14:4"],"nodeType":"IdentifierPath","referencedDeclaration":2105,"src":"1873:14:4"},"referencedDeclaration":2105,"src":"1873:14:4","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2105_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"id":2189,"initialValue":{"arguments":[{"id":2187,"name":"paymasterValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"1944:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2186,"name":"_parseValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"1914:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_ValidationData_$2105_memory_ptr_$","typeString":"function (uint256) pure returns (struct ValidationData memory)"}},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1914:59:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2105_memory_ptr","typeString":"struct ValidationData memory"}},"nodeType":"VariableDeclarationStatement","src":"1873:100:4"},{"assignments":[2191],"declarations":[{"constant":false,"id":2191,"mutability":"mutable","name":"aggregator","nameLocation":"1987:10:4","nodeType":"VariableDeclaration","scope":2250,"src":"1979:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2190,"name":"address","nodeType":"ElementaryTypeName","src":"1979:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2194,"initialValue":{"expression":{"id":2192,"name":"accountValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"2000:21:4","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2105_memory_ptr","typeString":"struct ValidationData memory"}},"id":2193,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2022:10:4","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":2100,"src":"2000:32:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1979:53:4"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2195,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"2042:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2064:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2056:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2196,"name":"address","nodeType":"ElementaryTypeName","src":"2056:7:4","typeDescriptions":{}}},"id":2199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2056:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2042:24:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2207,"nodeType":"IfStatement","src":"2038:87:4","trueBody":{"id":2206,"nodeType":"Block","src":"2068:57:4","statements":[{"expression":{"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2201,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"2078:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2202,"name":"pmValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"2091:16:4","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2105_memory_ptr","typeString":"struct ValidationData memory"}},"id":2203,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2108:10:4","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":2100,"src":"2091:27:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2078:40:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2205,"nodeType":"ExpressionStatement","src":"2078:40:4"}]}},{"assignments":[2209],"declarations":[{"constant":false,"id":2209,"mutability":"mutable","name":"validAfter","nameLocation":"2137:10:4","nodeType":"VariableDeclaration","scope":2250,"src":"2130:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2208,"name":"uint48","nodeType":"ElementaryTypeName","src":"2130:6:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":2212,"initialValue":{"expression":{"id":2210,"name":"accountValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"2150:21:4","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2105_memory_ptr","typeString":"struct ValidationData memory"}},"id":2211,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2172:10:4","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":2102,"src":"2150:32:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"2130:52:4"},{"assignments":[2214],"declarations":[{"constant":false,"id":2214,"mutability":"mutable","name":"validUntil","nameLocation":"2195:10:4","nodeType":"VariableDeclaration","scope":2250,"src":"2188:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2213,"name":"uint48","nodeType":"ElementaryTypeName","src":"2188:6:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":2217,"initialValue":{"expression":{"id":2215,"name":"accountValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"2208:21:4","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2105_memory_ptr","typeString":"struct ValidationData memory"}},"id":2216,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2230:10:4","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":2104,"src":"2208:32:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"2188:52:4"},{"assignments":[2219],"declarations":[{"constant":false,"id":2219,"mutability":"mutable","name":"pmValidAfter","nameLocation":"2253:12:4","nodeType":"VariableDeclaration","scope":2250,"src":"2246:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2218,"name":"uint48","nodeType":"ElementaryTypeName","src":"2246:6:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":2222,"initialValue":{"expression":{"id":2220,"name":"pmValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"2268:16:4","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2105_memory_ptr","typeString":"struct ValidationData memory"}},"id":2221,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2285:10:4","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":2102,"src":"2268:27:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"2246:49:4"},{"assignments":[2224],"declarations":[{"constant":false,"id":2224,"mutability":"mutable","name":"pmValidUntil","nameLocation":"2308:12:4","nodeType":"VariableDeclaration","scope":2250,"src":"2301:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2223,"name":"uint48","nodeType":"ElementaryTypeName","src":"2301:6:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":2227,"initialValue":{"expression":{"id":2225,"name":"pmValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"2323:16:4","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2105_memory_ptr","typeString":"struct ValidationData memory"}},"id":2226,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2340:10:4","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":2104,"src":"2323:27:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"2301:49:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2228,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"2361:10:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2229,"name":"pmValidAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"2374:12:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2361:25:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2235,"nodeType":"IfStatement","src":"2357:56:4","trueBody":{"expression":{"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2231,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"2388:10:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2232,"name":"pmValidAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"2401:12:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2388:25:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":2234,"nodeType":"ExpressionStatement","src":"2388:25:4"}},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2236,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"2423:10:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2237,"name":"pmValidUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"2436:12:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2423:25:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2243,"nodeType":"IfStatement","src":"2419:56:4","trueBody":{"expression":{"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2239,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"2450:10:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2240,"name":"pmValidUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"2463:12:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2450:25:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":2242,"nodeType":"ExpressionStatement","src":"2450:25:4"}},{"expression":{"arguments":[{"id":2245,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"2503:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2246,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"2515:10:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":2247,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"2527:10:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":2244,"name":"ValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"2488:14:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ValidationData_$2105_storage_ptr_$","typeString":"type(struct ValidationData storage pointer)"}},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2488:50:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2105_memory_ptr","typeString":"struct ValidationData memory"}},"functionReturnParameters":2175,"id":2249,"nodeType":"Return","src":"2481:57:4"}]},"documentation":{"id":2166,"nodeType":"StructuredDocumentation","src":"1421:210:4","text":" Intersect account and paymaster ranges.\n @param validationData          - The packed validation data of the account.\n @param paymasterValidationData - The packed validation data of the paymaster."},"id":2251,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_intersectTimeRange","nameLocation":"1641:19:4","nodeType":"FunctionDefinition","parameters":{"id":2171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2168,"mutability":"mutable","name":"validationData","nameLocation":"1674:14:4","nodeType":"VariableDeclaration","scope":2251,"src":"1666:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2167,"name":"uint256","nodeType":"ElementaryTypeName","src":"1666:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2170,"mutability":"mutable","name":"paymasterValidationData","nameLocation":"1702:23:4","nodeType":"VariableDeclaration","scope":2251,"src":"1694:31:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2169,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1660:67:4"},"returnParameters":{"id":2175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2174,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2251,"src":"1742:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2105_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":2173,"nodeType":"UserDefinedTypeName","pathNode":{"id":2172,"name":"ValidationData","nameLocations":["1742:14:4"],"nodeType":"IdentifierPath","referencedDeclaration":2105,"src":"1742:14:4"},"referencedDeclaration":2105,"src":"1742:14:4","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2105_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"1741:23:4"},"scope":2355,"src":"1632:909:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2287,"nodeType":"Block","src":"2737:143:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":2262,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"2766:4:4","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2105_memory_ptr","typeString":"struct ValidationData memory"}},"id":2263,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2771:10:4","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":2100,"src":"2766:15:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2758:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2260,"name":"uint160","nodeType":"ElementaryTypeName","src":"2758:7:4","typeDescriptions":{}}},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2758:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":2267,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"2802:4:4","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2105_memory_ptr","typeString":"struct ValidationData memory"}},"id":2268,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2807:10:4","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":2104,"src":"2802:15:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":2266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2794:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2265,"name":"uint256","nodeType":"ElementaryTypeName","src":"2794:7:4","typeDescriptions":{}}},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2794:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":2270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2822:3:4","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"2794:31:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2272,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2793:33:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2758:68:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":2276,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"2846:4:4","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2105_memory_ptr","typeString":"struct ValidationData memory"}},"id":2277,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2851:10:4","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":2102,"src":"2846:15:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":2275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2838:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2274,"name":"uint256","nodeType":"ElementaryTypeName","src":"2838:7:4","typeDescriptions":{}}},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2838:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":2281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313630","id":2279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2867:3:4","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3438","id":2280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2873:2:4","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"2867:8:4","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":2282,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2866:10:4","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"2838:38:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2284,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2837:40:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2758:119:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2259,"id":2286,"nodeType":"Return","src":"2743:134:4"}]},"documentation":{"id":2252,"nodeType":"StructuredDocumentation","src":"2543:107:4","text":" Helper to pack the return value for validateUserOp.\n @param data - The ValidationData to pack."},"id":2288,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_packValidationData","nameLocation":"2660:19:4","nodeType":"FunctionDefinition","parameters":{"id":2256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2255,"mutability":"mutable","name":"data","nameLocation":"2707:4:4","nodeType":"VariableDeclaration","scope":2288,"src":"2685:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2105_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":2254,"nodeType":"UserDefinedTypeName","pathNode":{"id":2253,"name":"ValidationData","nameLocations":["2685:14:4"],"nodeType":"IdentifierPath","referencedDeclaration":2105,"src":"2685:14:4"},"referencedDeclaration":2105,"src":"2685:14:4","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$2105_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"2679:34:4"},"returnParameters":{"id":2259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2288,"src":"2728:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2257,"name":"uint256","nodeType":"ElementaryTypeName","src":"2728:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2727:9:4"},"scope":2355,"src":"2651:229:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2325,"nodeType":"Block","src":"3323:128:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"condition":{"id":2300,"name":"sigFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2291,"src":"3345:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3361:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3345:17:4","trueExpression":{"hexValue":"31","id":2301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3357:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2304,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3344:19:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2307,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"3383:10:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":2306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3375:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2305,"name":"uint256","nodeType":"ElementaryTypeName","src":"3375:7:4","typeDescriptions":{}}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3375:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":2309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3398:3:4","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"3375:26:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2311,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3374:28:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3344:58:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2315,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"3422:10:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":2314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3414:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2313,"name":"uint256","nodeType":"ElementaryTypeName","src":"3414:7:4","typeDescriptions":{}}},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3414:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":2319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313630","id":2317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3438:3:4","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3438","id":2318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3444:2:4","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"3438:8:4","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":2320,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3437:10:4","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"3414:33:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2322,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3413:35:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3344:104:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2299,"id":2324,"nodeType":"Return","src":"3329:119:4"}]},"documentation":{"id":2289,"nodeType":"StructuredDocumentation","src":"2882:320:4","text":" Helper to pack the return value for validateUserOp, when not using an aggregator.\n @param sigFailed  - True for signature failure, false for success.\n @param validUntil - Last timestamp this UserOperation is valid (or zero for infinite).\n @param validAfter - First timestamp this UserOperation is valid."},"id":2326,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_packValidationData","nameLocation":"3212:19:4","nodeType":"FunctionDefinition","parameters":{"id":2296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2291,"mutability":"mutable","name":"sigFailed","nameLocation":"3242:9:4","nodeType":"VariableDeclaration","scope":2326,"src":"3237:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2290,"name":"bool","nodeType":"ElementaryTypeName","src":"3237:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2293,"mutability":"mutable","name":"validUntil","nameLocation":"3264:10:4","nodeType":"VariableDeclaration","scope":2326,"src":"3257:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2292,"name":"uint48","nodeType":"ElementaryTypeName","src":"3257:6:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":2295,"mutability":"mutable","name":"validAfter","nameLocation":"3287:10:4","nodeType":"VariableDeclaration","scope":2326,"src":"3280:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2294,"name":"uint48","nodeType":"ElementaryTypeName","src":"3280:6:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"3231:68:4"},"returnParameters":{"id":2299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2326,"src":"3314:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2297,"name":"uint256","nodeType":"ElementaryTypeName","src":"3314:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3313:9:4"},"scope":2355,"src":"3203:248:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2335,"nodeType":"Block","src":"3706:209:4","statements":[{"AST":{"nativeSrc":"3741:168:4","nodeType":"YulBlock","src":"3741:168:4","statements":[{"nativeSrc":"3755:22:4","nodeType":"YulVariableDeclaration","src":"3755:22:4","value":{"arguments":[{"kind":"number","nativeSrc":"3772:4:4","nodeType":"YulLiteral","src":"3772:4:4","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3766:5:4","nodeType":"YulIdentifier","src":"3766:5:4"},"nativeSrc":"3766:11:4","nodeType":"YulFunctionCall","src":"3766:11:4"},"variables":[{"name":"mem","nativeSrc":"3759:3:4","nodeType":"YulTypedName","src":"3759:3:4","type":""}]},{"nativeSrc":"3790:22:4","nodeType":"YulVariableDeclaration","src":"3790:22:4","value":{"name":"data.length","nativeSrc":"3801:11:4","nodeType":"YulIdentifier","src":"3801:11:4"},"variables":[{"name":"len","nativeSrc":"3794:3:4","nodeType":"YulTypedName","src":"3794:3:4","type":""}]},{"expression":{"arguments":[{"name":"mem","nativeSrc":"3838:3:4","nodeType":"YulIdentifier","src":"3838:3:4"},{"name":"data.offset","nativeSrc":"3843:11:4","nodeType":"YulIdentifier","src":"3843:11:4"},{"name":"len","nativeSrc":"3856:3:4","nodeType":"YulIdentifier","src":"3856:3:4"}],"functionName":{"name":"calldatacopy","nativeSrc":"3825:12:4","nodeType":"YulIdentifier","src":"3825:12:4"},"nativeSrc":"3825:35:4","nodeType":"YulFunctionCall","src":"3825:35:4"},"nativeSrc":"3825:35:4","nodeType":"YulExpressionStatement","src":"3825:35:4"},{"nativeSrc":"3873:26:4","nodeType":"YulAssignment","src":"3873:26:4","value":{"arguments":[{"name":"mem","nativeSrc":"3890:3:4","nodeType":"YulIdentifier","src":"3890:3:4"},{"name":"len","nativeSrc":"3895:3:4","nodeType":"YulIdentifier","src":"3895:3:4"}],"functionName":{"name":"keccak256","nativeSrc":"3880:9:4","nodeType":"YulIdentifier","src":"3880:9:4"},"nativeSrc":"3880:19:4","nodeType":"YulFunctionCall","src":"3880:19:4"},"variableNames":[{"name":"ret","nativeSrc":"3873:3:4","nodeType":"YulIdentifier","src":"3873:3:4"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2329,"isOffset":false,"isSlot":false,"src":"3801:11:4","suffix":"length","valueSize":1},{"declaration":2329,"isOffset":true,"isSlot":false,"src":"3843:11:4","suffix":"offset","valueSize":1},{"declaration":2332,"isOffset":false,"isSlot":false,"src":"3873:3:4","valueSize":1}],"flags":["memory-safe"],"id":2334,"nodeType":"InlineAssembly","src":"3716:193:4"}]},"documentation":{"id":2327,"nodeType":"StructuredDocumentation","src":"3453:176:4","text":" keccak function over calldata.\n @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it."},"id":2336,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"calldataKeccak","nameLocation":"3643:14:4","nodeType":"FunctionDefinition","parameters":{"id":2330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2329,"mutability":"mutable","name":"data","nameLocation":"3673:4:4","nodeType":"VariableDeclaration","scope":2336,"src":"3658:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2328,"name":"bytes","nodeType":"ElementaryTypeName","src":"3658:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3657:21:4"},"returnParameters":{"id":2333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2332,"mutability":"mutable","name":"ret","nameLocation":"3701:3:4","nodeType":"VariableDeclaration","scope":2336,"src":"3693:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2331,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3693:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3692:13:4"},"scope":2355,"src":"3634:281:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2353,"nodeType":"Block","src":"4076:37:4","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2346,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"4093:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2347,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"4097:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4093:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2350,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"4105:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4093:13:4","trueExpression":{"id":2349,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"4101:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2345,"id":2352,"nodeType":"Return","src":"4086:20:4"}]},"documentation":{"id":2337,"nodeType":"StructuredDocumentation","src":"3918:95:4","text":" The minimum of two numbers.\n @param a - First number.\n @param b - Second number."},"id":2354,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"min","nameLocation":"4027:3:4","nodeType":"FunctionDefinition","parameters":{"id":2342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2339,"mutability":"mutable","name":"a","nameLocation":"4039:1:4","nodeType":"VariableDeclaration","scope":2354,"src":"4031:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2338,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2341,"mutability":"mutable","name":"b","nameLocation":"4050:1:4","nodeType":"VariableDeclaration","scope":2354,"src":"4042:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2340,"name":"uint256","nodeType":"ElementaryTypeName","src":"4042:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:22:4"},"returnParameters":{"id":2345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2354,"src":"4067:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2343,"name":"uint256","nodeType":"ElementaryTypeName","src":"4067:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4066:9:4"},"scope":2355,"src":"4018:95:4","stateMutability":"pure","virtual":false,"visibility":"internal"}],"src":"36:4078:4"},"id":4},"contracts/core/NonceManager.sol":{"ast":{"absolutePath":"contracts/core/NonceManager.sol","exportedSymbols":{"IAggregator":[3198],"IEntryPoint":[3375],"INonceManager":[3394],"IStakeManager":[3535],"NonceManager":[2444],"PackedUserOperation":[3559]},"id":2445,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":2356,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"36:24:5"},{"absolutePath":"contracts/interfaces/IEntryPoint.sol","file":"../interfaces/IEntryPoint.sol","id":2357,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2445,"sourceUnit":3376,"src":"62:39:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2359,"name":"INonceManager","nameLocations":["179:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":3394,"src":"179:13:5"},"id":2360,"nodeType":"InheritanceSpecifier","src":"179:13:5"}],"canonicalName":"NonceManager","contractDependencies":[],"contractKind":"contract","documentation":{"id":2358,"nodeType":"StructuredDocumentation","src":"103:41:5","text":" nonce management functionality"},"fullyImplemented":true,"id":2444,"linearizedBaseContracts":[2444,3394],"name":"NonceManager","nameLocation":"163:12:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":2361,"nodeType":"StructuredDocumentation","src":"200:72:5","text":" The next valid sequence number for a given nonce key."},"functionSelector":"1b2e01b8","id":2367,"mutability":"mutable","name":"nonceSequenceNumber","nameLocation":"332:19:5","nodeType":"VariableDeclaration","scope":2444,"src":"277:74:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint192_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint192 => uint256))"},"typeName":{"id":2366,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2362,"name":"address","nodeType":"ElementaryTypeName","src":"285:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"277:47:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint192_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint192 => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2365,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2363,"name":"uint192","nodeType":"ElementaryTypeName","src":"304:7:5","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"nodeType":"Mapping","src":"296:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint192_$_t_uint256_$","typeString":"mapping(uint192 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2364,"name":"uint256","nodeType":"ElementaryTypeName","src":"315:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"baseFunctions":[3387],"body":{"id":2391,"nodeType":"Block","src":"454:79:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":2377,"name":"nonceSequenceNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"471:19:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint192_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint192 => uint256))"}},"id":2379,"indexExpression":{"id":2378,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"491:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"471:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint192_$_t_uint256_$","typeString":"mapping(uint192 => uint256)"}},"id":2381,"indexExpression":{"id":2380,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"499:3:5","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"471:32:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2384,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"515:3:5","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint192","typeString":"uint192"}],"id":2383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"507:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2382,"name":"uint256","nodeType":"ElementaryTypeName","src":"507:7:5","typeDescriptions":{}}},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"507:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":2386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"523:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"507:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2388,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"506:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"471:55:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2376,"id":2390,"nodeType":"Return","src":"464:62:5"}]},"functionSelector":"35567e1a","id":2392,"implemented":true,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"367:8:5","nodeType":"FunctionDefinition","overrides":{"id":2373,"nodeType":"OverrideSpecifier","overrides":[],"src":"421:8:5"},"parameters":{"id":2372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2369,"mutability":"mutable","name":"sender","nameLocation":"384:6:5","nodeType":"VariableDeclaration","scope":2392,"src":"376:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2368,"name":"address","nodeType":"ElementaryTypeName","src":"376:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2371,"mutability":"mutable","name":"key","nameLocation":"400:3:5","nodeType":"VariableDeclaration","scope":2392,"src":"392:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":2370,"name":"uint192","nodeType":"ElementaryTypeName","src":"392:7:5","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"375:29:5"},"returnParameters":{"id":2376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2375,"mutability":"mutable","name":"nonce","nameLocation":"447:5:5","nodeType":"VariableDeclaration","scope":2392,"src":"439:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2374,"name":"uint256","nodeType":"ElementaryTypeName","src":"439:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"438:15:5"},"scope":2444,"src":"358:175:5","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[3393],"body":{"id":2406,"nodeType":"Block","src":"847:55:5","statements":[{"expression":{"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"857:38:5","subExpression":{"baseExpression":{"baseExpression":{"id":2398,"name":"nonceSequenceNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"857:19:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint192_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint192 => uint256))"}},"id":2402,"indexExpression":{"expression":{"id":2399,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"877:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"881:6:5","memberName":"sender","nodeType":"MemberAccess","src":"877:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"857:31:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint192_$_t_uint256_$","typeString":"mapping(uint192 => uint256)"}},"id":2403,"indexExpression":{"id":2401,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"889:3:5","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"857:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2405,"nodeType":"ExpressionStatement","src":"857:38:5"}]},"functionSelector":"0bd28e3b","id":2407,"implemented":true,"kind":"function","modifiers":[],"name":"incrementNonce","nameLocation":"803:14:5","nodeType":"FunctionDefinition","overrides":{"id":2396,"nodeType":"OverrideSpecifier","overrides":[],"src":"838:8:5"},"parameters":{"id":2395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2394,"mutability":"mutable","name":"key","nameLocation":"826:3:5","nodeType":"VariableDeclaration","scope":2407,"src":"818:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":2393,"name":"uint192","nodeType":"ElementaryTypeName","src":"818:7:5","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"817:13:5"},"returnParameters":{"id":2397,"nodeType":"ParameterList","parameters":[],"src":"847:0:5"},"scope":2444,"src":"794:108:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2442,"nodeType":"Block","src":"1105:146:5","statements":[{"assignments":[2418],"declarations":[{"constant":false,"id":2418,"mutability":"mutable","name":"key","nameLocation":"1124:3:5","nodeType":"VariableDeclaration","scope":2442,"src":"1116:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":2417,"name":"uint192","nodeType":"ElementaryTypeName","src":"1116:7:5","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"id":2425,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2421,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"1138:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1147:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"1138:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1130:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":2419,"name":"uint192","nodeType":"ElementaryTypeName","src":"1130:7:5","typeDescriptions":{}}},"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1130:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"nodeType":"VariableDeclarationStatement","src":"1116:34:5"},{"assignments":[2427],"declarations":[{"constant":false,"id":2427,"mutability":"mutable","name":"seq","nameLocation":"1167:3:5","nodeType":"VariableDeclaration","scope":2442,"src":"1160:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2426,"name":"uint64","nodeType":"ElementaryTypeName","src":"1160:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":2432,"initialValue":{"arguments":[{"id":2430,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"1180:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1173:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":2428,"name":"uint64","nodeType":"ElementaryTypeName","src":"1173:6:5","typeDescriptions":{}}},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1173:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"1160:26:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1203:34:5","subExpression":{"baseExpression":{"baseExpression":{"id":2433,"name":"nonceSequenceNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"1203:19:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint192_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint192 => uint256))"}},"id":2435,"indexExpression":{"id":2434,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2410,"src":"1223:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1203:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint192_$_t_uint256_$","typeString":"mapping(uint192 => uint256)"}},"id":2437,"indexExpression":{"id":2436,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"1231:3:5","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1203:32:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2439,"name":"seq","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2427,"src":"1241:3:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"1203:41:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2416,"id":2441,"nodeType":"Return","src":"1196:48:5"}]},"documentation":{"id":2408,"nodeType":"StructuredDocumentation","src":"908:104:5","text":" validate nonce uniqueness for this account.\n called just after validateUserOp()"},"id":2443,"implemented":true,"kind":"function","modifiers":[],"name":"_validateAndUpdateNonce","nameLocation":"1026:23:5","nodeType":"FunctionDefinition","parameters":{"id":2413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2410,"mutability":"mutable","name":"sender","nameLocation":"1058:6:5","nodeType":"VariableDeclaration","scope":2443,"src":"1050:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2409,"name":"address","nodeType":"ElementaryTypeName","src":"1050:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2412,"mutability":"mutable","name":"nonce","nameLocation":"1074:5:5","nodeType":"VariableDeclaration","scope":2443,"src":"1066:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2411,"name":"uint256","nodeType":"ElementaryTypeName","src":"1066:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1049:31:5"},"returnParameters":{"id":2416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2443,"src":"1099:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2414,"name":"bool","nodeType":"ElementaryTypeName","src":"1099:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1098:6:5"},"scope":2444,"src":"1017:234:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2445,"src":"145:1109:5","usedErrors":[],"usedEvents":[]}],"src":"36:1219:5"},"id":5},"contracts/core/SenderCreator.sol":{"ast":{"absolutePath":"contracts/core/SenderCreator.sol","exportedSymbols":{"SenderCreator":[2491]},"id":2492,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":2446,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"36:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"SenderCreator","contractDependencies":[],"contractKind":"contract","documentation":{"id":2447,"nodeType":"StructuredDocumentation","src":"62:142:6","text":" Helper contract for EntryPoint, to call userOp.initCode from a \"neutral\" address,\n which is explicitly not the entryPoint itself."},"fullyImplemented":true,"id":2491,"linearizedBaseContracts":[2491],"name":"SenderCreator","nameLocation":"214:13:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":2489,"nodeType":"Block","src":"671:558:6","statements":[{"assignments":[2456],"declarations":[{"constant":false,"id":2456,"mutability":"mutable","name":"factory","nameLocation":"689:7:6","nodeType":"VariableDeclaration","scope":2489,"src":"681:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2455,"name":"address","nodeType":"ElementaryTypeName","src":"681:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2467,"initialValue":{"arguments":[{"arguments":[{"baseExpression":{"id":2461,"name":"initCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"715:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"hexValue":"3230","id":2463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"726:2:6","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"715:14:6","startExpression":{"hexValue":"30","id":2462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"724:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":2460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"707:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":2459,"name":"bytes20","nodeType":"ElementaryTypeName","src":"707:7:6","typeDescriptions":{}}},"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"707:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":2458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"699:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2457,"name":"address","nodeType":"ElementaryTypeName","src":"699:7:6","typeDescriptions":{}}},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"699:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"681:50:6"},{"assignments":[2469],"declarations":[{"constant":false,"id":2469,"mutability":"mutable","name":"initCallData","nameLocation":"754:12:6","nodeType":"VariableDeclaration","scope":2489,"src":"741:25:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2468,"name":"bytes","nodeType":"ElementaryTypeName","src":"741:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2473,"initialValue":{"baseExpression":{"id":2470,"name":"initCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"769:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"769:13:6","startExpression":{"hexValue":"3230","id":2471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"778:2:6","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},"nodeType":"VariableDeclarationStatement","src":"741:41:6"},{"assignments":[2475],"declarations":[{"constant":false,"id":2475,"mutability":"mutable","name":"success","nameLocation":"797:7:6","nodeType":"VariableDeclaration","scope":2489,"src":"792:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2474,"name":"bool","nodeType":"ElementaryTypeName","src":"792:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2476,"nodeType":"VariableDeclarationStatement","src":"792:12:6"},{"AST":{"nativeSrc":"888:268:6","nodeType":"YulBlock","src":"888:268:6","statements":[{"nativeSrc":"902:213:6","nodeType":"YulAssignment","src":"902:213:6","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"935:3:6","nodeType":"YulIdentifier","src":"935:3:6"},"nativeSrc":"935:5:6","nodeType":"YulFunctionCall","src":"935:5:6"},{"name":"factory","nativeSrc":"958:7:6","nodeType":"YulIdentifier","src":"958:7:6"},{"kind":"number","nativeSrc":"983:1:6","nodeType":"YulLiteral","src":"983:1:6","type":"","value":"0"},{"arguments":[{"name":"initCallData","nativeSrc":"1006:12:6","nodeType":"YulIdentifier","src":"1006:12:6"},{"kind":"number","nativeSrc":"1020:4:6","nodeType":"YulLiteral","src":"1020:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1002:3:6","nodeType":"YulIdentifier","src":"1002:3:6"},"nativeSrc":"1002:23:6","nodeType":"YulFunctionCall","src":"1002:23:6"},{"arguments":[{"name":"initCallData","nativeSrc":"1049:12:6","nodeType":"YulIdentifier","src":"1049:12:6"}],"functionName":{"name":"mload","nativeSrc":"1043:5:6","nodeType":"YulIdentifier","src":"1043:5:6"},"nativeSrc":"1043:19:6","nodeType":"YulFunctionCall","src":"1043:19:6"},{"kind":"number","nativeSrc":"1080:1:6","nodeType":"YulLiteral","src":"1080:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"1099:2:6","nodeType":"YulLiteral","src":"1099:2:6","type":"","value":"32"}],"functionName":{"name":"call","nativeSrc":"913:4:6","nodeType":"YulIdentifier","src":"913:4:6"},"nativeSrc":"913:202:6","nodeType":"YulFunctionCall","src":"913:202:6"},"variableNames":[{"name":"success","nativeSrc":"902:7:6","nodeType":"YulIdentifier","src":"902:7:6"}]},{"nativeSrc":"1128:18:6","nodeType":"YulAssignment","src":"1128:18:6","value":{"arguments":[{"kind":"number","nativeSrc":"1144:1:6","nodeType":"YulLiteral","src":"1144:1:6","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"1138:5:6","nodeType":"YulIdentifier","src":"1138:5:6"},"nativeSrc":"1138:8:6","nodeType":"YulFunctionCall","src":"1138:8:6"},"variableNames":[{"name":"sender","nativeSrc":"1128:6:6","nodeType":"YulIdentifier","src":"1128:6:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2456,"isOffset":false,"isSlot":false,"src":"958:7:6","valueSize":1},{"declaration":2469,"isOffset":false,"isSlot":false,"src":"1006:12:6","valueSize":1},{"declaration":2469,"isOffset":false,"isSlot":false,"src":"1049:12:6","valueSize":1},{"declaration":2453,"isOffset":false,"isSlot":false,"src":"1128:6:6","valueSize":1},{"declaration":2475,"isOffset":false,"isSlot":false,"src":"902:7:6","valueSize":1}],"flags":["memory-safe"],"id":2477,"nodeType":"InlineAssembly","src":"863:293:6"},{"condition":{"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1169:8:6","subExpression":{"id":2478,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"1170:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2488,"nodeType":"IfStatement","src":"1165:58:6","trueBody":{"id":2487,"nodeType":"Block","src":"1179:44:6","statements":[{"expression":{"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2480,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"1193:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":2483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1210:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1202:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2481,"name":"address","nodeType":"ElementaryTypeName","src":"1202:7:6","typeDescriptions":{}}},"id":2484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1202:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1193:19:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2486,"nodeType":"ExpressionStatement","src":"1193:19:6"}]}}]},"documentation":{"id":2448,"nodeType":"StructuredDocumentation","src":"234:337:6","text":" Call the \"initCode\" factory to create and return the sender account address.\n @param initCode - The initCode value from a UserOp. contains 20 bytes of factory address,\n                   followed by calldata.\n @return sender  - The returned address of the created account, or zero address on failure."},"functionSelector":"570e1a36","id":2490,"implemented":true,"kind":"function","modifiers":[],"name":"createSender","nameLocation":"585:12:6","nodeType":"FunctionDefinition","parameters":{"id":2451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2450,"mutability":"mutable","name":"initCode","nameLocation":"622:8:6","nodeType":"VariableDeclaration","scope":2490,"src":"607:23:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2449,"name":"bytes","nodeType":"ElementaryTypeName","src":"607:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"597:39:6"},"returnParameters":{"id":2454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2453,"mutability":"mutable","name":"sender","nameLocation":"663:6:6","nodeType":"VariableDeclaration","scope":2490,"src":"655:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2452,"name":"address","nodeType":"ElementaryTypeName","src":"655:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"654:16:6"},"scope":2491,"src":"576:653:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2492,"src":"205:1026:6","usedErrors":[],"usedEvents":[]}],"src":"36:1196:6"},"id":6},"contracts/core/StakeManager.sol":{"ast":{"absolutePath":"contracts/core/StakeManager.sol","exportedSymbols":{"IStakeManager":[3535],"StakeManager":[2899]},"id":2900,"license":"GPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":2493,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"41:24:7"},{"absolutePath":"contracts/interfaces/IStakeManager.sol","file":"../interfaces/IStakeManager.sol","id":2494,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2900,"sourceUnit":3536,"src":"67:41:7","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2496,"name":"IStakeManager","nameLocations":["435:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":3535,"src":"435:13:7"},"id":2497,"nodeType":"InheritanceSpecifier","src":"435:13:7"}],"canonicalName":"StakeManager","contractDependencies":[],"contractKind":"contract","documentation":{"id":2495,"nodeType":"StructuredDocumentation","src":"194:206:7","text":" Manage deposits and stakes.\n Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account).\n Stake is value locked for at least \"unstakeDelay\" by a paymaster."},"fullyImplemented":true,"id":2899,"linearizedBaseContracts":[2899,3535],"name":"StakeManager","nameLocation":"419:12:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":2498,"nodeType":"StructuredDocumentation","src":"455:47:7","text":"maps paymaster to their deposits and stakes"},"functionSelector":"fc7e286d","id":2503,"mutability":"mutable","name":"deposits","nameLocation":"546:8:7","nodeType":"VariableDeclaration","scope":2899,"src":"507:47:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_DepositInfo_$3482_storage_$","typeString":"mapping(address => struct IStakeManager.DepositInfo)"},"typeName":{"id":2502,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2499,"name":"address","nodeType":"ElementaryTypeName","src":"515:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"507:31:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_DepositInfo_$3482_storage_$","typeString":"mapping(address => struct IStakeManager.DepositInfo)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2501,"nodeType":"UserDefinedTypeName","pathNode":{"id":2500,"name":"DepositInfo","nameLocations":["526:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":3482,"src":"526:11:7"},"referencedDeclaration":3482,"src":"526:11:7","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo"}}},"visibility":"public"},{"baseFunctions":[3496],"body":{"id":2516,"nodeType":"Block","src":"696:41:7","statements":[{"expression":{"baseExpression":{"id":2512,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"713:8:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_DepositInfo_$3482_storage_$","typeString":"mapping(address => struct IStakeManager.DepositInfo storage ref)"}},"id":2514,"indexExpression":{"id":2513,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"722:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"713:17:7","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage","typeString":"struct IStakeManager.DepositInfo storage ref"}},"functionReturnParameters":2511,"id":2515,"nodeType":"Return","src":"706:24:7"}]},"documentation":{"id":2504,"nodeType":"StructuredDocumentation","src":"561:29:7","text":"@inheritdoc IStakeManager"},"functionSelector":"5287ce12","id":2517,"implemented":true,"kind":"function","modifiers":[],"name":"getDepositInfo","nameLocation":"604:14:7","nodeType":"FunctionDefinition","parameters":{"id":2507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2506,"mutability":"mutable","name":"account","nameLocation":"636:7:7","nodeType":"VariableDeclaration","scope":2517,"src":"628:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2505,"name":"address","nodeType":"ElementaryTypeName","src":"628:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"618:31:7"},"returnParameters":{"id":2511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2510,"mutability":"mutable","name":"info","nameLocation":"690:4:7","nodeType":"VariableDeclaration","scope":2517,"src":"671:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_memory_ptr","typeString":"struct IStakeManager.DepositInfo"},"typeName":{"id":2509,"nodeType":"UserDefinedTypeName","pathNode":{"id":2508,"name":"DepositInfo","nameLocations":["671:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":3482,"src":"671:11:7"},"referencedDeclaration":3482,"src":"671:11:7","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo"}},"visibility":"internal"}],"src":"670:25:7"},"scope":2899,"src":"595:142:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2547,"nodeType":"Block","src":"953:165:7","statements":[{"assignments":[2528],"declarations":[{"constant":false,"id":2528,"mutability":"mutable","name":"depositInfo","nameLocation":"983:11:7","nodeType":"VariableDeclaration","scope":2547,"src":"963:31:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo"},"typeName":{"id":2527,"nodeType":"UserDefinedTypeName","pathNode":{"id":2526,"name":"DepositInfo","nameLocations":["963:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":3482,"src":"963:11:7"},"referencedDeclaration":3482,"src":"963:11:7","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo"}},"visibility":"internal"}],"id":2532,"initialValue":{"baseExpression":{"id":2529,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"997:8:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_DepositInfo_$3482_storage_$","typeString":"mapping(address => struct IStakeManager.DepositInfo storage ref)"}},"id":2531,"indexExpression":{"id":2530,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"1006:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"997:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage","typeString":"struct IStakeManager.DepositInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"963:48:7"},{"expression":{"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2533,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"1021:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3487_memory_ptr","typeString":"struct IStakeManager.StakeInfo memory"}},"id":2535,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1026:5:7","memberName":"stake","nodeType":"MemberAccess","referencedDeclaration":3484,"src":"1021:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2536,"name":"depositInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"1034:11:7","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":2537,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1046:5:7","memberName":"stake","nodeType":"MemberAccess","referencedDeclaration":3477,"src":"1034:17:7","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"1021:30:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2539,"nodeType":"ExpressionStatement","src":"1021:30:7"},{"expression":{"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2540,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"1061:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3487_memory_ptr","typeString":"struct IStakeManager.StakeInfo memory"}},"id":2542,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1066:15:7","memberName":"unstakeDelaySec","nodeType":"MemberAccess","referencedDeclaration":3486,"src":"1061:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2543,"name":"depositInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"1084:11:7","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":2544,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1096:15:7","memberName":"unstakeDelaySec","nodeType":"MemberAccess","referencedDeclaration":3479,"src":"1084:27:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"1061:50:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2546,"nodeType":"ExpressionStatement","src":"1061:50:7"}]},"documentation":{"id":2518,"nodeType":"StructuredDocumentation","src":"743:108:7","text":" Internal method to return just the stake info.\n @param addr - The account to query."},"id":2548,"implemented":true,"kind":"function","modifiers":[],"name":"_getStakeInfo","nameLocation":"865:13:7","nodeType":"FunctionDefinition","parameters":{"id":2521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2520,"mutability":"mutable","name":"addr","nameLocation":"896:4:7","nodeType":"VariableDeclaration","scope":2548,"src":"888:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2519,"name":"address","nodeType":"ElementaryTypeName","src":"888:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"878:28:7"},"returnParameters":{"id":2525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2524,"mutability":"mutable","name":"info","nameLocation":"947:4:7","nodeType":"VariableDeclaration","scope":2548,"src":"930:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3487_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":2523,"nodeType":"UserDefinedTypeName","pathNode":{"id":2522,"name":"StakeInfo","nameLocations":["930:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":3487,"src":"930:9:7"},"referencedDeclaration":3487,"src":"930:9:7","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3487_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"}],"src":"929:23:7"},"scope":2899,"src":"856:262:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[3504],"body":{"id":2561,"nodeType":"Block","src":"1312:49:7","statements":[{"expression":{"expression":{"baseExpression":{"id":2556,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"1329:8:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_DepositInfo_$3482_storage_$","typeString":"mapping(address => struct IStakeManager.DepositInfo storage ref)"}},"id":2558,"indexExpression":{"id":2557,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"1338:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1329:17:7","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage","typeString":"struct IStakeManager.DepositInfo storage ref"}},"id":2559,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1347:7:7","memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":3473,"src":"1329:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2555,"id":2560,"nodeType":"Return","src":"1322:32:7"}]},"documentation":{"id":2549,"nodeType":"StructuredDocumentation","src":"1124:117:7","text":" Return the deposit (for gas payment) of the account.\n @param account - The account to query."},"functionSelector":"70a08231","id":2562,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1255:9:7","nodeType":"FunctionDefinition","parameters":{"id":2552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2551,"mutability":"mutable","name":"account","nameLocation":"1273:7:7","nodeType":"VariableDeclaration","scope":2562,"src":"1265:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2550,"name":"address","nodeType":"ElementaryTypeName","src":"1265:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1264:17:7"},"returnParameters":{"id":2555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2554,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2562,"src":"1303:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2553,"name":"uint256","nodeType":"ElementaryTypeName","src":"1303:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1302:9:7"},"scope":2899,"src":"1246:115:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2570,"nodeType":"Block","src":"1394:38:7","statements":[{"expression":{"arguments":[{"expression":{"id":2566,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1414:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1418:6:7","memberName":"sender","nodeType":"MemberAccess","src":"1414:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2565,"name":"depositTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"1404:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1404:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2569,"nodeType":"ExpressionStatement","src":"1404:21:7"}]},"id":2571,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2563,"nodeType":"ParameterList","parameters":[],"src":"1374:2:7"},"returnParameters":{"id":2564,"nodeType":"ParameterList","parameters":[],"src":"1394:0:7"},"scope":2899,"src":"1367:65:7","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":2603,"nodeType":"Block","src":"1683:172:7","statements":[{"assignments":[2583],"declarations":[{"constant":false,"id":2583,"mutability":"mutable","name":"info","nameLocation":"1713:4:7","nodeType":"VariableDeclaration","scope":2603,"src":"1693:24:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo"},"typeName":{"id":2582,"nodeType":"UserDefinedTypeName","pathNode":{"id":2581,"name":"DepositInfo","nameLocations":["1693:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":3482,"src":"1693:11:7"},"referencedDeclaration":3482,"src":"1693:11:7","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo"}},"visibility":"internal"}],"id":2587,"initialValue":{"baseExpression":{"id":2584,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"1720:8:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_DepositInfo_$3482_storage_$","typeString":"mapping(address => struct IStakeManager.DepositInfo storage ref)"}},"id":2586,"indexExpression":{"id":2585,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"1729:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1720:17:7","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage","typeString":"struct IStakeManager.DepositInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1693:44:7"},{"assignments":[2589],"declarations":[{"constant":false,"id":2589,"mutability":"mutable","name":"newAmount","nameLocation":"1755:9:7","nodeType":"VariableDeclaration","scope":2603,"src":"1747:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2588,"name":"uint256","nodeType":"ElementaryTypeName","src":"1747:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2594,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2590,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"1767:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":2591,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1772:7:7","memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":3473,"src":"1767:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2592,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"1782:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1767:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1747:41:7"},{"expression":{"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2595,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"1798:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":2597,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1803:7:7","memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":3473,"src":"1798:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2598,"name":"newAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"1813:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1798:24:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2600,"nodeType":"ExpressionStatement","src":"1798:24:7"},{"expression":{"id":2601,"name":"newAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"1839:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2580,"id":2602,"nodeType":"Return","src":"1832:16:7"}]},"documentation":{"id":2572,"nodeType":"StructuredDocumentation","src":"1438:153:7","text":" Increments an account's deposit.\n @param account - The account to increment.\n @param amount  - The amount to increment by."},"id":2604,"implemented":true,"kind":"function","modifiers":[],"name":"_incrementDeposit","nameLocation":"1605:17:7","nodeType":"FunctionDefinition","parameters":{"id":2577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2574,"mutability":"mutable","name":"account","nameLocation":"1631:7:7","nodeType":"VariableDeclaration","scope":2604,"src":"1623:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2573,"name":"address","nodeType":"ElementaryTypeName","src":"1623:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2576,"mutability":"mutable","name":"amount","nameLocation":"1648:6:7","nodeType":"VariableDeclaration","scope":2604,"src":"1640:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2575,"name":"uint256","nodeType":"ElementaryTypeName","src":"1640:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:33:7"},"returnParameters":{"id":2580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2579,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2604,"src":"1674:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2578,"name":"uint256","nodeType":"ElementaryTypeName","src":"1674:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1673:9:7"},"scope":2899,"src":"1596:259:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3510],"body":{"id":2623,"nodeType":"Block","src":"2031:120:7","statements":[{"assignments":[2611],"declarations":[{"constant":false,"id":2611,"mutability":"mutable","name":"newDeposit","nameLocation":"2049:10:7","nodeType":"VariableDeclaration","scope":2623,"src":"2041:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2610,"name":"uint256","nodeType":"ElementaryTypeName","src":"2041:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2617,"initialValue":{"arguments":[{"id":2613,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"2080:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2614,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2089:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2093:5:7","memberName":"value","nodeType":"MemberAccess","src":"2089:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2612,"name":"_incrementDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"2062:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) returns (uint256)"}},"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2062:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2041:58:7"},{"eventCall":{"arguments":[{"id":2619,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"2124:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2620,"name":"newDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"2133:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2618,"name":"Deposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3440,"src":"2114:9:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2114:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2622,"nodeType":"EmitStatement","src":"2109:35:7"}]},"documentation":{"id":2605,"nodeType":"StructuredDocumentation","src":"1861:106:7","text":" Add to the deposit of the given account.\n @param account - The account to add to."},"functionSelector":"b760faf9","id":2624,"implemented":true,"kind":"function","modifiers":[],"name":"depositTo","nameLocation":"1981:9:7","nodeType":"FunctionDefinition","parameters":{"id":2608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2607,"mutability":"mutable","name":"account","nameLocation":"1999:7:7","nodeType":"VariableDeclaration","scope":2624,"src":"1991:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2606,"name":"address","nodeType":"ElementaryTypeName","src":"1991:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1990:17:7"},"returnParameters":{"id":2609,"nodeType":"ParameterList","parameters":[],"src":"2031:0:7"},"scope":2899,"src":"1972:179:7","stateMutability":"payable","virtual":true,"visibility":"public"},{"baseFunctions":[3516],"body":{"id":2703,"nodeType":"Block","src":"2419:649:7","statements":[{"assignments":[2632],"declarations":[{"constant":false,"id":2632,"mutability":"mutable","name":"info","nameLocation":"2449:4:7","nodeType":"VariableDeclaration","scope":2703,"src":"2429:24:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo"},"typeName":{"id":2631,"nodeType":"UserDefinedTypeName","pathNode":{"id":2630,"name":"DepositInfo","nameLocations":["2429:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":3482,"src":"2429:11:7"},"referencedDeclaration":3482,"src":"2429:11:7","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo"}},"visibility":"internal"}],"id":2637,"initialValue":{"baseExpression":{"id":2633,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"2456:8:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_DepositInfo_$3482_storage_$","typeString":"mapping(address => struct IStakeManager.DepositInfo storage ref)"}},"id":2636,"indexExpression":{"expression":{"id":2634,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2465:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2469:6:7","memberName":"sender","nodeType":"MemberAccess","src":"2465:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2456:20:7","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage","typeString":"struct IStakeManager.DepositInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2429:47:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2639,"name":"unstakeDelaySec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"2494:15:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2512:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2494:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6d757374207370656369667920756e7374616b652064656c6179","id":2642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2515:28:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_b778ed14a7f7833f15cec15447ba73902b7f27cdd540d47113a5b9c3947e6b2b","typeString":"literal_string \"must specify unstake delay\""},"value":"must specify unstake delay"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b778ed14a7f7833f15cec15447ba73902b7f27cdd540d47113a5b9c3947e6b2b","typeString":"literal_string \"must specify unstake delay\""}],"id":2638,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2486:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2486:58:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2644,"nodeType":"ExpressionStatement","src":"2486:58:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2646,"name":"unstakeDelaySec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"2575:15:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":2647,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"2594:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":2648,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2599:15:7","memberName":"unstakeDelaySec","nodeType":"MemberAccess","referencedDeclaration":3479,"src":"2594:20:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"2575:39:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"63616e6e6f7420646563726561736520756e7374616b652074696d65","id":2650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2628:30:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_be41a8e875b0d08b577c32bcab0ac88c472e62be6c60e218189d78d10808d9e7","typeString":"literal_string \"cannot decrease unstake time\""},"value":"cannot decrease unstake time"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_be41a8e875b0d08b577c32bcab0ac88c472e62be6c60e218189d78d10808d9e7","typeString":"literal_string \"cannot decrease unstake time\""}],"id":2645,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2554:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2554:114:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2652,"nodeType":"ExpressionStatement","src":"2554:114:7"},{"assignments":[2654],"declarations":[{"constant":false,"id":2654,"mutability":"mutable","name":"stake","nameLocation":"2686:5:7","nodeType":"VariableDeclaration","scope":2703,"src":"2678:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2653,"name":"uint256","nodeType":"ElementaryTypeName","src":"2678:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2660,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2655,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"2694:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":2656,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2699:5:7","memberName":"stake","nodeType":"MemberAccess","referencedDeclaration":3477,"src":"2694:10:7","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":2657,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2707:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2711:5:7","memberName":"value","nodeType":"MemberAccess","src":"2707:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2694:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2678:38:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2662,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"2734:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2742:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2734:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6e6f207374616b6520737065636966696564","id":2665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2745:20:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_163fbe38f6e79bbafe8ef1c6ecbcd609e161120dfcf32c1dc0ae2ace28e56cf8","typeString":"literal_string \"no stake specified\""},"value":"no stake specified"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_163fbe38f6e79bbafe8ef1c6ecbcd609e161120dfcf32c1dc0ae2ace28e56cf8","typeString":"literal_string \"no stake specified\""}],"id":2661,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2726:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2726:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2667,"nodeType":"ExpressionStatement","src":"2726:40:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2669,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"2784:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":2672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2798:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":2671,"name":"uint112","nodeType":"ElementaryTypeName","src":"2798:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":2670,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2793:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2793:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":2674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2807:3:7","memberName":"max","nodeType":"MemberAccess","src":"2793:17:7","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"2784:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7374616b65206f766572666c6f77","id":2676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2812:16:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_6a64644aeeb545618f93fda0e8ccacb2c407cdffe2b26245fdfa446117fd12f8","typeString":"literal_string \"stake overflow\""},"value":"stake overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6a64644aeeb545618f93fda0e8ccacb2c407cdffe2b26245fdfa446117fd12f8","typeString":"literal_string \"stake overflow\""}],"id":2668,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2776:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2776:53:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2678,"nodeType":"ExpressionStatement","src":"2776:53:7"},{"expression":{"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2679,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"2839:8:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_DepositInfo_$3482_storage_$","typeString":"mapping(address => struct IStakeManager.DepositInfo storage ref)"}},"id":2682,"indexExpression":{"expression":{"id":2680,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2848:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2852:6:7","memberName":"sender","nodeType":"MemberAccess","src":"2848:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2839:20:7","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage","typeString":"struct IStakeManager.DepositInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":2684,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"2887:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":2685,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2892:7:7","memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":3473,"src":"2887:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":2686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2913:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"arguments":[{"id":2689,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"2939:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2931:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":2687,"name":"uint112","nodeType":"ElementaryTypeName","src":"2931:7:7","typeDescriptions":{}}},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2931:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},{"id":2691,"name":"unstakeDelaySec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"2959:15:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":2692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2988:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint112","typeString":"uint112"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2683,"name":"DepositInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"2862:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_DepositInfo_$3482_storage_ptr_$","typeString":"type(struct IStakeManager.DepositInfo storage pointer)"}},"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2862:137:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_memory_ptr","typeString":"struct IStakeManager.DepositInfo memory"}},"src":"2839:160:7","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage","typeString":"struct IStakeManager.DepositInfo storage ref"}},"id":2695,"nodeType":"ExpressionStatement","src":"2839:160:7"},{"eventCall":{"arguments":[{"expression":{"id":2697,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3026:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3030:6:7","memberName":"sender","nodeType":"MemberAccess","src":"3026:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2699,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"3038:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2700,"name":"unstakeDelaySec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"3045:15:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":2696,"name":"StakeLocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"3014:11:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3014:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2702,"nodeType":"EmitStatement","src":"3009:52:7"}]},"documentation":{"id":2625,"nodeType":"StructuredDocumentation","src":"2157:200:7","text":" Add to the account's stake - amount and delay\n any pending unstake is first cancelled.\n @param unstakeDelaySec The new lock duration before the deposit can be withdrawn."},"functionSelector":"0396cb60","id":2704,"implemented":true,"kind":"function","modifiers":[],"name":"addStake","nameLocation":"2371:8:7","nodeType":"FunctionDefinition","parameters":{"id":2628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2627,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"2387:15:7","nodeType":"VariableDeclaration","scope":2704,"src":"2380:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2626,"name":"uint32","nodeType":"ElementaryTypeName","src":"2380:6:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2379:24:7"},"returnParameters":{"id":2629,"nodeType":"ParameterList","parameters":[],"src":"2419:0:7"},"scope":2899,"src":"2362:706:7","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[3520],"body":{"id":2759,"nodeType":"Block","src":"3239:376:7","statements":[{"assignments":[2710],"declarations":[{"constant":false,"id":2710,"mutability":"mutable","name":"info","nameLocation":"3269:4:7","nodeType":"VariableDeclaration","scope":2759,"src":"3249:24:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo"},"typeName":{"id":2709,"nodeType":"UserDefinedTypeName","pathNode":{"id":2708,"name":"DepositInfo","nameLocations":["3249:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":3482,"src":"3249:11:7"},"referencedDeclaration":3482,"src":"3249:11:7","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo"}},"visibility":"internal"}],"id":2715,"initialValue":{"baseExpression":{"id":2711,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"3276:8:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_DepositInfo_$3482_storage_$","typeString":"mapping(address => struct IStakeManager.DepositInfo storage ref)"}},"id":2714,"indexExpression":{"expression":{"id":2712,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3285:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3289:6:7","memberName":"sender","nodeType":"MemberAccess","src":"3285:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3276:20:7","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage","typeString":"struct IStakeManager.DepositInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3249:47:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2717,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"3314:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":2718,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3319:15:7","memberName":"unstakeDelaySec","nodeType":"MemberAccess","referencedDeclaration":3479,"src":"3314:20:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3338:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3314:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6e6f74207374616b6564","id":2721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3341:12:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_8d1fe892c4e34e50852d9473d3c9854eedeef3b324fbe99dc34a39c1c505db12","typeString":"literal_string \"not staked\""},"value":"not staked"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8d1fe892c4e34e50852d9473d3c9854eedeef3b324fbe99dc34a39c1c505db12","typeString":"literal_string \"not staked\""}],"id":2716,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3306:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3306:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2723,"nodeType":"ExpressionStatement","src":"3306:48:7"},{"expression":{"arguments":[{"expression":{"id":2725,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"3372:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":2726,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3377:6:7","memberName":"staked","nodeType":"MemberAccess","referencedDeclaration":3475,"src":"3372:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"616c726561647920756e7374616b696e67","id":2727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3385:19:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_eabab2b938baa7d6708bc792cd1d2d9d9bd3627968a46b23824d4b6af2b0f7a8","typeString":"literal_string \"already unstaking\""},"value":"already unstaking"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eabab2b938baa7d6708bc792cd1d2d9d9bd3627968a46b23824d4b6af2b0f7a8","typeString":"literal_string \"already unstaking\""}],"id":2724,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3364:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3364:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2729,"nodeType":"ExpressionStatement","src":"3364:41:7"},{"assignments":[2731],"declarations":[{"constant":false,"id":2731,"mutability":"mutable","name":"withdrawTime","nameLocation":"3422:12:7","nodeType":"VariableDeclaration","scope":2759,"src":"3415:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":2730,"name":"uint48","nodeType":"ElementaryTypeName","src":"3415:6:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":2740,"initialValue":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":2734,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3444:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3450:9:7","memberName":"timestamp","nodeType":"MemberAccess","src":"3444:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3437:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":2732,"name":"uint48","nodeType":"ElementaryTypeName","src":"3437:6:7","typeDescriptions":{}}},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3437:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":2737,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"3463:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":2738,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3468:15:7","memberName":"unstakeDelaySec","nodeType":"MemberAccess","referencedDeclaration":3479,"src":"3463:20:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"3437:46:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"3415:68:7"},{"expression":{"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2741,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"3493:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":2743,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3498:12:7","memberName":"withdrawTime","nodeType":"MemberAccess","referencedDeclaration":3481,"src":"3493:17:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2744,"name":"withdrawTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"3513:12:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"3493:32:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":2746,"nodeType":"ExpressionStatement","src":"3493:32:7"},{"expression":{"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2747,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"3535:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":2749,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3540:6:7","memberName":"staked","nodeType":"MemberAccess","referencedDeclaration":3475,"src":"3535:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3549:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3535:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2752,"nodeType":"ExpressionStatement","src":"3535:19:7"},{"eventCall":{"arguments":[{"expression":{"id":2754,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3583:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3587:6:7","memberName":"sender","nodeType":"MemberAccess","src":"3583:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2756,"name":"withdrawTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"3595:12:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":2753,"name":"StakeUnlocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3462,"src":"3569:13:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3569:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2758,"nodeType":"EmitStatement","src":"3564:44:7"}]},"documentation":{"id":2705,"nodeType":"StructuredDocumentation","src":"3074:128:7","text":" Attempt to unlock the stake.\n The value can be withdrawn (using withdrawStake) after the unstake delay."},"functionSelector":"bb9fe6bf","id":2760,"implemented":true,"kind":"function","modifiers":[],"name":"unlockStake","nameLocation":"3216:11:7","nodeType":"FunctionDefinition","parameters":{"id":2706,"nodeType":"ParameterList","parameters":[],"src":"3227:2:7"},"returnParameters":{"id":2707,"nodeType":"ParameterList","parameters":[],"src":"3239:0:7"},"scope":2899,"src":"3207:408:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[3526],"body":{"id":2842,"nodeType":"Block","src":"3888:619:7","statements":[{"assignments":[2768],"declarations":[{"constant":false,"id":2768,"mutability":"mutable","name":"info","nameLocation":"3918:4:7","nodeType":"VariableDeclaration","scope":2842,"src":"3898:24:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo"},"typeName":{"id":2767,"nodeType":"UserDefinedTypeName","pathNode":{"id":2766,"name":"DepositInfo","nameLocations":["3898:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":3482,"src":"3898:11:7"},"referencedDeclaration":3482,"src":"3898:11:7","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo"}},"visibility":"internal"}],"id":2773,"initialValue":{"baseExpression":{"id":2769,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"3925:8:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_DepositInfo_$3482_storage_$","typeString":"mapping(address => struct IStakeManager.DepositInfo storage ref)"}},"id":2772,"indexExpression":{"expression":{"id":2770,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3934:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3938:6:7","memberName":"sender","nodeType":"MemberAccess","src":"3934:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3925:20:7","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage","typeString":"struct IStakeManager.DepositInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3898:47:7"},{"assignments":[2775],"declarations":[{"constant":false,"id":2775,"mutability":"mutable","name":"stake","nameLocation":"3963:5:7","nodeType":"VariableDeclaration","scope":2842,"src":"3955:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2774,"name":"uint256","nodeType":"ElementaryTypeName","src":"3955:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2778,"initialValue":{"expression":{"id":2776,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"3971:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":2777,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3976:5:7","memberName":"stake","nodeType":"MemberAccess","referencedDeclaration":3477,"src":"3971:10:7","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"VariableDeclarationStatement","src":"3955:26:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2780,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"3999:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4007:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3999:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f207374616b6520746f207769746864726177","id":2783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4010:22:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_2157ff27c581d0c09d0fefae4820572f0bccc198ee5e28633f039d06e0011705","typeString":"literal_string \"No stake to withdraw\""},"value":"No stake to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2157ff27c581d0c09d0fefae4820572f0bccc198ee5e28633f039d06e0011705","typeString":"literal_string \"No stake to withdraw\""}],"id":2779,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3991:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3991:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2785,"nodeType":"ExpressionStatement","src":"3991:42:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2787,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"4051:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":2788,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4056:12:7","memberName":"withdrawTime","nodeType":"MemberAccess","referencedDeclaration":3481,"src":"4051:17:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4071:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4051:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6d7573742063616c6c20756e6c6f636b5374616b652829206669727374","id":2791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4074:31:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_9973ef36bc8342d488dae231c130b6ed95bb2a62fca313f7c859e3c78149cec5","typeString":"literal_string \"must call unlockStake() first\""},"value":"must call unlockStake() first"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9973ef36bc8342d488dae231c130b6ed95bb2a62fca313f7c859e3c78149cec5","typeString":"literal_string \"must call unlockStake() first\""}],"id":2786,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4043:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4043:63:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2793,"nodeType":"ExpressionStatement","src":"4043:63:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2795,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"4137:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":2796,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4142:12:7","memberName":"withdrawTime","nodeType":"MemberAccess","referencedDeclaration":3481,"src":"4137:17:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":2797,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4158:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4164:9:7","memberName":"timestamp","nodeType":"MemberAccess","src":"4158:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4137:36:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5374616b65207769746864726177616c206973206e6f7420647565","id":2800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4187:29:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_5cd6155e73f61bccbf344f4197f14538012904bd24fa05bb30427c7f1fe55d45","typeString":"literal_string \"Stake withdrawal is not due\""},"value":"Stake withdrawal is not due"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5cd6155e73f61bccbf344f4197f14538012904bd24fa05bb30427c7f1fe55d45","typeString":"literal_string \"Stake withdrawal is not due\""}],"id":2794,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4116:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4116:110:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2802,"nodeType":"ExpressionStatement","src":"4116:110:7"},{"expression":{"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2803,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"4236:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":2805,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4241:15:7","memberName":"unstakeDelaySec","nodeType":"MemberAccess","referencedDeclaration":3479,"src":"4236:20:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4259:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4236:24:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":2808,"nodeType":"ExpressionStatement","src":"4236:24:7"},{"expression":{"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2809,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"4270:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":2811,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4275:12:7","memberName":"withdrawTime","nodeType":"MemberAccess","referencedDeclaration":3481,"src":"4270:17:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4290:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4270:21:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":2814,"nodeType":"ExpressionStatement","src":"4270:21:7"},{"expression":{"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2815,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"4301:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":2817,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4306:5:7","memberName":"stake","nodeType":"MemberAccess","referencedDeclaration":3477,"src":"4301:10:7","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4314:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4301:14:7","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"id":2820,"nodeType":"ExpressionStatement","src":"4301:14:7"},{"eventCall":{"arguments":[{"expression":{"id":2822,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4345:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4349:6:7","memberName":"sender","nodeType":"MemberAccess","src":"4345:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2824,"name":"withdrawAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"4357:15:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":2825,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"4374:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2821,"name":"StakeWithdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3470,"src":"4330:14:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4330:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2827,"nodeType":"EmitStatement","src":"4325:55:7"},{"assignments":[2829,null],"declarations":[{"constant":false,"id":2829,"mutability":"mutable","name":"success","nameLocation":"4396:7:7","nodeType":"VariableDeclaration","scope":2842,"src":"4391:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2828,"name":"bool","nodeType":"ElementaryTypeName","src":"4391:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2836,"initialValue":{"arguments":[{"hexValue":"","id":2834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4443:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2830,"name":"withdrawAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"4408:15:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4424:4:7","memberName":"call","nodeType":"MemberAccess","src":"4408:20:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2832,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"4436:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4408:34:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4408:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4390:56:7"},{"expression":{"arguments":[{"id":2838,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"4464:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6661696c656420746f207769746864726177207374616b65","id":2839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4473:26:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfdcaaacbfb01ed2a280d66b545f88db6fa18ccf502cb079b76e190a3a0227b","typeString":"literal_string \"failed to withdraw stake\""},"value":"failed to withdraw stake"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfdcaaacbfb01ed2a280d66b545f88db6fa18ccf502cb079b76e190a3a0227b","typeString":"literal_string \"failed to withdraw stake\""}],"id":2837,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4456:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4456:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2841,"nodeType":"ExpressionStatement","src":"4456:44:7"}]},"documentation":{"id":2761,"nodeType":"StructuredDocumentation","src":"3621:197:7","text":" Withdraw from the (unlocked) stake.\n Must first call unlockStake and wait for the unstakeDelay to pass.\n @param withdrawAddress - The address to send withdrawn value."},"functionSelector":"c23a5cea","id":2843,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawStake","nameLocation":"3832:13:7","nodeType":"FunctionDefinition","parameters":{"id":2764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2763,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3862:15:7","nodeType":"VariableDeclaration","scope":2843,"src":"3846:31:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2762,"name":"address","nodeType":"ElementaryTypeName","src":"3846:15:7","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"3845:33:7"},"returnParameters":{"id":2765,"nodeType":"ParameterList","parameters":[],"src":"3888:0:7"},"scope":2899,"src":"3823:684:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[3534],"body":{"id":2897,"nodeType":"Block","src":"4796:388:7","statements":[{"assignments":[2853],"declarations":[{"constant":false,"id":2853,"mutability":"mutable","name":"info","nameLocation":"4826:4:7","nodeType":"VariableDeclaration","scope":2897,"src":"4806:24:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo"},"typeName":{"id":2852,"nodeType":"UserDefinedTypeName","pathNode":{"id":2851,"name":"DepositInfo","nameLocations":["4806:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":3482,"src":"4806:11:7"},"referencedDeclaration":3482,"src":"4806:11:7","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo"}},"visibility":"internal"}],"id":2858,"initialValue":{"baseExpression":{"id":2854,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"4833:8:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_DepositInfo_$3482_storage_$","typeString":"mapping(address => struct IStakeManager.DepositInfo storage ref)"}},"id":2857,"indexExpression":{"expression":{"id":2855,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4842:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4846:6:7","memberName":"sender","nodeType":"MemberAccess","src":"4842:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4833:20:7","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage","typeString":"struct IStakeManager.DepositInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4806:47:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2860,"name":"withdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"4871:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":2861,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"4889:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":2862,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4894:7:7","memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":3473,"src":"4889:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4871:30:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"576974686472617720616d6f756e7420746f6f206c61726765","id":2864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4903:27:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_0c1f958f466ebe53086ccef34937001c8a0d9f200320ab480bde36d46a3c6178","typeString":"literal_string \"Withdraw amount too large\""},"value":"Withdraw amount too large"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0c1f958f466ebe53086ccef34937001c8a0d9f200320ab480bde36d46a3c6178","typeString":"literal_string \"Withdraw amount too large\""}],"id":2859,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4863:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4863:68:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2866,"nodeType":"ExpressionStatement","src":"4863:68:7"},{"expression":{"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2867,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"4941:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":2869,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4946:7:7","memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":3473,"src":"4941:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2870,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"4956:4:7","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo storage pointer"}},"id":2871,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4961:7:7","memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":3473,"src":"4956:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2872,"name":"withdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"4971:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4956:29:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4941:44:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2875,"nodeType":"ExpressionStatement","src":"4941:44:7"},{"eventCall":{"arguments":[{"expression":{"id":2877,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5010:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5014:6:7","memberName":"sender","nodeType":"MemberAccess","src":"5010:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2879,"name":"withdrawAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"5022:15:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":2880,"name":"withdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"5039:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2876,"name":"Withdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"5000:9:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5000:54:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2882,"nodeType":"EmitStatement","src":"4995:59:7"},{"assignments":[2884,null],"declarations":[{"constant":false,"id":2884,"mutability":"mutable","name":"success","nameLocation":"5070:7:7","nodeType":"VariableDeclaration","scope":2897,"src":"5065:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2883,"name":"bool","nodeType":"ElementaryTypeName","src":"5065:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2891,"initialValue":{"arguments":[{"hexValue":"","id":2889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5126:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2885,"name":"withdrawAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2846,"src":"5082:15:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5098:4:7","memberName":"call","nodeType":"MemberAccess","src":"5082:20:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2887,"name":"withdrawAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"5110:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5082:43:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5082:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5064:65:7"},{"expression":{"arguments":[{"id":2893,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"5147:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6661696c656420746f207769746864726177","id":2894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5156:20:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_a34ed1abbfa8a2aea109afd35a4e04f6c52ffb62d3a545e3e3e4f2d894ca1e41","typeString":"literal_string \"failed to withdraw\""},"value":"failed to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a34ed1abbfa8a2aea109afd35a4e04f6c52ffb62d3a545e3e3e4f2d894ca1e41","typeString":"literal_string \"failed to withdraw\""}],"id":2892,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5139:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5139:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2896,"nodeType":"ExpressionStatement","src":"5139:38:7"}]},"documentation":{"id":2844,"nodeType":"StructuredDocumentation","src":"4513:170:7","text":" Withdraw from the deposit.\n @param withdrawAddress - The address to send withdrawn value.\n @param withdrawAmount  - The amount to withdraw."},"functionSelector":"205c2878","id":2898,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawTo","nameLocation":"4697:10:7","nodeType":"FunctionDefinition","parameters":{"id":2849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2846,"mutability":"mutable","name":"withdrawAddress","nameLocation":"4733:15:7","nodeType":"VariableDeclaration","scope":2898,"src":"4717:31:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2845,"name":"address","nodeType":"ElementaryTypeName","src":"4717:15:7","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2848,"mutability":"mutable","name":"withdrawAmount","nameLocation":"4766:14:7","nodeType":"VariableDeclaration","scope":2898,"src":"4758:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2847,"name":"uint256","nodeType":"ElementaryTypeName","src":"4758:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4707:79:7"},"returnParameters":{"id":2850,"nodeType":"ParameterList","parameters":[],"src":"4796:0:7"},"scope":2899,"src":"4688:496:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2900,"src":"401:4785:7","usedErrors":[],"usedEvents":[3440,3448,3456,3462,3470]}],"src":"41:5146:7"},"id":7},"contracts/core/UserOperationLib.sol":{"ast":{"absolutePath":"contracts/core/UserOperationLib.sol","exportedSymbols":{"PackedUserOperation":[3559],"UserOperationLib":[3134],"calldataKeccak":[2336],"min":[2354]},"id":3135,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":2901,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"36:24:8"},{"absolutePath":"contracts/interfaces/PackedUserOperation.sol","file":"../interfaces/PackedUserOperation.sol","id":2902,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3135,"sourceUnit":3560,"src":"104:47:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/core/Helpers.sol","file":"./Helpers.sol","id":2905,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3135,"sourceUnit":2355,"src":"152:50:8","symbolAliases":[{"foreign":{"id":2903,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"160:14:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2904,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"176:3:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"UserOperationLib","contractDependencies":[],"contractKind":"library","documentation":{"id":2906,"nodeType":"StructuredDocumentation","src":"204:77:8","text":" Utility functions helpful when working with UserOperation structs."},"fullyImplemented":true,"id":3134,"linearizedBaseContracts":[3134],"name":"UserOperationLib","nameLocation":"290:16:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"b29a8ff4","id":2909,"mutability":"constant","name":"PAYMASTER_VALIDATION_GAS_OFFSET","nameLocation":"338:31:8","nodeType":"VariableDeclaration","scope":3134,"src":"314:60:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2907,"name":"uint256","nodeType":"ElementaryTypeName","src":"314:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3230","id":2908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"372:2:8","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"public"},{"constant":true,"functionSelector":"25093e1b","id":2912,"mutability":"constant","name":"PAYMASTER_POSTOP_GAS_OFFSET","nameLocation":"404:27:8","nodeType":"VariableDeclaration","scope":3134,"src":"380:56:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2910,"name":"uint256","nodeType":"ElementaryTypeName","src":"380:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3336","id":2911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"434:2:8","typeDescriptions":{"typeIdentifier":"t_rational_36_by_1","typeString":"int_const 36"},"value":"36"},"visibility":"public"},{"constant":true,"functionSelector":"ede31502","id":2915,"mutability":"constant","name":"PAYMASTER_DATA_OFFSET","nameLocation":"466:21:8","nodeType":"VariableDeclaration","scope":3134,"src":"442:50:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2913,"name":"uint256","nodeType":"ElementaryTypeName","src":"442:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3532","id":2914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"490:2:8","typeDescriptions":{"typeIdentifier":"t_rational_52_by_1","typeString":"int_const 52"},"value":"52"},"visibility":"public"},{"body":{"id":2936,"nodeType":"Block","src":"708:221:8","statements":[{"assignments":[2925],"declarations":[{"constant":false,"id":2925,"mutability":"mutable","name":"data","nameLocation":"726:4:8","nodeType":"VariableDeclaration","scope":2936,"src":"718:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2924,"name":"address","nodeType":"ElementaryTypeName","src":"718:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2926,"nodeType":"VariableDeclarationStatement","src":"718:12:8"},{"AST":{"nativeSrc":"832:52:8","nodeType":"YulBlock","src":"832:52:8","statements":[{"nativeSrc":"846:28:8","nodeType":"YulAssignment","src":"846:28:8","value":{"arguments":[{"name":"userOp","nativeSrc":"867:6:8","nodeType":"YulIdentifier","src":"867:6:8"}],"functionName":{"name":"calldataload","nativeSrc":"854:12:8","nodeType":"YulIdentifier","src":"854:12:8"},"nativeSrc":"854:20:8","nodeType":"YulFunctionCall","src":"854:20:8"},"variableNames":[{"name":"data","nativeSrc":"846:4:8","nodeType":"YulIdentifier","src":"846:4:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2925,"isOffset":false,"isSlot":false,"src":"846:4:8","valueSize":1},{"declaration":2919,"isOffset":false,"isSlot":false,"src":"867:6:8","valueSize":1}],"id":2927,"nodeType":"InlineAssembly","src":"823:61:8"},{"expression":{"arguments":[{"arguments":[{"id":2932,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"916:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"908:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2930,"name":"uint160","nodeType":"ElementaryTypeName","src":"908:7:8","typeDescriptions":{}}},"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"908:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"900:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2928,"name":"address","nodeType":"ElementaryTypeName","src":"900:7:8","typeDescriptions":{}}},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"900:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2923,"id":2935,"nodeType":"Return","src":"893:29:8"}]},"documentation":{"id":2916,"nodeType":"StructuredDocumentation","src":"498:103:8","text":" Get sender from user operation data.\n @param userOp - The user operation data."},"id":2937,"implemented":true,"kind":"function","modifiers":[],"name":"getSender","nameLocation":"615:9:8","nodeType":"FunctionDefinition","parameters":{"id":2920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2919,"mutability":"mutable","name":"userOp","nameLocation":"663:6:8","nodeType":"VariableDeclaration","scope":2937,"src":"634:35:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":2918,"nodeType":"UserDefinedTypeName","pathNode":{"id":2917,"name":"PackedUserOperation","nameLocations":["634:19:8"],"nodeType":"IdentifierPath","referencedDeclaration":3559,"src":"634:19:8"},"referencedDeclaration":3559,"src":"634:19:8","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"624:51:8"},"returnParameters":{"id":2923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2922,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2937,"src":"699:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2921,"name":"address","nodeType":"ElementaryTypeName","src":"699:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"698:9:8"},"scope":3134,"src":"606:323:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2972,"nodeType":"Block","src":"1235:427:8","statements":[{"id":2971,"nodeType":"UncheckedBlock","src":"1245:411:8","statements":[{"assignments":[2947],"declarations":[{"constant":false,"id":2947,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"1277:12:8","nodeType":"VariableDeclaration","scope":2971,"src":"1269:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2946,"name":"uint256","nodeType":"ElementaryTypeName","src":"1269:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2950,"initialValue":{"expression":{"id":2948,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"1292:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1299:12:8","memberName":"maxFeePerGas","nodeType":"MemberAccess","referencedDeclaration":3552,"src":"1292:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1269:42:8"},{"assignments":[2952],"declarations":[{"constant":false,"id":2952,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"1333:20:8","nodeType":"VariableDeclaration","scope":2971,"src":"1325:28:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2951,"name":"uint256","nodeType":"ElementaryTypeName","src":"1325:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2955,"initialValue":{"expression":{"id":2953,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"1356:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1363:20:8","memberName":"maxPriorityFeePerGas","nodeType":"MemberAccess","referencedDeclaration":3554,"src":"1356:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1325:58:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2956,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"1401:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2957,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2952,"src":"1417:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1401:36:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2962,"nodeType":"IfStatement","src":"1397:173:8","trueBody":{"id":2961,"nodeType":"Block","src":"1439:131:8","statements":[{"expression":{"id":2959,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"1543:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2945,"id":2960,"nodeType":"Return","src":"1536:19:8"}]}},{"expression":{"arguments":[{"id":2964,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"1594:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2965,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2952,"src":"1608:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":2966,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1631:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1637:7:8","memberName":"basefee","nodeType":"MemberAccess","src":"1631:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1608:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2963,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"1590:3:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1590:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2945,"id":2970,"nodeType":"Return","src":"1583:62:8"}]}]},"documentation":{"id":2938,"nodeType":"StructuredDocumentation","src":"935:194:8","text":" Relayer/block builder might submit the TX with higher priorityFee,\n but the user should not pay above what he signed for.\n @param userOp - The user operation data."},"id":2973,"implemented":true,"kind":"function","modifiers":[],"name":"gasPrice","nameLocation":"1143:8:8","nodeType":"FunctionDefinition","parameters":{"id":2942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2941,"mutability":"mutable","name":"userOp","nameLocation":"1190:6:8","nodeType":"VariableDeclaration","scope":2973,"src":"1161:35:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":2940,"nodeType":"UserDefinedTypeName","pathNode":{"id":2939,"name":"PackedUserOperation","nameLocations":["1161:19:8"],"nodeType":"IdentifierPath","referencedDeclaration":3559,"src":"1161:19:8"},"referencedDeclaration":3559,"src":"1161:19:8","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"1151:51:8"},"returnParameters":{"id":2945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2973,"src":"1226:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2943,"name":"uint256","nodeType":"ElementaryTypeName","src":"1226:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1225:9:8"},"scope":3134,"src":"1134:528:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3047,"nodeType":"Block","src":"1900:778:8","statements":[{"assignments":[2983],"declarations":[{"constant":false,"id":2983,"mutability":"mutable","name":"sender","nameLocation":"1918:6:8","nodeType":"VariableDeclaration","scope":3047,"src":"1910:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2982,"name":"address","nodeType":"ElementaryTypeName","src":"1910:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2987,"initialValue":{"arguments":[{"id":2985,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"1937:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"}],"id":2984,"name":"getSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"1927:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_PackedUserOperation_$3559_calldata_ptr_$returns$_t_address_$","typeString":"function (struct PackedUserOperation calldata) pure returns (address)"}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1927:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1910:34:8"},{"assignments":[2989],"declarations":[{"constant":false,"id":2989,"mutability":"mutable","name":"nonce","nameLocation":"1962:5:8","nodeType":"VariableDeclaration","scope":3047,"src":"1954:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2988,"name":"uint256","nodeType":"ElementaryTypeName","src":"1954:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2992,"initialValue":{"expression":{"id":2990,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"1970:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1977:5:8","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":3542,"src":"1970:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1954:28:8"},{"assignments":[2994],"declarations":[{"constant":false,"id":2994,"mutability":"mutable","name":"hashInitCode","nameLocation":"2000:12:8","nodeType":"VariableDeclaration","scope":3047,"src":"1992:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2993,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1992:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2999,"initialValue":{"arguments":[{"expression":{"id":2996,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"2030:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2037:8:8","memberName":"initCode","nodeType":"MemberAccess","referencedDeclaration":3544,"src":"2030:15:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":2995,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"2015:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":2998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2015:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1992:54:8"},{"assignments":[3001],"declarations":[{"constant":false,"id":3001,"mutability":"mutable","name":"hashCallData","nameLocation":"2064:12:8","nodeType":"VariableDeclaration","scope":3047,"src":"2056:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3000,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2056:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3006,"initialValue":{"arguments":[{"expression":{"id":3003,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"2094:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2101:8:8","memberName":"callData","nodeType":"MemberAccess","referencedDeclaration":3546,"src":"2094:15:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3002,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"2079:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2056:54:8"},{"assignments":[3008],"declarations":[{"constant":false,"id":3008,"mutability":"mutable","name":"accountGasLimits","nameLocation":"2128:16:8","nodeType":"VariableDeclaration","scope":3047,"src":"2120:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3007,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2120:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3011,"initialValue":{"expression":{"id":3009,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"2147:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2154:16:8","memberName":"accountGasLimits","nodeType":"MemberAccess","referencedDeclaration":3548,"src":"2147:23:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2120:50:8"},{"assignments":[3013],"declarations":[{"constant":false,"id":3013,"mutability":"mutable","name":"preVerificationGas","nameLocation":"2188:18:8","nodeType":"VariableDeclaration","scope":3047,"src":"2180:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3012,"name":"uint256","nodeType":"ElementaryTypeName","src":"2180:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3016,"initialValue":{"expression":{"id":3014,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"2209:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2216:18:8","memberName":"preVerificationGas","nodeType":"MemberAccess","referencedDeclaration":3550,"src":"2209:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2180:54:8"},{"assignments":[3018],"declarations":[{"constant":false,"id":3018,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"2252:12:8","nodeType":"VariableDeclaration","scope":3047,"src":"2244:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3017,"name":"uint256","nodeType":"ElementaryTypeName","src":"2244:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3021,"initialValue":{"expression":{"id":3019,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"2267:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2274:12:8","memberName":"maxFeePerGas","nodeType":"MemberAccess","referencedDeclaration":3552,"src":"2267:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2244:42:8"},{"assignments":[3023],"declarations":[{"constant":false,"id":3023,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"2304:20:8","nodeType":"VariableDeclaration","scope":3047,"src":"2296:28:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3022,"name":"uint256","nodeType":"ElementaryTypeName","src":"2296:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3026,"initialValue":{"expression":{"id":3024,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"2327:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2334:20:8","memberName":"maxPriorityFeePerGas","nodeType":"MemberAccess","referencedDeclaration":3554,"src":"2327:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2296:58:8"},{"assignments":[3028],"declarations":[{"constant":false,"id":3028,"mutability":"mutable","name":"hashPaymasterAndData","nameLocation":"2372:20:8","nodeType":"VariableDeclaration","scope":3047,"src":"2364:28:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3027,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2364:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3033,"initialValue":{"arguments":[{"expression":{"id":3030,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"2410:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2417:16:8","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":3556,"src":"2410:23:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3029,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"2395:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2395:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2364:70:8"},{"expression":{"arguments":[{"id":3036,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"2476:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3037,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"2484:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3038,"name":"hashInitCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"2503:12:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3039,"name":"hashCallData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"2517:12:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3040,"name":"accountGasLimits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"2543:16:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3041,"name":"preVerificationGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"2561:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3042,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"2593:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3043,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"2607:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3044,"name":"hashPaymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"2641:20:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3034,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2452:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2456:6:8","memberName":"encode","nodeType":"MemberAccess","src":"2452:10:8","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2452:219:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2981,"id":3046,"nodeType":"Return","src":"2445:226:8"}]},"documentation":{"id":2974,"nodeType":"StructuredDocumentation","src":"1668:119:8","text":" Pack the user operation data into bytes for hashing.\n @param userOp - The user operation data."},"id":3048,"implemented":true,"kind":"function","modifiers":[],"name":"encode","nameLocation":"1801:6:8","nodeType":"FunctionDefinition","parameters":{"id":2978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2977,"mutability":"mutable","name":"userOp","nameLocation":"1846:6:8","nodeType":"VariableDeclaration","scope":3048,"src":"1817:35:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":2976,"nodeType":"UserDefinedTypeName","pathNode":{"id":2975,"name":"PackedUserOperation","nameLocations":["1817:19:8"],"nodeType":"IdentifierPath","referencedDeclaration":3559,"src":"1817:19:8"},"referencedDeclaration":3559,"src":"1817:19:8","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"1807:51:8"},"returnParameters":{"id":2981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2980,"mutability":"mutable","name":"ret","nameLocation":"1895:3:8","nodeType":"VariableDeclaration","scope":3048,"src":"1882:16:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2979,"name":"bytes","nodeType":"ElementaryTypeName","src":"1882:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1881:18:8"},"scope":3134,"src":"1792:886:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3073,"nodeType":"Block","src":"2829:96:8","statements":[{"expression":{"components":[{"arguments":[{"arguments":[{"id":3061,"name":"accountGasLimits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"2863:16:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2855:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes16_$","typeString":"type(bytes16)"},"typeName":{"id":3059,"name":"bytes16","nodeType":"ElementaryTypeName","src":"2855:7:8","typeDescriptions":{}}},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes16","typeString":"bytes16"}],"id":3058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2847:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3057,"name":"uint128","nodeType":"ElementaryTypeName","src":"2847:7:8","typeDescriptions":{}}},"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2847:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"arguments":[{"arguments":[{"id":3068,"name":"accountGasLimits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"2899:16:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2891:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3066,"name":"uint256","nodeType":"ElementaryTypeName","src":"2891:7:8","typeDescriptions":{}}},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2891:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2883:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3064,"name":"uint128","nodeType":"ElementaryTypeName","src":"2883:7:8","typeDescriptions":{}}},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2883:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"id":3071,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2846:72:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint128_$_t_uint128_$","typeString":"tuple(uint128,uint128)"}},"functionReturnParameters":3056,"id":3072,"nodeType":"Return","src":"2839:79:8"}]},"id":3074,"implemented":true,"kind":"function","modifiers":[],"name":"unpackAccountGasLimits","nameLocation":"2693:22:8","nodeType":"FunctionDefinition","parameters":{"id":3051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3050,"mutability":"mutable","name":"accountGasLimits","nameLocation":"2733:16:8","nodeType":"VariableDeclaration","scope":3074,"src":"2725:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3049,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2715:40:8"},"returnParameters":{"id":3056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3053,"mutability":"mutable","name":"validationGasLimit","nameLocation":"2787:18:8","nodeType":"VariableDeclaration","scope":3074,"src":"2779:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3052,"name":"uint256","nodeType":"ElementaryTypeName","src":"2779:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3055,"mutability":"mutable","name":"callGasLimit","nameLocation":"2815:12:8","nodeType":"VariableDeclaration","scope":3074,"src":"2807:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3054,"name":"uint256","nodeType":"ElementaryTypeName","src":"2807:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2778:50:8"},"scope":3134,"src":"2684:241:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3116,"nodeType":"Block","src":"3101:329:8","statements":[{"expression":{"components":[{"arguments":[{"arguments":[{"baseExpression":{"id":3089,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3076,"src":"3148:16:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":3090,"name":"PAYMASTER_VALIDATION_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"3167:31:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"3148:51:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":3088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3140:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":3087,"name":"bytes20","nodeType":"ElementaryTypeName","src":"3140:7:8","typeDescriptions":{}}},"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3140:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":3086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3132:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3085,"name":"address","nodeType":"ElementaryTypeName","src":"3132:7:8","typeDescriptions":{}}},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3132:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"baseExpression":{"id":3098,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3076,"src":"3231:16:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":3100,"name":"PAYMASTER_POSTOP_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"3282:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"3231:79:8","startExpression":{"id":3099,"name":"PAYMASTER_VALIDATION_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"3248:31:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":3097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3223:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes16_$","typeString":"type(bytes16)"},"typeName":{"id":3096,"name":"bytes16","nodeType":"ElementaryTypeName","src":"3223:7:8","typeDescriptions":{}}},"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3223:88:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes16","typeString":"bytes16"}],"id":3095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3215:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3094,"name":"uint128","nodeType":"ElementaryTypeName","src":"3215:7:8","typeDescriptions":{}}},"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3215:97:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"arguments":[{"arguments":[{"baseExpression":{"id":3108,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3076,"src":"3342:16:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":3110,"name":"PAYMASTER_DATA_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"3389:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"3342:69:8","startExpression":{"id":3109,"name":"PAYMASTER_POSTOP_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"3359:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":3107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3334:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes16_$","typeString":"type(bytes16)"},"typeName":{"id":3106,"name":"bytes16","nodeType":"ElementaryTypeName","src":"3334:7:8","typeDescriptions":{}}},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3334:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes16","typeString":"bytes16"}],"id":3105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3326:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3104,"name":"uint128","nodeType":"ElementaryTypeName","src":"3326:7:8","typeDescriptions":{}}},"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3326:87:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"id":3114,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3118:305:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint128_$_t_uint128_$","typeString":"tuple(address,uint128,uint128)"}},"functionReturnParameters":3084,"id":3115,"nodeType":"Return","src":"3111:312:8"}]},"id":3117,"implemented":true,"kind":"function","modifiers":[],"name":"unpackPaymasterStaticFields","nameLocation":"2940:27:8","nodeType":"FunctionDefinition","parameters":{"id":3077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3076,"mutability":"mutable","name":"paymasterAndData","nameLocation":"2992:16:8","nodeType":"VariableDeclaration","scope":3117,"src":"2977:31:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3075,"name":"bytes","nodeType":"ElementaryTypeName","src":"2977:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2967:47:8"},"returnParameters":{"id":3084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3079,"mutability":"mutable","name":"paymaster","nameLocation":"3046:9:8","nodeType":"VariableDeclaration","scope":3117,"src":"3038:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3078,"name":"address","nodeType":"ElementaryTypeName","src":"3038:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3081,"mutability":"mutable","name":"validationGasLimit","nameLocation":"3065:18:8","nodeType":"VariableDeclaration","scope":3117,"src":"3057:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3080,"name":"uint256","nodeType":"ElementaryTypeName","src":"3057:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3083,"mutability":"mutable","name":"postOp","nameLocation":"3093:6:8","nodeType":"VariableDeclaration","scope":3117,"src":"3085:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3082,"name":"uint256","nodeType":"ElementaryTypeName","src":"3085:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3037:63:8"},"scope":3134,"src":"2931:499:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3132,"nodeType":"Block","src":"3634:49:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":3128,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"3668:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation calldata"}],"id":3127,"name":"encode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"3661:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_PackedUserOperation_$3559_calldata_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct PackedUserOperation calldata) pure returns (bytes memory)"}},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3661:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3126,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3651:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3651:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3125,"id":3131,"nodeType":"Return","src":"3644:32:8"}]},"documentation":{"id":3118,"nodeType":"StructuredDocumentation","src":"3436:96:8","text":" Hash the user operation data.\n @param userOp - The user operation data."},"id":3133,"implemented":true,"kind":"function","modifiers":[],"name":"hash","nameLocation":"3546:4:8","nodeType":"FunctionDefinition","parameters":{"id":3122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3121,"mutability":"mutable","name":"userOp","nameLocation":"3589:6:8","nodeType":"VariableDeclaration","scope":3133,"src":"3560:35:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":3120,"nodeType":"UserDefinedTypeName","pathNode":{"id":3119,"name":"PackedUserOperation","nameLocations":["3560:19:8"],"nodeType":"IdentifierPath","referencedDeclaration":3559,"src":"3560:19:8"},"referencedDeclaration":3559,"src":"3560:19:8","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"3550:51:8"},"returnParameters":{"id":3125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3133,"src":"3625:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3123,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3625:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3624:9:8"},"scope":3134,"src":"3537:146:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3135,"src":"282:3403:8","usedErrors":[],"usedEvents":[]}],"src":"36:3650:8"},"id":8},"contracts/interfaces/IAccount.sol":{"ast":{"absolutePath":"contracts/interfaces/IAccount.sol","exportedSymbols":{"IAccount":[3151],"PackedUserOperation":[3559]},"id":3152,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3136,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"36:24:9"},{"absolutePath":"contracts/interfaces/PackedUserOperation.sol","file":"./PackedUserOperation.sol","id":3137,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3152,"sourceUnit":3560,"src":"62:35:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IAccount","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3151,"linearizedBaseContracts":[3151],"name":"IAccount","nameLocation":"109:8:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3138,"nodeType":"StructuredDocumentation","src":"124:2290:9","text":" Validate user's signature and nonce\n the entryPoint will make the call to the recipient only if this validation call returns successfully.\n signature failure should be reported by returning SIG_VALIDATION_FAILED (1).\n This allows making a \"simulation call\" without a valid signature\n Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\n @dev Must validate caller is the entryPoint.\n      Must validate the signature and nonce\n @param userOp              - The operation that is about to be executed.\n @param userOpHash          - Hash of the user's request data. can be used as the basis for signature.\n @param missingAccountFunds - Missing funds on the account's deposit in the entrypoint.\n                              This is the minimum amount to transfer to the sender(entryPoint) to be\n                              able to make the call. The excess is left as a deposit in the entrypoint\n                              for future calls. Can be withdrawn anytime using \"entryPoint.withdrawTo()\".\n                              In case there is a paymaster in the request (or the current deposit is high\n                              enough), this value will be zero.\n @return validationData       - Packaged ValidationData structure. use `_packValidationData` and\n                              `_unpackValidationData` to encode and decode.\n                              <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n                                 otherwise, an address of an \"authorizer\" contract.\n                              <6-byte> validUntil - Last timestamp this operation is valid. 0 for \"indefinite\"\n                              <6-byte> validAfter - First timestamp this operation is valid\n                                                    If an account doesn't use time-range, it is enough to\n                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.\n                              Note that the validation code cannot use block.timestamp (or block.number) directly."},"functionSelector":"8803e451","id":3150,"implemented":false,"kind":"function","modifiers":[],"name":"validateUserOp","nameLocation":"2428:14:9","nodeType":"FunctionDefinition","parameters":{"id":3146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3141,"mutability":"mutable","name":"userOp","nameLocation":"2481:6:9","nodeType":"VariableDeclaration","scope":3150,"src":"2452:35:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":3140,"nodeType":"UserDefinedTypeName","pathNode":{"id":3139,"name":"PackedUserOperation","nameLocations":["2452:19:9"],"nodeType":"IdentifierPath","referencedDeclaration":3559,"src":"2452:19:9"},"referencedDeclaration":3559,"src":"2452:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":3143,"mutability":"mutable","name":"userOpHash","nameLocation":"2505:10:9","nodeType":"VariableDeclaration","scope":3150,"src":"2497:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3142,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2497:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3145,"mutability":"mutable","name":"missingAccountFunds","nameLocation":"2533:19:9","nodeType":"VariableDeclaration","scope":3150,"src":"2525:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3144,"name":"uint256","nodeType":"ElementaryTypeName","src":"2525:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2442:116:9"},"returnParameters":{"id":3149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3148,"mutability":"mutable","name":"validationData","nameLocation":"2585:14:9","nodeType":"VariableDeclaration","scope":3150,"src":"2577:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3147,"name":"uint256","nodeType":"ElementaryTypeName","src":"2577:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2576:24:9"},"scope":3151,"src":"2419:182:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3152,"src":"99:2504:9","usedErrors":[],"usedEvents":[]}],"src":"36:2568:9"},"id":9},"contracts/interfaces/IAccountExecute.sol":{"ast":{"absolutePath":"contracts/interfaces/IAccountExecute.sol","exportedSymbols":{"IAccountExecute":[3164],"PackedUserOperation":[3559]},"id":3165,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3153,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"36:24:10"},{"absolutePath":"contracts/interfaces/PackedUserOperation.sol","file":"./PackedUserOperation.sol","id":3154,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3165,"sourceUnit":3560,"src":"62:35:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IAccountExecute","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3164,"linearizedBaseContracts":[3164],"name":"IAccountExecute","nameLocation":"109:15:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3155,"nodeType":"StructuredDocumentation","src":"131:460:10","text":" Account may implement this execute method.\n passing this methodSig at the beginning of callData will cause the entryPoint to pass the full UserOp (and hash)\n to the account.\n The account should skip the methodSig, and use the callData (and optionally, other UserOp fields)\n @param userOp              - The operation that was just validated.\n @param userOpHash          - Hash of the user's request data."},"functionSelector":"18ad2e12","id":3163,"implemented":false,"kind":"function","modifiers":[],"name":"executeUserOp","nameLocation":"605:13:10","nodeType":"FunctionDefinition","parameters":{"id":3161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3158,"mutability":"mutable","name":"userOp","nameLocation":"657:6:10","nodeType":"VariableDeclaration","scope":3163,"src":"628:35:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":3157,"nodeType":"UserDefinedTypeName","pathNode":{"id":3156,"name":"PackedUserOperation","nameLocations":["628:19:10"],"nodeType":"IdentifierPath","referencedDeclaration":3559,"src":"628:19:10"},"referencedDeclaration":3559,"src":"628:19:10","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":3160,"mutability":"mutable","name":"userOpHash","nameLocation":"681:10:10","nodeType":"VariableDeclaration","scope":3163,"src":"673:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3159,"name":"bytes32","nodeType":"ElementaryTypeName","src":"673:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"618:79:10"},"returnParameters":{"id":3162,"nodeType":"ParameterList","parameters":[],"src":"706:0:10"},"scope":3164,"src":"596:111:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3165,"src":"99:610:10","usedErrors":[],"usedEvents":[]}],"src":"36:674:10"},"id":10},"contracts/interfaces/IAggregator.sol":{"ast":{"absolutePath":"contracts/interfaces/IAggregator.sol","exportedSymbols":{"IAggregator":[3198],"PackedUserOperation":[3559]},"id":3199,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3166,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"36:24:11"},{"absolutePath":"contracts/interfaces/PackedUserOperation.sol","file":"./PackedUserOperation.sol","id":3167,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3199,"sourceUnit":3560,"src":"62:35:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IAggregator","contractDependencies":[],"contractKind":"interface","documentation":{"id":3168,"nodeType":"StructuredDocumentation","src":"99:43:11","text":" Aggregated Signatures validator."},"fullyImplemented":false,"id":3198,"linearizedBaseContracts":[3198],"name":"IAggregator","nameLocation":"153:11:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3169,"nodeType":"StructuredDocumentation","src":"171:269:11","text":" Validate aggregated signature.\n Revert if the aggregated signature does not match the given list of operations.\n @param userOps   - Array of UserOperations to validate the signature for.\n @param signature - The aggregated signature."},"functionSelector":"fe96cf23","id":3178,"implemented":false,"kind":"function","modifiers":[],"name":"validateSignatures","nameLocation":"454:18:11","nodeType":"FunctionDefinition","parameters":{"id":3176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3173,"mutability":"mutable","name":"userOps","nameLocation":"513:7:11","nodeType":"VariableDeclaration","scope":3178,"src":"482:38:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$3559_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation[]"},"typeName":{"baseType":{"id":3171,"nodeType":"UserDefinedTypeName","pathNode":{"id":3170,"name":"PackedUserOperation","nameLocations":["482:19:11"],"nodeType":"IdentifierPath","referencedDeclaration":3559,"src":"482:19:11"},"referencedDeclaration":3559,"src":"482:19:11","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_storage_ptr","typeString":"struct PackedUserOperation"}},"id":3172,"nodeType":"ArrayTypeName","src":"482:21:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$3559_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"}},"visibility":"internal"},{"constant":false,"id":3175,"mutability":"mutable","name":"signature","nameLocation":"545:9:11","nodeType":"VariableDeclaration","scope":3178,"src":"530:24:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3174,"name":"bytes","nodeType":"ElementaryTypeName","src":"530:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"472:88:11"},"returnParameters":{"id":3177,"nodeType":"ParameterList","parameters":[],"src":"574:0:11"},"scope":3198,"src":"445:130:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3179,"nodeType":"StructuredDocumentation","src":"581:609:11","text":" Validate signature of a single userOp.\n This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation\n First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\n @param userOp        - The userOperation received from the user.\n @return sigForUserOp - The value to put into the signature field of the userOp when calling handleOps.\n                        (usually empty, unless account and aggregator support some kind of \"multisig\"."},"functionSelector":"8c153290","id":3187,"implemented":false,"kind":"function","modifiers":[],"name":"validateUserOpSignature","nameLocation":"1204:23:11","nodeType":"FunctionDefinition","parameters":{"id":3183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3182,"mutability":"mutable","name":"userOp","nameLocation":"1266:6:11","nodeType":"VariableDeclaration","scope":3187,"src":"1237:35:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":3181,"nodeType":"UserDefinedTypeName","pathNode":{"id":3180,"name":"PackedUserOperation","nameLocations":["1237:19:11"],"nodeType":"IdentifierPath","referencedDeclaration":3559,"src":"1237:19:11"},"referencedDeclaration":3559,"src":"1237:19:11","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"1227:51:11"},"returnParameters":{"id":3186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3185,"mutability":"mutable","name":"sigForUserOp","nameLocation":"1315:12:11","nodeType":"VariableDeclaration","scope":3187,"src":"1302:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3184,"name":"bytes","nodeType":"ElementaryTypeName","src":"1302:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1301:27:11"},"scope":3198,"src":"1195:134:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3188,"nodeType":"StructuredDocumentation","src":"1335:387:11","text":" Aggregate multiple signatures into a single value.\n This method is called off-chain to calculate the signature to pass with handleOps()\n bundler MAY use optimized custom code perform this aggregation.\n @param userOps              - Array of UserOperations to collect the signatures from.\n @return aggregatedSignature - The aggregated signature."},"functionSelector":"33ecca7b","id":3197,"implemented":false,"kind":"function","modifiers":[],"name":"aggregateSignatures","nameLocation":"1736:19:11","nodeType":"FunctionDefinition","parameters":{"id":3193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3192,"mutability":"mutable","name":"userOps","nameLocation":"1796:7:11","nodeType":"VariableDeclaration","scope":3197,"src":"1765:38:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$3559_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation[]"},"typeName":{"baseType":{"id":3190,"nodeType":"UserDefinedTypeName","pathNode":{"id":3189,"name":"PackedUserOperation","nameLocations":["1765:19:11"],"nodeType":"IdentifierPath","referencedDeclaration":3559,"src":"1765:19:11"},"referencedDeclaration":3559,"src":"1765:19:11","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_storage_ptr","typeString":"struct PackedUserOperation"}},"id":3191,"nodeType":"ArrayTypeName","src":"1765:21:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$3559_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"}},"visibility":"internal"}],"src":"1755:54:11"},"returnParameters":{"id":3196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3195,"mutability":"mutable","name":"aggregatedSignature","nameLocation":"1846:19:11","nodeType":"VariableDeclaration","scope":3197,"src":"1833:32:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3194,"name":"bytes","nodeType":"ElementaryTypeName","src":"1833:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1832:34:11"},"scope":3198,"src":"1727:140:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3199,"src":"143:1726:11","usedErrors":[],"usedEvents":[]}],"src":"36:1834:11"},"id":11},"contracts/interfaces/IEntryPoint.sol":{"ast":{"absolutePath":"contracts/interfaces/IEntryPoint.sol","exportedSymbols":{"IAggregator":[3198],"IEntryPoint":[3375],"INonceManager":[3394],"IStakeManager":[3535],"PackedUserOperation":[3559]},"id":3376,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3200,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"163:24:12"},{"absolutePath":"contracts/interfaces/PackedUserOperation.sol","file":"./PackedUserOperation.sol","id":3201,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3376,"sourceUnit":3560,"src":"311:35:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IStakeManager.sol","file":"./IStakeManager.sol","id":3202,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3376,"sourceUnit":3536,"src":"347:29:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IAggregator.sol","file":"./IAggregator.sol","id":3203,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3376,"sourceUnit":3199,"src":"377:27:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/INonceManager.sol","file":"./INonceManager.sol","id":3204,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3376,"sourceUnit":3395,"src":"405:29:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3205,"name":"IStakeManager","nameLocations":["461:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":3535,"src":"461:13:12"},"id":3206,"nodeType":"InheritanceSpecifier","src":"461:13:12"},{"baseName":{"id":3207,"name":"INonceManager","nameLocations":["476:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":3394,"src":"476:13:12"},"id":3208,"nodeType":"InheritanceSpecifier","src":"476:13:12"}],"canonicalName":"IEntryPoint","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3375,"linearizedBaseContracts":[3375,3394,3535],"name":"IEntryPoint","nameLocation":"446:11:12","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f","id":3224,"name":"UserOperationEvent","nameLocation":"1255:18:12","nodeType":"EventDefinition","parameters":{"id":3223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3210,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"1299:10:12","nodeType":"VariableDeclaration","scope":3224,"src":"1283:26:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3209,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1283:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3212,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1335:6:12","nodeType":"VariableDeclaration","scope":3224,"src":"1319:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3211,"name":"address","nodeType":"ElementaryTypeName","src":"1319:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3214,"indexed":true,"mutability":"mutable","name":"paymaster","nameLocation":"1367:9:12","nodeType":"VariableDeclaration","scope":3224,"src":"1351:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3213,"name":"address","nodeType":"ElementaryTypeName","src":"1351:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3216,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"1394:5:12","nodeType":"VariableDeclaration","scope":3224,"src":"1386:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3215,"name":"uint256","nodeType":"ElementaryTypeName","src":"1386:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3218,"indexed":false,"mutability":"mutable","name":"success","nameLocation":"1414:7:12","nodeType":"VariableDeclaration","scope":3224,"src":"1409:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3217,"name":"bool","nodeType":"ElementaryTypeName","src":"1409:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3220,"indexed":false,"mutability":"mutable","name":"actualGasCost","nameLocation":"1439:13:12","nodeType":"VariableDeclaration","scope":3224,"src":"1431:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3219,"name":"uint256","nodeType":"ElementaryTypeName","src":"1431:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3222,"indexed":false,"mutability":"mutable","name":"actualGasUsed","nameLocation":"1470:13:12","nodeType":"VariableDeclaration","scope":3224,"src":"1462:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3221,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1273:216:12"},"src":"1249:241:12"},{"anonymous":false,"documentation":{"id":3225,"nodeType":"StructuredDocumentation","src":"1496:349:12","text":" Account \"sender\" was deployed.\n @param userOpHash - The userOp that deployed this account. UserOperationEvent will follow.\n @param sender     - The account that is deployed\n @param factory    - The factory used to deploy this account (in the initCode)\n @param paymaster  - The paymaster used by this UserOp"},"eventSelector":"d51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d","id":3235,"name":"AccountDeployed","nameLocation":"1856:15:12","nodeType":"EventDefinition","parameters":{"id":3234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3227,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"1897:10:12","nodeType":"VariableDeclaration","scope":3235,"src":"1881:26:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3226,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1881:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3229,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1933:6:12","nodeType":"VariableDeclaration","scope":3235,"src":"1917:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3228,"name":"address","nodeType":"ElementaryTypeName","src":"1917:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3231,"indexed":false,"mutability":"mutable","name":"factory","nameLocation":"1957:7:12","nodeType":"VariableDeclaration","scope":3235,"src":"1949:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3230,"name":"address","nodeType":"ElementaryTypeName","src":"1949:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3233,"indexed":false,"mutability":"mutable","name":"paymaster","nameLocation":"1982:9:12","nodeType":"VariableDeclaration","scope":3235,"src":"1974:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3232,"name":"address","nodeType":"ElementaryTypeName","src":"1974:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1871:126:12"},"src":"1850:148:12"},{"anonymous":false,"documentation":{"id":3236,"nodeType":"StructuredDocumentation","src":"2004:361:12","text":" An event emitted if the UserOperation \"callData\" reverted with non-zero length.\n @param userOpHash   - The request unique identifier.\n @param sender       - The sender of this request.\n @param nonce        - The nonce used in the request.\n @param revertReason - The return bytes from the (reverted) call to \"callData\"."},"eventSelector":"1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a201","id":3246,"name":"UserOperationRevertReason","nameLocation":"2376:25:12","nodeType":"EventDefinition","parameters":{"id":3245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3238,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"2427:10:12","nodeType":"VariableDeclaration","scope":3246,"src":"2411:26:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3237,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2411:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3240,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"2463:6:12","nodeType":"VariableDeclaration","scope":3246,"src":"2447:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3239,"name":"address","nodeType":"ElementaryTypeName","src":"2447:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3242,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"2487:5:12","nodeType":"VariableDeclaration","scope":3246,"src":"2479:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3241,"name":"uint256","nodeType":"ElementaryTypeName","src":"2479:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3244,"indexed":false,"mutability":"mutable","name":"revertReason","nameLocation":"2508:12:12","nodeType":"VariableDeclaration","scope":3246,"src":"2502:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3243,"name":"bytes","nodeType":"ElementaryTypeName","src":"2502:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2401:125:12"},"src":"2370:157:12"},{"anonymous":false,"documentation":{"id":3247,"nodeType":"StructuredDocumentation","src":"2533:376:12","text":" An event emitted if the UserOperation Paymaster's \"postOp\" call reverted with non-zero length.\n @param userOpHash   - The request unique identifier.\n @param sender       - The sender of this request.\n @param nonce        - The nonce used in the request.\n @param revertReason - The return bytes from the (reverted) call to \"callData\"."},"eventSelector":"f62676f440ff169a3a9afdbf812e89e7f95975ee8e5c31214ffdef631c5f4792","id":3257,"name":"PostOpRevertReason","nameLocation":"2920:18:12","nodeType":"EventDefinition","parameters":{"id":3256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3249,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"2964:10:12","nodeType":"VariableDeclaration","scope":3257,"src":"2948:26:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3248,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2948:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3251,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"3000:6:12","nodeType":"VariableDeclaration","scope":3257,"src":"2984:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3250,"name":"address","nodeType":"ElementaryTypeName","src":"2984:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3253,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"3024:5:12","nodeType":"VariableDeclaration","scope":3257,"src":"3016:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3252,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3255,"indexed":false,"mutability":"mutable","name":"revertReason","nameLocation":"3045:12:12","nodeType":"VariableDeclaration","scope":3257,"src":"3039:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3254,"name":"bytes","nodeType":"ElementaryTypeName","src":"3039:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2938:125:12"},"src":"2914:150:12"},{"anonymous":false,"documentation":{"id":3258,"nodeType":"StructuredDocumentation","src":"3070:158:12","text":" An event emitted by handleOps(), before starting the execution loop.\n Any event emitted before this event, is part of the validation."},"eventSelector":"bb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972","id":3260,"name":"BeforeExecution","nameLocation":"3239:15:12","nodeType":"EventDefinition","parameters":{"id":3259,"nodeType":"ParameterList","parameters":[],"src":"3254:2:12"},"src":"3233:24:12"},{"anonymous":false,"documentation":{"id":3261,"nodeType":"StructuredDocumentation","src":"3263:187:12","text":" Signature aggregator used by the following UserOperationEvents within this bundle.\n @param aggregator - The aggregator used for the following UserOperationEvents."},"eventSelector":"575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d","id":3265,"name":"SignatureAggregatorChanged","nameLocation":"3461:26:12","nodeType":"EventDefinition","parameters":{"id":3264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3263,"indexed":true,"mutability":"mutable","name":"aggregator","nameLocation":"3504:10:12","nodeType":"VariableDeclaration","scope":3265,"src":"3488:26:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3262,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3487:28:12"},"src":"3455:61:12"},{"documentation":{"id":3266,"nodeType":"StructuredDocumentation","src":"3522:776:12","text":" A custom revert error of handleOps, to identify the offending op.\n Should be caught in off-chain handleOps simulation and not happen on-chain.\n Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\n NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\n @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\n @param reason  - Revert reason. The string starts with a unique code \"AAmn\",\n                  where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\n                  so a failure can be attributed to the correct entity."},"errorSelector":"220266b6","id":3272,"name":"FailedOp","nameLocation":"4309:8:12","nodeType":"ErrorDefinition","parameters":{"id":3271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3268,"mutability":"mutable","name":"opIndex","nameLocation":"4326:7:12","nodeType":"VariableDeclaration","scope":3272,"src":"4318:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3267,"name":"uint256","nodeType":"ElementaryTypeName","src":"4318:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3270,"mutability":"mutable","name":"reason","nameLocation":"4342:6:12","nodeType":"VariableDeclaration","scope":3272,"src":"4335:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3269,"name":"string","nodeType":"ElementaryTypeName","src":"4335:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4317:32:12"},"src":"4303:47:12"},{"documentation":{"id":3273,"nodeType":"StructuredDocumentation","src":"4356:402:12","text":" A custom revert error of handleOps, to report a revert by account or paymaster.\n @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\n @param reason  - Revert reason. see FailedOp(uint,string), above\n @param inner   - data from inner cought revert reason\n @dev note that inner is truncated to 2048 bytes"},"errorSelector":"65c8fd4d","id":3281,"name":"FailedOpWithRevert","nameLocation":"4769:18:12","nodeType":"ErrorDefinition","parameters":{"id":3280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3275,"mutability":"mutable","name":"opIndex","nameLocation":"4796:7:12","nodeType":"VariableDeclaration","scope":3281,"src":"4788:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3274,"name":"uint256","nodeType":"ElementaryTypeName","src":"4788:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3277,"mutability":"mutable","name":"reason","nameLocation":"4812:6:12","nodeType":"VariableDeclaration","scope":3281,"src":"4805:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3276,"name":"string","nodeType":"ElementaryTypeName","src":"4805:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3279,"mutability":"mutable","name":"inner","nameLocation":"4826:5:12","nodeType":"VariableDeclaration","scope":3281,"src":"4820:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3278,"name":"bytes","nodeType":"ElementaryTypeName","src":"4820:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4787:45:12"},"src":"4763:70:12"},{"errorSelector":"ad7954bc","id":3285,"name":"PostOpReverted","nameLocation":"4845:14:12","nodeType":"ErrorDefinition","parameters":{"id":3284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3283,"mutability":"mutable","name":"returnData","nameLocation":"4866:10:12","nodeType":"VariableDeclaration","scope":3285,"src":"4860:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3282,"name":"bytes","nodeType":"ElementaryTypeName","src":"4860:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4859:18:12"},"src":"4839:39:12"},{"documentation":{"id":3286,"nodeType":"StructuredDocumentation","src":"4884:190:12","text":" Error case when a signature aggregator fails to verify the aggregated signature it had created.\n @param aggregator The aggregator that failed to verify the signature"},"errorSelector":"86a9f750","id":3290,"name":"SignatureValidationFailed","nameLocation":"5085:25:12","nodeType":"ErrorDefinition","parameters":{"id":3289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3288,"mutability":"mutable","name":"aggregator","nameLocation":"5119:10:12","nodeType":"VariableDeclaration","scope":3290,"src":"5111:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3287,"name":"address","nodeType":"ElementaryTypeName","src":"5111:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5110:20:12"},"src":"5079:52:12"},{"errorSelector":"6ca7b806","id":3294,"name":"SenderAddressResult","nameLocation":"5184:19:12","nodeType":"ErrorDefinition","parameters":{"id":3293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3292,"mutability":"mutable","name":"sender","nameLocation":"5212:6:12","nodeType":"VariableDeclaration","scope":3294,"src":"5204:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3291,"name":"address","nodeType":"ElementaryTypeName","src":"5204:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5203:16:12"},"src":"5178:42:12"},{"canonicalName":"IEntryPoint.UserOpsPerAggregator","id":3304,"members":[{"constant":false,"id":3298,"mutability":"mutable","name":"userOps","nameLocation":"5326:7:12","nodeType":"VariableDeclaration","scope":3304,"src":"5304:29:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$3559_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"},"typeName":{"baseType":{"id":3296,"nodeType":"UserDefinedTypeName","pathNode":{"id":3295,"name":"PackedUserOperation","nameLocations":["5304:19:12"],"nodeType":"IdentifierPath","referencedDeclaration":3559,"src":"5304:19:12"},"referencedDeclaration":3559,"src":"5304:19:12","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_storage_ptr","typeString":"struct PackedUserOperation"}},"id":3297,"nodeType":"ArrayTypeName","src":"5304:21:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$3559_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"}},"visibility":"internal"},{"constant":false,"id":3301,"mutability":"mutable","name":"aggregator","nameLocation":"5385:10:12","nodeType":"VariableDeclaration","scope":3304,"src":"5373:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$3198","typeString":"contract IAggregator"},"typeName":{"id":3300,"nodeType":"UserDefinedTypeName","pathNode":{"id":3299,"name":"IAggregator","nameLocations":["5373:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":3198,"src":"5373:11:12"},"referencedDeclaration":3198,"src":"5373:11:12","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$3198","typeString":"contract IAggregator"}},"visibility":"internal"},{"constant":false,"id":3303,"mutability":"mutable","name":"signature","nameLocation":"5443:9:12","nodeType":"VariableDeclaration","scope":3304,"src":"5437:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3302,"name":"bytes","nodeType":"ElementaryTypeName","src":"5437:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"UserOpsPerAggregator","nameLocation":"5273:20:12","nodeType":"StructDefinition","scope":3375,"src":"5266:193:12","visibility":"public"},{"documentation":{"id":3305,"nodeType":"StructuredDocumentation","src":"5465:383:12","text":" Execute a batch of UserOperations.\n No signature aggregator is used.\n If any account requires an aggregator (that is, it returned an aggregator when\n performing simulateValidation), then handleAggregatedOps() must be used instead.\n @param ops         - The operations to execute.\n @param beneficiary - The address to receive the fees."},"functionSelector":"6b21db51","id":3314,"implemented":false,"kind":"function","modifiers":[],"name":"handleOps","nameLocation":"5862:9:12","nodeType":"FunctionDefinition","parameters":{"id":3312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3309,"mutability":"mutable","name":"ops","nameLocation":"5912:3:12","nodeType":"VariableDeclaration","scope":3314,"src":"5881:34:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$3559_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation[]"},"typeName":{"baseType":{"id":3307,"nodeType":"UserDefinedTypeName","pathNode":{"id":3306,"name":"PackedUserOperation","nameLocations":["5881:19:12"],"nodeType":"IdentifierPath","referencedDeclaration":3559,"src":"5881:19:12"},"referencedDeclaration":3559,"src":"5881:19:12","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_storage_ptr","typeString":"struct PackedUserOperation"}},"id":3308,"nodeType":"ArrayTypeName","src":"5881:21:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$3559_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"}},"visibility":"internal"},{"constant":false,"id":3311,"mutability":"mutable","name":"beneficiary","nameLocation":"5941:11:12","nodeType":"VariableDeclaration","scope":3314,"src":"5925:27:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3310,"name":"address","nodeType":"ElementaryTypeName","src":"5925:15:12","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"5871:87:12"},"returnParameters":{"id":3313,"nodeType":"ParameterList","parameters":[],"src":"5967:0:12"},"scope":3375,"src":"5853:115:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3315,"nodeType":"StructuredDocumentation","src":"5974:260:12","text":" Execute a batch of UserOperation with Aggregators\n @param opsPerAggregator - The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\n @param beneficiary      - The address to receive the fees."},"functionSelector":"ea8ad612","id":3324,"implemented":false,"kind":"function","modifiers":[],"name":"handleAggregatedOps","nameLocation":"6248:19:12","nodeType":"FunctionDefinition","parameters":{"id":3322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3319,"mutability":"mutable","name":"opsPerAggregator","nameLocation":"6309:16:12","nodeType":"VariableDeclaration","scope":3324,"src":"6277:48:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$3304_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"},"typeName":{"baseType":{"id":3317,"nodeType":"UserDefinedTypeName","pathNode":{"id":3316,"name":"UserOpsPerAggregator","nameLocations":["6277:20:12"],"nodeType":"IdentifierPath","referencedDeclaration":3304,"src":"6277:20:12"},"referencedDeclaration":3304,"src":"6277:20:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$3304_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator"}},"id":3318,"nodeType":"ArrayTypeName","src":"6277:22:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$3304_storage_$dyn_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"}},"visibility":"internal"},{"constant":false,"id":3321,"mutability":"mutable","name":"beneficiary","nameLocation":"6351:11:12","nodeType":"VariableDeclaration","scope":3324,"src":"6335:27:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3320,"name":"address","nodeType":"ElementaryTypeName","src":"6335:15:12","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"6267:101:12"},"returnParameters":{"id":3323,"nodeType":"ParameterList","parameters":[],"src":"6377:0:12"},"scope":3375,"src":"6239:139:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3325,"nodeType":"StructuredDocumentation","src":"6384:271:12","text":" Generate a request Id - unique identifier for this request.\n The request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\n @param userOp - The user operation to generate the request ID for."},"functionSelector":"02101e49","id":3333,"implemented":false,"kind":"function","modifiers":[],"name":"getUserOpHash","nameLocation":"6669:13:12","nodeType":"FunctionDefinition","parameters":{"id":3329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3328,"mutability":"mutable","name":"userOp","nameLocation":"6721:6:12","nodeType":"VariableDeclaration","scope":3333,"src":"6692:35:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":3327,"nodeType":"UserDefinedTypeName","pathNode":{"id":3326,"name":"PackedUserOperation","nameLocations":["6692:19:12"],"nodeType":"IdentifierPath","referencedDeclaration":3559,"src":"6692:19:12"},"referencedDeclaration":3559,"src":"6692:19:12","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"6682:51:12"},"returnParameters":{"id":3332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3331,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3333,"src":"6757:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3330,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6757:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6756:9:12"},"scope":3375,"src":"6660:106:12","stateMutability":"view","virtual":false,"visibility":"external"},{"canonicalName":"IEntryPoint.ReturnInfo","documentation":{"id":3334,"nodeType":"StructuredDocumentation","src":"6772:633:12","text":" Gas and return values during simulation.\n @param preOpGas         - The gas used for validation (including preValidationGas)\n @param prefund          - The required prefund for this operation\n @param sigFailed        - ValidateUserOp's (or paymaster's) signature check failed\n @param validAfter       - First timestamp this UserOp is valid (merging account and paymaster time-range)\n @param validUntil       - Last timestamp this UserOp is valid (merging account and paymaster time-range)\n @param paymasterContext - Returned by validatePaymasterUserOp (to be passed into postOp)"},"id":3347,"members":[{"constant":false,"id":3336,"mutability":"mutable","name":"preOpGas","nameLocation":"7446:8:12","nodeType":"VariableDeclaration","scope":3347,"src":"7438:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3335,"name":"uint256","nodeType":"ElementaryTypeName","src":"7438:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3338,"mutability":"mutable","name":"prefund","nameLocation":"7472:7:12","nodeType":"VariableDeclaration","scope":3347,"src":"7464:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3337,"name":"uint256","nodeType":"ElementaryTypeName","src":"7464:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3340,"mutability":"mutable","name":"sigFailed","nameLocation":"7494:9:12","nodeType":"VariableDeclaration","scope":3347,"src":"7489:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3339,"name":"bool","nodeType":"ElementaryTypeName","src":"7489:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3342,"mutability":"mutable","name":"validAfter","nameLocation":"7520:10:12","nodeType":"VariableDeclaration","scope":3347,"src":"7513:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3341,"name":"uint48","nodeType":"ElementaryTypeName","src":"7513:6:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":3344,"mutability":"mutable","name":"validUntil","nameLocation":"7547:10:12","nodeType":"VariableDeclaration","scope":3347,"src":"7540:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3343,"name":"uint48","nodeType":"ElementaryTypeName","src":"7540:6:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":3346,"mutability":"mutable","name":"paymasterContext","nameLocation":"7573:16:12","nodeType":"VariableDeclaration","scope":3347,"src":"7567:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3345,"name":"bytes","nodeType":"ElementaryTypeName","src":"7567:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"ReturnInfo","nameLocation":"7417:10:12","nodeType":"StructDefinition","scope":3375,"src":"7410:186:12","visibility":"public"},{"canonicalName":"IEntryPoint.AggregatorStakeInfo","documentation":{"id":3348,"nodeType":"StructuredDocumentation","src":"7602:124:12","text":" Returned aggregated signature info:\n The aggregator returned by the account, and its current stake."},"id":3354,"members":[{"constant":false,"id":3350,"mutability":"mutable","name":"aggregator","nameLocation":"7776:10:12","nodeType":"VariableDeclaration","scope":3354,"src":"7768:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3349,"name":"address","nodeType":"ElementaryTypeName","src":"7768:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3353,"mutability":"mutable","name":"stakeInfo","nameLocation":"7806:9:12","nodeType":"VariableDeclaration","scope":3354,"src":"7796:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3487_storage_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":3352,"nodeType":"UserDefinedTypeName","pathNode":{"id":3351,"name":"StakeInfo","nameLocations":["7796:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":3487,"src":"7796:9:12"},"referencedDeclaration":3487,"src":"7796:9:12","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$3487_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"}],"name":"AggregatorStakeInfo","nameLocation":"7738:19:12","nodeType":"StructDefinition","scope":3375,"src":"7731:91:12","visibility":"public"},{"documentation":{"id":3355,"nodeType":"StructuredDocumentation","src":"7828:338:12","text":" Get counterfactual sender address.\n Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n This method always revert, and returns the address in SenderAddressResult error\n @param initCode - The constructor code to be passed into the UserOperation."},"functionSelector":"9b249f69","id":3360,"implemented":false,"kind":"function","modifiers":[],"name":"getSenderAddress","nameLocation":"8180:16:12","nodeType":"FunctionDefinition","parameters":{"id":3358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3357,"mutability":"mutable","name":"initCode","nameLocation":"8210:8:12","nodeType":"VariableDeclaration","scope":3360,"src":"8197:21:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3356,"name":"bytes","nodeType":"ElementaryTypeName","src":"8197:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8196:23:12"},"returnParameters":{"id":3359,"nodeType":"ParameterList","parameters":[],"src":"8228:0:12"},"scope":3375,"src":"8171:58:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"errorSelector":"99410554","id":3366,"name":"DelegateAndRevert","nameLocation":"8241:17:12","nodeType":"ErrorDefinition","parameters":{"id":3365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3362,"mutability":"mutable","name":"success","nameLocation":"8264:7:12","nodeType":"VariableDeclaration","scope":3366,"src":"8259:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3361,"name":"bool","nodeType":"ElementaryTypeName","src":"8259:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3364,"mutability":"mutable","name":"ret","nameLocation":"8279:3:12","nodeType":"VariableDeclaration","scope":3366,"src":"8273:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3363,"name":"bytes","nodeType":"ElementaryTypeName","src":"8273:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8258:25:12"},"src":"8235:49:12"},{"documentation":{"id":3367,"nodeType":"StructuredDocumentation","src":"8290:354:12","text":" Helper method for dry-run testing.\n @dev calling this method, the EntryPoint will make a delegatecall to the given data, and report (via revert) the result.\n  The method always revert, so is only useful off-chain for dry run calls, in cases where state-override to replace\n  actual EntryPoint code is less convenient."},"functionSelector":"850aaf62","id":3374,"implemented":false,"kind":"function","modifiers":[],"name":"delegateAndRevert","nameLocation":"8658:17:12","nodeType":"FunctionDefinition","parameters":{"id":3372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3369,"mutability":"mutable","name":"target","nameLocation":"8684:6:12","nodeType":"VariableDeclaration","scope":3374,"src":"8676:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3368,"name":"address","nodeType":"ElementaryTypeName","src":"8676:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3371,"mutability":"mutable","name":"data","nameLocation":"8707:4:12","nodeType":"VariableDeclaration","scope":3374,"src":"8692:19:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3370,"name":"bytes","nodeType":"ElementaryTypeName","src":"8692:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8675:37:12"},"returnParameters":{"id":3373,"nodeType":"ParameterList","parameters":[],"src":"8721:0:12"},"scope":3375,"src":"8649:73:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3376,"src":"436:8288:12","usedErrors":[3272,3281,3285,3290,3294,3366],"usedEvents":[3224,3235,3246,3257,3260,3265,3440,3448,3456,3462,3470]}],"src":"163:8562:12"},"id":12},"contracts/interfaces/INonceManager.sol":{"ast":{"absolutePath":"contracts/interfaces/INonceManager.sol","exportedSymbols":{"INonceManager":[3394]},"id":3395,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3377,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"36:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"INonceManager","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3394,"linearizedBaseContracts":[3394],"name":"INonceManager","nameLocation":"72:13:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3378,"nodeType":"StructuredDocumentation","src":"93:416:13","text":" Return the next nonce for this sender.\n Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\n But UserOp with different keys can come with arbitrary order.\n @param sender the account address\n @param key the high 192 bit of the nonce\n @return nonce a full nonce to pass for next UserOp with this sender."},"functionSelector":"35567e1a","id":3387,"implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"523:8:13","nodeType":"FunctionDefinition","parameters":{"id":3383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3380,"mutability":"mutable","name":"sender","nameLocation":"540:6:13","nodeType":"VariableDeclaration","scope":3387,"src":"532:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3379,"name":"address","nodeType":"ElementaryTypeName","src":"532:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3382,"mutability":"mutable","name":"key","nameLocation":"556:3:13","nodeType":"VariableDeclaration","scope":3387,"src":"548:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":3381,"name":"uint192","nodeType":"ElementaryTypeName","src":"548:7:13","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"531:29:13"},"returnParameters":{"id":3386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3385,"mutability":"mutable","name":"nonce","nameLocation":"596:5:13","nodeType":"VariableDeclaration","scope":3387,"src":"588:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3384,"name":"uint256","nodeType":"ElementaryTypeName","src":"588:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"587:15:13"},"scope":3394,"src":"514:89:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3388,"nodeType":"StructuredDocumentation","src":"609:449:13","text":" Manually increment the nonce of the sender.\n This method is exposed just for completeness..\n Account does NOT need to call it, neither during validation, nor elsewhere,\n as the EntryPoint will update the nonce regardless.\n Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\n UserOperations will not pay extra for the first transaction with a given key."},"functionSelector":"0bd28e3b","id":3393,"implemented":false,"kind":"function","modifiers":[],"name":"incrementNonce","nameLocation":"1072:14:13","nodeType":"FunctionDefinition","parameters":{"id":3391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3390,"mutability":"mutable","name":"key","nameLocation":"1095:3:13","nodeType":"VariableDeclaration","scope":3393,"src":"1087:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":3389,"name":"uint192","nodeType":"ElementaryTypeName","src":"1087:7:13","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"1086:13:13"},"returnParameters":{"id":3392,"nodeType":"ParameterList","parameters":[],"src":"1108:0:13"},"scope":3394,"src":"1063:46:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3395,"src":"62:1049:13","usedErrors":[],"usedEvents":[]}],"src":"36:1076:13"},"id":13},"contracts/interfaces/IPaymaster.sol":{"ast":{"absolutePath":"contracts/interfaces/IPaymaster.sol","exportedSymbols":{"IPaymaster":[3431],"PackedUserOperation":[3559]},"id":3432,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3396,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"36:24:14"},{"absolutePath":"contracts/interfaces/PackedUserOperation.sol","file":"./PackedUserOperation.sol","id":3397,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3432,"sourceUnit":3560,"src":"62:35:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IPaymaster","contractDependencies":[],"contractKind":"interface","documentation":{"id":3398,"nodeType":"StructuredDocumentation","src":"99:216:14","text":" The interface exposed by a paymaster contract, who agrees to pay the gas for user's operations.\n A paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction."},"fullyImplemented":false,"id":3431,"linearizedBaseContracts":[3431],"name":"IPaymaster","nameLocation":"326:10:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IPaymaster.PostOpMode","id":3402,"members":[{"id":3399,"name":"opSucceeded","nameLocation":"399:11:14","nodeType":"EnumValue","src":"399:11:14"},{"id":3400,"name":"opReverted","nameLocation":"475:10:14","nodeType":"EnumValue","src":"475:10:14"},{"id":3401,"name":"postOpReverted","nameLocation":"643:14:14","nodeType":"EnumValue","src":"643:14:14"}],"name":"PostOpMode","nameLocation":"348:10:14","nodeType":"EnumDefinition","src":"343:320:14"},{"documentation":{"id":3403,"nodeType":"StructuredDocumentation","src":"669:1441:14","text":" Payment validation: check if paymaster agrees to pay.\n Must verify sender is the entryPoint.\n Revert to reject this request.\n Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted).\n The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\n @param userOp          - The user operation.\n @param userOpHash      - Hash of the user's request data.\n @param maxCost         - The maximum cost of this transaction (based on maximum gas and gas price from userOp).\n @return context        - Value to send to a postOp. Zero length to signify postOp is not required.\n @return validationData - Signature and time-range of this operation, encoded the same as the return\n                          value of validateUserOperation.\n                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n                                                    otherwise, an address of an \"authorizer\" contract.\n                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n                          <6-byte> validAfter - first timestamp this operation is valid\n                          Note that the validation code cannot use block.timestamp (or block.number) directly."},"functionSelector":"703ae88f","id":3417,"implemented":false,"kind":"function","modifiers":[],"name":"validatePaymasterUserOp","nameLocation":"2124:23:14","nodeType":"FunctionDefinition","parameters":{"id":3411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3406,"mutability":"mutable","name":"userOp","nameLocation":"2186:6:14","nodeType":"VariableDeclaration","scope":3417,"src":"2157:35:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":3405,"nodeType":"UserDefinedTypeName","pathNode":{"id":3404,"name":"PackedUserOperation","nameLocations":["2157:19:14"],"nodeType":"IdentifierPath","referencedDeclaration":3559,"src":"2157:19:14"},"referencedDeclaration":3559,"src":"2157:19:14","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$3559_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":3408,"mutability":"mutable","name":"userOpHash","nameLocation":"2210:10:14","nodeType":"VariableDeclaration","scope":3417,"src":"2202:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3407,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2202:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3410,"mutability":"mutable","name":"maxCost","nameLocation":"2238:7:14","nodeType":"VariableDeclaration","scope":3417,"src":"2230:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3409,"name":"uint256","nodeType":"ElementaryTypeName","src":"2230:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2147:104:14"},"returnParameters":{"id":3416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3413,"mutability":"mutable","name":"context","nameLocation":"2283:7:14","nodeType":"VariableDeclaration","scope":3417,"src":"2270:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3412,"name":"bytes","nodeType":"ElementaryTypeName","src":"2270:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3415,"mutability":"mutable","name":"validationData","nameLocation":"2300:14:14","nodeType":"VariableDeclaration","scope":3417,"src":"2292:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3414,"name":"uint256","nodeType":"ElementaryTypeName","src":"2292:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2269:46:14"},"scope":3431,"src":"2115:201:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3418,"nodeType":"StructuredDocumentation","src":"2322:985:14","text":" Post-operation handler.\n Must verify sender is the entryPoint.\n @param mode          - Enum with the following options:\n                        opSucceeded - User operation succeeded.\n                        opReverted  - User op reverted. still has to pay for gas.\n                        postOpReverted - User op succeeded, but caused postOp (in mode=opSucceeded) to revert.\n                                         Now this is the 2nd call, after user's op was deliberately reverted.\n @param context       - The context value returned by validatePaymasterUserOp\n @param actualGasCost - Actual gas used so far (without this postOp call).\n @param actualUserOpFeePerGas - the gas price this UserOp pays. This value is based on the UserOp's maxFeePerGas\n                        and maxPriorityFee (and basefee)\n                        It is not the same as tx.gasprice, which is what the bundler pays."},"functionSelector":"7c627b21","id":3430,"implemented":false,"kind":"function","modifiers":[],"name":"postOp","nameLocation":"3321:6:14","nodeType":"FunctionDefinition","parameters":{"id":3428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3421,"mutability":"mutable","name":"mode","nameLocation":"3348:4:14","nodeType":"VariableDeclaration","scope":3430,"src":"3337:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3402","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":3420,"nodeType":"UserDefinedTypeName","pathNode":{"id":3419,"name":"PostOpMode","nameLocations":["3337:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":3402,"src":"3337:10:14"},"referencedDeclaration":3402,"src":"3337:10:14","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$3402","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":3423,"mutability":"mutable","name":"context","nameLocation":"3377:7:14","nodeType":"VariableDeclaration","scope":3430,"src":"3362:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3422,"name":"bytes","nodeType":"ElementaryTypeName","src":"3362:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3425,"mutability":"mutable","name":"actualGasCost","nameLocation":"3402:13:14","nodeType":"VariableDeclaration","scope":3430,"src":"3394:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3424,"name":"uint256","nodeType":"ElementaryTypeName","src":"3394:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3427,"mutability":"mutable","name":"actualUserOpFeePerGas","nameLocation":"3433:21:14","nodeType":"VariableDeclaration","scope":3430,"src":"3425:29:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3426,"name":"uint256","nodeType":"ElementaryTypeName","src":"3425:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3327:133:14"},"returnParameters":{"id":3429,"nodeType":"ParameterList","parameters":[],"src":"3469:0:14"},"scope":3431,"src":"3312:158:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3432,"src":"316:3156:14","usedErrors":[],"usedEvents":[]}],"src":"36:3437:14"},"id":14},"contracts/interfaces/IStakeManager.sol":{"ast":{"absolutePath":"contracts/interfaces/IStakeManager.sol","exportedSymbols":{"IStakeManager":[3535]},"id":3536,"license":"GPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":3433,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"41:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"IStakeManager","contractDependencies":[],"contractKind":"interface","documentation":{"id":3434,"nodeType":"StructuredDocumentation","src":"67:212:15","text":" Manage deposits and stakes.\n Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account).\n Stake is value locked for at least \"unstakeDelay\" by the staked entity."},"fullyImplemented":false,"id":3535,"linearizedBaseContracts":[3535],"name":"IStakeManager","nameLocation":"290:13:15","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4","id":3440,"name":"Deposited","nameLocation":"316:9:15","nodeType":"EventDefinition","parameters":{"id":3439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3436,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"342:7:15","nodeType":"VariableDeclaration","scope":3440,"src":"326:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3435,"name":"address","nodeType":"ElementaryTypeName","src":"326:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3438,"indexed":false,"mutability":"mutable","name":"totalDeposit","nameLocation":"359:12:15","nodeType":"VariableDeclaration","scope":3440,"src":"351:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3437,"name":"uint256","nodeType":"ElementaryTypeName","src":"351:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"325:47:15"},"src":"310:63:15"},{"anonymous":false,"eventSelector":"d1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb","id":3448,"name":"Withdrawn","nameLocation":"385:9:15","nodeType":"EventDefinition","parameters":{"id":3447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3442,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"420:7:15","nodeType":"VariableDeclaration","scope":3448,"src":"404:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3441,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3444,"indexed":false,"mutability":"mutable","name":"withdrawAddress","nameLocation":"445:15:15","nodeType":"VariableDeclaration","scope":3448,"src":"437:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3443,"name":"address","nodeType":"ElementaryTypeName","src":"437:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3446,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"478:6:15","nodeType":"VariableDeclaration","scope":3448,"src":"470:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3445,"name":"uint256","nodeType":"ElementaryTypeName","src":"470:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"394:96:15"},"src":"379:112:15"},{"anonymous":false,"eventSelector":"a5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01","id":3456,"name":"StakeLocked","nameLocation":"560:11:15","nodeType":"EventDefinition","parameters":{"id":3455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3450,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"597:7:15","nodeType":"VariableDeclaration","scope":3456,"src":"581:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3449,"name":"address","nodeType":"ElementaryTypeName","src":"581:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3452,"indexed":false,"mutability":"mutable","name":"totalStaked","nameLocation":"622:11:15","nodeType":"VariableDeclaration","scope":3456,"src":"614:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3451,"name":"uint256","nodeType":"ElementaryTypeName","src":"614:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3454,"indexed":false,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"651:15:15","nodeType":"VariableDeclaration","scope":3456,"src":"643:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3453,"name":"uint256","nodeType":"ElementaryTypeName","src":"643:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"571:101:15"},"src":"554:119:15"},{"anonymous":false,"eventSelector":"fa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a","id":3462,"name":"StakeUnlocked","nameLocation":"742:13:15","nodeType":"EventDefinition","parameters":{"id":3461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3458,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"772:7:15","nodeType":"VariableDeclaration","scope":3462,"src":"756:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3457,"name":"address","nodeType":"ElementaryTypeName","src":"756:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3460,"indexed":false,"mutability":"mutable","name":"withdrawTime","nameLocation":"789:12:15","nodeType":"VariableDeclaration","scope":3462,"src":"781:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3459,"name":"uint256","nodeType":"ElementaryTypeName","src":"781:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"755:47:15"},"src":"736:67:15"},{"anonymous":false,"eventSelector":"b7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3","id":3470,"name":"StakeWithdrawn","nameLocation":"815:14:15","nodeType":"EventDefinition","parameters":{"id":3469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3464,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"855:7:15","nodeType":"VariableDeclaration","scope":3470,"src":"839:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3463,"name":"address","nodeType":"ElementaryTypeName","src":"839:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3466,"indexed":false,"mutability":"mutable","name":"withdrawAddress","nameLocation":"880:15:15","nodeType":"VariableDeclaration","scope":3470,"src":"872:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3465,"name":"address","nodeType":"ElementaryTypeName","src":"872:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3468,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"913:6:15","nodeType":"VariableDeclaration","scope":3470,"src":"905:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3467,"name":"uint256","nodeType":"ElementaryTypeName","src":"905:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"829:96:15"},"src":"809:117:15"},{"canonicalName":"IStakeManager.DepositInfo","documentation":{"id":3471,"nodeType":"StructuredDocumentation","src":"932:686:15","text":" @param deposit         - The entity's deposit.\n @param staked          - True if this entity is staked.\n @param stake           - Actual amount of ether staked for this entity.\n @param unstakeDelaySec - Minimum delay to withdraw the stake.\n @param withdrawTime    - First block timestamp where 'withdrawStake' will be callable, or zero if already locked.\n @dev Sizes were chosen so that (deposit,staked, stake) fit into one cell (used during handleOps)\n      and the rest fit into a 2nd cell.\n      - 112 bit allows for 10^15 eth\n      - 48 bit for full timestamp\n      - 32 bit allows 150 years for unstake delay"},"id":3482,"members":[{"constant":false,"id":3473,"mutability":"mutable","name":"deposit","nameLocation":"1660:7:15","nodeType":"VariableDeclaration","scope":3482,"src":"1652:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3472,"name":"uint256","nodeType":"ElementaryTypeName","src":"1652:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3475,"mutability":"mutable","name":"staked","nameLocation":"1682:6:15","nodeType":"VariableDeclaration","scope":3482,"src":"1677:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3474,"name":"bool","nodeType":"ElementaryTypeName","src":"1677:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3477,"mutability":"mutable","name":"stake","nameLocation":"1706:5:15","nodeType":"VariableDeclaration","scope":3482,"src":"1698:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3476,"name":"uint112","nodeType":"ElementaryTypeName","src":"1698:7:15","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":3479,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"1728:15:15","nodeType":"VariableDeclaration","scope":3482,"src":"1721:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3478,"name":"uint32","nodeType":"ElementaryTypeName","src":"1721:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3481,"mutability":"mutable","name":"withdrawTime","nameLocation":"1760:12:15","nodeType":"VariableDeclaration","scope":3482,"src":"1753:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3480,"name":"uint48","nodeType":"ElementaryTypeName","src":"1753:6:15","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"DepositInfo","nameLocation":"1630:11:15","nodeType":"StructDefinition","scope":3535,"src":"1623:156:15","visibility":"public"},{"canonicalName":"IStakeManager.StakeInfo","id":3487,"members":[{"constant":false,"id":3484,"mutability":"mutable","name":"stake","nameLocation":"1883:5:15","nodeType":"VariableDeclaration","scope":3487,"src":"1875:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3483,"name":"uint256","nodeType":"ElementaryTypeName","src":"1875:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3486,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"1906:15:15","nodeType":"VariableDeclaration","scope":3487,"src":"1898:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3485,"name":"uint256","nodeType":"ElementaryTypeName","src":"1898:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"StakeInfo","nameLocation":"1855:9:15","nodeType":"StructDefinition","scope":3535,"src":"1848:80:15","visibility":"public"},{"documentation":{"id":3488,"nodeType":"StructuredDocumentation","src":"1934:149:15","text":" Get deposit info.\n @param account - The account to query.\n @return info   - Full deposit information of given account."},"functionSelector":"5287ce12","id":3496,"implemented":false,"kind":"function","modifiers":[],"name":"getDepositInfo","nameLocation":"2097:14:15","nodeType":"FunctionDefinition","parameters":{"id":3491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3490,"mutability":"mutable","name":"account","nameLocation":"2129:7:15","nodeType":"VariableDeclaration","scope":3496,"src":"2121:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3489,"name":"address","nodeType":"ElementaryTypeName","src":"2121:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2111:31:15"},"returnParameters":{"id":3495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3494,"mutability":"mutable","name":"info","nameLocation":"2185:4:15","nodeType":"VariableDeclaration","scope":3496,"src":"2166:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_memory_ptr","typeString":"struct IStakeManager.DepositInfo"},"typeName":{"id":3493,"nodeType":"UserDefinedTypeName","pathNode":{"id":3492,"name":"DepositInfo","nameLocations":["2166:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":3482,"src":"2166:11:15"},"referencedDeclaration":3482,"src":"2166:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$3482_storage_ptr","typeString":"struct IStakeManager.DepositInfo"}},"visibility":"internal"}],"src":"2165:25:15"},"scope":3535,"src":"2088:103:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3497,"nodeType":"StructuredDocumentation","src":"2197:155:15","text":" Get account balance.\n @param account - The account to query.\n @return        - The deposit (for gas payment) of the account."},"functionSelector":"70a08231","id":3504,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2366:9:15","nodeType":"FunctionDefinition","parameters":{"id":3500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3499,"mutability":"mutable","name":"account","nameLocation":"2384:7:15","nodeType":"VariableDeclaration","scope":3504,"src":"2376:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3498,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2375:17:15"},"returnParameters":{"id":3503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3502,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3504,"src":"2416:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3501,"name":"uint256","nodeType":"ElementaryTypeName","src":"2416:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2415:9:15"},"scope":3535,"src":"2357:68:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3505,"nodeType":"StructuredDocumentation","src":"2431:106:15","text":" Add to the deposit of the given account.\n @param account - The account to add to."},"functionSelector":"b760faf9","id":3510,"implemented":false,"kind":"function","modifiers":[],"name":"depositTo","nameLocation":"2551:9:15","nodeType":"FunctionDefinition","parameters":{"id":3508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3507,"mutability":"mutable","name":"account","nameLocation":"2569:7:15","nodeType":"VariableDeclaration","scope":3510,"src":"2561:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3506,"name":"address","nodeType":"ElementaryTypeName","src":"2561:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2560:17:15"},"returnParameters":{"id":3509,"nodeType":"ParameterList","parameters":[],"src":"2594:0:15"},"scope":3535,"src":"2542:53:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":3511,"nodeType":"StructuredDocumentation","src":"2601:203:15","text":" Add to the account's stake - amount and delay\n any pending unstake is first cancelled.\n @param _unstakeDelaySec - The new lock duration before the deposit can be withdrawn."},"functionSelector":"0396cb60","id":3516,"implemented":false,"kind":"function","modifiers":[],"name":"addStake","nameLocation":"2818:8:15","nodeType":"FunctionDefinition","parameters":{"id":3514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3513,"mutability":"mutable","name":"_unstakeDelaySec","nameLocation":"2834:16:15","nodeType":"VariableDeclaration","scope":3516,"src":"2827:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3512,"name":"uint32","nodeType":"ElementaryTypeName","src":"2827:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2826:25:15"},"returnParameters":{"id":3515,"nodeType":"ParameterList","parameters":[],"src":"2868:0:15"},"scope":3535,"src":"2809:60:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":3517,"nodeType":"StructuredDocumentation","src":"2875:128:15","text":" Attempt to unlock the stake.\n The value can be withdrawn (using withdrawStake) after the unstake delay."},"functionSelector":"bb9fe6bf","id":3520,"implemented":false,"kind":"function","modifiers":[],"name":"unlockStake","nameLocation":"3017:11:15","nodeType":"FunctionDefinition","parameters":{"id":3518,"nodeType":"ParameterList","parameters":[],"src":"3028:2:15"},"returnParameters":{"id":3519,"nodeType":"ParameterList","parameters":[],"src":"3039:0:15"},"scope":3535,"src":"3008:32:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3521,"nodeType":"StructuredDocumentation","src":"3046:197:15","text":" Withdraw from the (unlocked) stake.\n Must first call unlockStake and wait for the unstakeDelay to pass.\n @param withdrawAddress - The address to send withdrawn value."},"functionSelector":"c23a5cea","id":3526,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawStake","nameLocation":"3257:13:15","nodeType":"FunctionDefinition","parameters":{"id":3524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3523,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3287:15:15","nodeType":"VariableDeclaration","scope":3526,"src":"3271:31:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3522,"name":"address","nodeType":"ElementaryTypeName","src":"3271:15:15","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"3270:33:15"},"returnParameters":{"id":3525,"nodeType":"ParameterList","parameters":[],"src":"3312:0:15"},"scope":3535,"src":"3248:65:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3527,"nodeType":"StructuredDocumentation","src":"3319:170:15","text":" Withdraw from the deposit.\n @param withdrawAddress - The address to send withdrawn value.\n @param withdrawAmount  - The amount to withdraw."},"functionSelector":"205c2878","id":3534,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawTo","nameLocation":"3503:10:15","nodeType":"FunctionDefinition","parameters":{"id":3532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3529,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3539:15:15","nodeType":"VariableDeclaration","scope":3534,"src":"3523:31:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3528,"name":"address","nodeType":"ElementaryTypeName","src":"3523:15:15","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3531,"mutability":"mutable","name":"withdrawAmount","nameLocation":"3572:14:15","nodeType":"VariableDeclaration","scope":3534,"src":"3564:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3530,"name":"uint256","nodeType":"ElementaryTypeName","src":"3564:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3513:79:15"},"returnParameters":{"id":3533,"nodeType":"ParameterList","parameters":[],"src":"3601:0:15"},"scope":3535,"src":"3494:108:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3536,"src":"280:3324:15","usedErrors":[],"usedEvents":[3440,3448,3456,3462,3470]}],"src":"41:3564:15"},"id":15},"contracts/interfaces/PackedUserOperation.sol":{"ast":{"absolutePath":"contracts/interfaces/PackedUserOperation.sol","exportedSymbols":{"PackedUserOperation":[3559]},"id":3560,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3537,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"36:24:16"},{"canonicalName":"PackedUserOperation","documentation":{"id":3538,"nodeType":"StructuredDocumentation","src":"62:1171:16","text":" User Operation struct\n @param sender                - The sender account of this request.\n @param nonce                 - Unique value the sender uses to verify it is not a replay.\n @param initCode              - If set, the account contract will be created by this constructor/\n @param callData              - The method call to execute on this account.\n @param accountGasLimits      - Packed gas limits for validateUserOp and gas limit passed to the callData method call.\n @param preVerificationGas    - Gas not calculated by the handleOps method, but added to the gas paid.\n                                Covers batch overhead.\n @param maxFeePerGas          - Same as EIP-1559 gas parameter.\n @param maxPriorityFeePerGas  - Same as EIP-1559 gas parameter.\n @param paymasterAndData      - If set, this field holds the paymaster address, verification gas limit, postOp gas limit and paymaster-specific extra data\n                                The paymaster will pay for the transaction instead of the sender.\n @param signature             - Sender-verified signature over the entire request, the EntryPoint address and the chain ID."},"id":3559,"members":[{"constant":false,"id":3540,"mutability":"mutable","name":"sender","nameLocation":"1275:6:16","nodeType":"VariableDeclaration","scope":3559,"src":"1267:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3539,"name":"address","nodeType":"ElementaryTypeName","src":"1267:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3542,"mutability":"mutable","name":"nonce","nameLocation":"1295:5:16","nodeType":"VariableDeclaration","scope":3559,"src":"1287:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3541,"name":"uint256","nodeType":"ElementaryTypeName","src":"1287:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3544,"mutability":"mutable","name":"initCode","nameLocation":"1312:8:16","nodeType":"VariableDeclaration","scope":3559,"src":"1306:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3543,"name":"bytes","nodeType":"ElementaryTypeName","src":"1306:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3546,"mutability":"mutable","name":"callData","nameLocation":"1332:8:16","nodeType":"VariableDeclaration","scope":3559,"src":"1326:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3545,"name":"bytes","nodeType":"ElementaryTypeName","src":"1326:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3548,"mutability":"mutable","name":"accountGasLimits","nameLocation":"1354:16:16","nodeType":"VariableDeclaration","scope":3559,"src":"1346:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3547,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1346:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3550,"mutability":"mutable","name":"preVerificationGas","nameLocation":"1384:18:16","nodeType":"VariableDeclaration","scope":3559,"src":"1376:26:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3549,"name":"uint256","nodeType":"ElementaryTypeName","src":"1376:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3552,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"1416:12:16","nodeType":"VariableDeclaration","scope":3559,"src":"1408:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3551,"name":"uint256","nodeType":"ElementaryTypeName","src":"1408:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3554,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"1442:20:16","nodeType":"VariableDeclaration","scope":3559,"src":"1434:28:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3553,"name":"uint256","nodeType":"ElementaryTypeName","src":"1434:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3556,"mutability":"mutable","name":"paymasterAndData","nameLocation":"1474:16:16","nodeType":"VariableDeclaration","scope":3559,"src":"1468:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3555,"name":"bytes","nodeType":"ElementaryTypeName","src":"1468:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3558,"mutability":"mutable","name":"signature","nameLocation":"1502:9:16","nodeType":"VariableDeclaration","scope":3559,"src":"1496:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3557,"name":"bytes","nodeType":"ElementaryTypeName","src":"1496:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"PackedUserOperation","nameLocation":"1241:19:16","nodeType":"StructDefinition","scope":3560,"src":"1234:280:16","visibility":"public"}],"src":"36:1479:16"},"id":16},"contracts/utils/Exec.sol":{"ast":{"absolutePath":"contracts/utils/Exec.sol","exportedSymbols":{"Exec":[3650]},"id":3651,"license":"LGPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":3561,"literals":["solidity",">=","0.7",".5","<","0.9",".0"],"nodeType":"PragmaDirective","src":"42:31:17"},{"abstract":false,"baseContracts":[],"canonicalName":"Exec","contractDependencies":[],"contractKind":"library","documentation":{"id":3562,"nodeType":"StructuredDocumentation","src":"114:95:17","text":" Utility functions helpful when making different kinds of contract calls in Solidity."},"fullyImplemented":true,"id":3650,"linearizedBaseContracts":[3650],"name":"Exec","nameLocation":"218:4:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":3576,"nodeType":"Block","src":"375:134:17","statements":[{"AST":{"nativeSrc":"410:93:17","nodeType":"YulBlock","src":"410:93:17","statements":[{"nativeSrc":"424:69:17","nodeType":"YulAssignment","src":"424:69:17","value":{"arguments":[{"name":"txGas","nativeSrc":"440:5:17","nodeType":"YulIdentifier","src":"440:5:17"},{"name":"to","nativeSrc":"447:2:17","nodeType":"YulIdentifier","src":"447:2:17"},{"name":"value","nativeSrc":"451:5:17","nodeType":"YulIdentifier","src":"451:5:17"},{"arguments":[{"name":"data","nativeSrc":"462:4:17","nodeType":"YulIdentifier","src":"462:4:17"},{"kind":"number","nativeSrc":"468:4:17","nodeType":"YulLiteral","src":"468:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"458:3:17","nodeType":"YulIdentifier","src":"458:3:17"},"nativeSrc":"458:15:17","nodeType":"YulFunctionCall","src":"458:15:17"},{"arguments":[{"name":"data","nativeSrc":"481:4:17","nodeType":"YulIdentifier","src":"481:4:17"}],"functionName":{"name":"mload","nativeSrc":"475:5:17","nodeType":"YulIdentifier","src":"475:5:17"},"nativeSrc":"475:11:17","nodeType":"YulFunctionCall","src":"475:11:17"},{"kind":"number","nativeSrc":"488:1:17","nodeType":"YulLiteral","src":"488:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"491:1:17","nodeType":"YulLiteral","src":"491:1:17","type":"","value":"0"}],"functionName":{"name":"call","nativeSrc":"435:4:17","nodeType":"YulIdentifier","src":"435:4:17"},"nativeSrc":"435:58:17","nodeType":"YulFunctionCall","src":"435:58:17"},"variableNames":[{"name":"success","nativeSrc":"424:7:17","nodeType":"YulIdentifier","src":"424:7:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3568,"isOffset":false,"isSlot":false,"src":"462:4:17","valueSize":1},{"declaration":3568,"isOffset":false,"isSlot":false,"src":"481:4:17","valueSize":1},{"declaration":3573,"isOffset":false,"isSlot":false,"src":"424:7:17","valueSize":1},{"declaration":3564,"isOffset":false,"isSlot":false,"src":"447:2:17","valueSize":1},{"declaration":3570,"isOffset":false,"isSlot":false,"src":"440:5:17","valueSize":1},{"declaration":3566,"isOffset":false,"isSlot":false,"src":"451:5:17","valueSize":1}],"flags":["memory-safe"],"id":3575,"nodeType":"InlineAssembly","src":"385:118:17"}]},"id":3577,"implemented":true,"kind":"function","modifiers":[],"name":"call","nameLocation":"239:4:17","nodeType":"FunctionDefinition","parameters":{"id":3571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3564,"mutability":"mutable","name":"to","nameLocation":"261:2:17","nodeType":"VariableDeclaration","scope":3577,"src":"253:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3563,"name":"address","nodeType":"ElementaryTypeName","src":"253:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3566,"mutability":"mutable","name":"value","nameLocation":"281:5:17","nodeType":"VariableDeclaration","scope":3577,"src":"273:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3565,"name":"uint256","nodeType":"ElementaryTypeName","src":"273:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3568,"mutability":"mutable","name":"data","nameLocation":"309:4:17","nodeType":"VariableDeclaration","scope":3577,"src":"296:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3567,"name":"bytes","nodeType":"ElementaryTypeName","src":"296:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3570,"mutability":"mutable","name":"txGas","nameLocation":"331:5:17","nodeType":"VariableDeclaration","scope":3577,"src":"323:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3569,"name":"uint256","nodeType":"ElementaryTypeName","src":"323:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"243:99:17"},"returnParameters":{"id":3574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3573,"mutability":"mutable","name":"success","nameLocation":"366:7:17","nodeType":"VariableDeclaration","scope":3577,"src":"361:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3572,"name":"bool","nodeType":"ElementaryTypeName","src":"361:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"360:14:17"},"scope":3650,"src":"230:279:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3589,"nodeType":"Block","src":"648:133:17","statements":[{"AST":{"nativeSrc":"683:92:17","nodeType":"YulBlock","src":"683:92:17","statements":[{"nativeSrc":"697:68:17","nodeType":"YulAssignment","src":"697:68:17","value":{"arguments":[{"name":"txGas","nativeSrc":"719:5:17","nodeType":"YulIdentifier","src":"719:5:17"},{"name":"to","nativeSrc":"726:2:17","nodeType":"YulIdentifier","src":"726:2:17"},{"arguments":[{"name":"data","nativeSrc":"734:4:17","nodeType":"YulIdentifier","src":"734:4:17"},{"kind":"number","nativeSrc":"740:4:17","nodeType":"YulLiteral","src":"740:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"730:3:17","nodeType":"YulIdentifier","src":"730:3:17"},"nativeSrc":"730:15:17","nodeType":"YulFunctionCall","src":"730:15:17"},{"arguments":[{"name":"data","nativeSrc":"753:4:17","nodeType":"YulIdentifier","src":"753:4:17"}],"functionName":{"name":"mload","nativeSrc":"747:5:17","nodeType":"YulIdentifier","src":"747:5:17"},"nativeSrc":"747:11:17","nodeType":"YulFunctionCall","src":"747:11:17"},{"kind":"number","nativeSrc":"760:1:17","nodeType":"YulLiteral","src":"760:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"763:1:17","nodeType":"YulLiteral","src":"763:1:17","type":"","value":"0"}],"functionName":{"name":"staticcall","nativeSrc":"708:10:17","nodeType":"YulIdentifier","src":"708:10:17"},"nativeSrc":"708:57:17","nodeType":"YulFunctionCall","src":"708:57:17"},"variableNames":[{"name":"success","nativeSrc":"697:7:17","nodeType":"YulIdentifier","src":"697:7:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3581,"isOffset":false,"isSlot":false,"src":"734:4:17","valueSize":1},{"declaration":3581,"isOffset":false,"isSlot":false,"src":"753:4:17","valueSize":1},{"declaration":3586,"isOffset":false,"isSlot":false,"src":"697:7:17","valueSize":1},{"declaration":3579,"isOffset":false,"isSlot":false,"src":"726:2:17","valueSize":1},{"declaration":3583,"isOffset":false,"isSlot":false,"src":"719:5:17","valueSize":1}],"flags":["memory-safe"],"id":3588,"nodeType":"InlineAssembly","src":"658:117:17"}]},"id":3590,"implemented":true,"kind":"function","modifiers":[],"name":"staticcall","nameLocation":"524:10:17","nodeType":"FunctionDefinition","parameters":{"id":3584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3579,"mutability":"mutable","name":"to","nameLocation":"552:2:17","nodeType":"VariableDeclaration","scope":3590,"src":"544:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3578,"name":"address","nodeType":"ElementaryTypeName","src":"544:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3581,"mutability":"mutable","name":"data","nameLocation":"577:4:17","nodeType":"VariableDeclaration","scope":3590,"src":"564:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3580,"name":"bytes","nodeType":"ElementaryTypeName","src":"564:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3583,"mutability":"mutable","name":"txGas","nameLocation":"599:5:17","nodeType":"VariableDeclaration","scope":3590,"src":"591:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3582,"name":"uint256","nodeType":"ElementaryTypeName","src":"591:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"534:76:17"},"returnParameters":{"id":3587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3586,"mutability":"mutable","name":"success","nameLocation":"639:7:17","nodeType":"VariableDeclaration","scope":3590,"src":"634:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3585,"name":"bool","nodeType":"ElementaryTypeName","src":"634:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"633:14:17"},"scope":3650,"src":"515:266:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3602,"nodeType":"Block","src":"917:135:17","statements":[{"AST":{"nativeSrc":"952:94:17","nodeType":"YulBlock","src":"952:94:17","statements":[{"nativeSrc":"966:70:17","nodeType":"YulAssignment","src":"966:70:17","value":{"arguments":[{"name":"txGas","nativeSrc":"990:5:17","nodeType":"YulIdentifier","src":"990:5:17"},{"name":"to","nativeSrc":"997:2:17","nodeType":"YulIdentifier","src":"997:2:17"},{"arguments":[{"name":"data","nativeSrc":"1005:4:17","nodeType":"YulIdentifier","src":"1005:4:17"},{"kind":"number","nativeSrc":"1011:4:17","nodeType":"YulLiteral","src":"1011:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1001:3:17","nodeType":"YulIdentifier","src":"1001:3:17"},"nativeSrc":"1001:15:17","nodeType":"YulFunctionCall","src":"1001:15:17"},{"arguments":[{"name":"data","nativeSrc":"1024:4:17","nodeType":"YulIdentifier","src":"1024:4:17"}],"functionName":{"name":"mload","nativeSrc":"1018:5:17","nodeType":"YulIdentifier","src":"1018:5:17"},"nativeSrc":"1018:11:17","nodeType":"YulFunctionCall","src":"1018:11:17"},{"kind":"number","nativeSrc":"1031:1:17","nodeType":"YulLiteral","src":"1031:1:17","type":"","value":"0"},{"kind":"number","nativeSrc":"1034:1:17","nodeType":"YulLiteral","src":"1034:1:17","type":"","value":"0"}],"functionName":{"name":"delegatecall","nativeSrc":"977:12:17","nodeType":"YulIdentifier","src":"977:12:17"},"nativeSrc":"977:59:17","nodeType":"YulFunctionCall","src":"977:59:17"},"variableNames":[{"name":"success","nativeSrc":"966:7:17","nodeType":"YulIdentifier","src":"966:7:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3594,"isOffset":false,"isSlot":false,"src":"1005:4:17","valueSize":1},{"declaration":3594,"isOffset":false,"isSlot":false,"src":"1024:4:17","valueSize":1},{"declaration":3599,"isOffset":false,"isSlot":false,"src":"966:7:17","valueSize":1},{"declaration":3592,"isOffset":false,"isSlot":false,"src":"997:2:17","valueSize":1},{"declaration":3596,"isOffset":false,"isSlot":false,"src":"990:5:17","valueSize":1}],"flags":["memory-safe"],"id":3601,"nodeType":"InlineAssembly","src":"927:119:17"}]},"id":3603,"implemented":true,"kind":"function","modifiers":[],"name":"delegateCall","nameLocation":"796:12:17","nodeType":"FunctionDefinition","parameters":{"id":3597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3592,"mutability":"mutable","name":"to","nameLocation":"826:2:17","nodeType":"VariableDeclaration","scope":3603,"src":"818:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3591,"name":"address","nodeType":"ElementaryTypeName","src":"818:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3594,"mutability":"mutable","name":"data","nameLocation":"851:4:17","nodeType":"VariableDeclaration","scope":3603,"src":"838:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3593,"name":"bytes","nodeType":"ElementaryTypeName","src":"838:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3596,"mutability":"mutable","name":"txGas","nameLocation":"873:5:17","nodeType":"VariableDeclaration","scope":3603,"src":"865:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3595,"name":"uint256","nodeType":"ElementaryTypeName","src":"865:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"808:76:17"},"returnParameters":{"id":3600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3599,"mutability":"mutable","name":"success","nameLocation":"908:7:17","nodeType":"VariableDeclaration","scope":3603,"src":"903:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3598,"name":"bool","nodeType":"ElementaryTypeName","src":"903:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"902:14:17"},"scope":3650,"src":"787:265:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3611,"nodeType":"Block","src":"1201:365:17","statements":[{"AST":{"nativeSrc":"1236:324:17","nodeType":"YulBlock","src":"1236:324:17","statements":[{"nativeSrc":"1250:27:17","nodeType":"YulVariableDeclaration","src":"1250:27:17","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1261:14:17","nodeType":"YulIdentifier","src":"1261:14:17"},"nativeSrc":"1261:16:17","nodeType":"YulFunctionCall","src":"1261:16:17"},"variables":[{"name":"len","nativeSrc":"1254:3:17","nodeType":"YulTypedName","src":"1254:3:17","type":""}]},{"body":{"nativeSrc":"1309:45:17","nodeType":"YulBlock","src":"1309:45:17","statements":[{"nativeSrc":"1327:13:17","nodeType":"YulAssignment","src":"1327:13:17","value":{"name":"maxLen","nativeSrc":"1334:6:17","nodeType":"YulIdentifier","src":"1334:6:17"},"variableNames":[{"name":"len","nativeSrc":"1327:3:17","nodeType":"YulIdentifier","src":"1327:3:17"}]}]},"condition":{"arguments":[{"name":"len","nativeSrc":"1296:3:17","nodeType":"YulIdentifier","src":"1296:3:17"},{"name":"maxLen","nativeSrc":"1301:6:17","nodeType":"YulIdentifier","src":"1301:6:17"}],"functionName":{"name":"gt","nativeSrc":"1293:2:17","nodeType":"YulIdentifier","src":"1293:2:17"},"nativeSrc":"1293:15:17","nodeType":"YulFunctionCall","src":"1293:15:17"},"nativeSrc":"1290:64:17","nodeType":"YulIf","src":"1290:64:17"},{"nativeSrc":"1367:22:17","nodeType":"YulVariableDeclaration","src":"1367:22:17","value":{"arguments":[{"kind":"number","nativeSrc":"1384:4:17","nodeType":"YulLiteral","src":"1384:4:17","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"1378:5:17","nodeType":"YulIdentifier","src":"1378:5:17"},"nativeSrc":"1378:11:17","nodeType":"YulFunctionCall","src":"1378:11:17"},"variables":[{"name":"ptr","nativeSrc":"1371:3:17","nodeType":"YulTypedName","src":"1371:3:17","type":""}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1409:4:17","nodeType":"YulLiteral","src":"1409:4:17","type":"","value":"0x40"},{"arguments":[{"name":"ptr","nativeSrc":"1419:3:17","nodeType":"YulIdentifier","src":"1419:3:17"},{"arguments":[{"name":"len","nativeSrc":"1428:3:17","nodeType":"YulIdentifier","src":"1428:3:17"},{"kind":"number","nativeSrc":"1433:4:17","nodeType":"YulLiteral","src":"1433:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1424:3:17","nodeType":"YulIdentifier","src":"1424:3:17"},"nativeSrc":"1424:14:17","nodeType":"YulFunctionCall","src":"1424:14:17"}],"functionName":{"name":"add","nativeSrc":"1415:3:17","nodeType":"YulIdentifier","src":"1415:3:17"},"nativeSrc":"1415:24:17","nodeType":"YulFunctionCall","src":"1415:24:17"}],"functionName":{"name":"mstore","nativeSrc":"1402:6:17","nodeType":"YulIdentifier","src":"1402:6:17"},"nativeSrc":"1402:38:17","nodeType":"YulFunctionCall","src":"1402:38:17"},"nativeSrc":"1402:38:17","nodeType":"YulExpressionStatement","src":"1402:38:17"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1460:3:17","nodeType":"YulIdentifier","src":"1460:3:17"},{"name":"len","nativeSrc":"1465:3:17","nodeType":"YulIdentifier","src":"1465:3:17"}],"functionName":{"name":"mstore","nativeSrc":"1453:6:17","nodeType":"YulIdentifier","src":"1453:6:17"},"nativeSrc":"1453:16:17","nodeType":"YulFunctionCall","src":"1453:16:17"},"nativeSrc":"1453:16:17","nodeType":"YulExpressionStatement","src":"1453:16:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"1501:3:17","nodeType":"YulIdentifier","src":"1501:3:17"},{"kind":"number","nativeSrc":"1506:4:17","nodeType":"YulLiteral","src":"1506:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1497:3:17","nodeType":"YulIdentifier","src":"1497:3:17"},"nativeSrc":"1497:14:17","nodeType":"YulFunctionCall","src":"1497:14:17"},{"kind":"number","nativeSrc":"1513:1:17","nodeType":"YulLiteral","src":"1513:1:17","type":"","value":"0"},{"name":"len","nativeSrc":"1516:3:17","nodeType":"YulIdentifier","src":"1516:3:17"}],"functionName":{"name":"returndatacopy","nativeSrc":"1482:14:17","nodeType":"YulIdentifier","src":"1482:14:17"},"nativeSrc":"1482:38:17","nodeType":"YulFunctionCall","src":"1482:38:17"},"nativeSrc":"1482:38:17","nodeType":"YulExpressionStatement","src":"1482:38:17"},{"nativeSrc":"1533:17:17","nodeType":"YulAssignment","src":"1533:17:17","value":{"name":"ptr","nativeSrc":"1547:3:17","nodeType":"YulIdentifier","src":"1547:3:17"},"variableNames":[{"name":"returnData","nativeSrc":"1533:10:17","nodeType":"YulIdentifier","src":"1533:10:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3605,"isOffset":false,"isSlot":false,"src":"1301:6:17","valueSize":1},{"declaration":3605,"isOffset":false,"isSlot":false,"src":"1334:6:17","valueSize":1},{"declaration":3608,"isOffset":false,"isSlot":false,"src":"1533:10:17","valueSize":1}],"flags":["memory-safe"],"id":3610,"nodeType":"InlineAssembly","src":"1211:349:17"}]},"id":3612,"implemented":true,"kind":"function","modifiers":[],"name":"getReturnData","nameLocation":"1123:13:17","nodeType":"FunctionDefinition","parameters":{"id":3606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3605,"mutability":"mutable","name":"maxLen","nameLocation":"1145:6:17","nodeType":"VariableDeclaration","scope":3612,"src":"1137:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3604,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1136:16:17"},"returnParameters":{"id":3609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3608,"mutability":"mutable","name":"returnData","nameLocation":"1189:10:17","nodeType":"VariableDeclaration","scope":3612,"src":"1176:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3607,"name":"bytes","nodeType":"ElementaryTypeName","src":"1176:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1175:25:17"},"scope":3650,"src":"1114:452:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3618,"nodeType":"Block","src":"1709:111:17","statements":[{"AST":{"nativeSrc":"1744:70:17","nodeType":"YulBlock","src":"1744:70:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"returnData","nativeSrc":"1769:10:17","nodeType":"YulIdentifier","src":"1769:10:17"},{"kind":"number","nativeSrc":"1781:2:17","nodeType":"YulLiteral","src":"1781:2:17","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1765:3:17","nodeType":"YulIdentifier","src":"1765:3:17"},"nativeSrc":"1765:19:17","nodeType":"YulFunctionCall","src":"1765:19:17"},{"arguments":[{"name":"returnData","nativeSrc":"1792:10:17","nodeType":"YulIdentifier","src":"1792:10:17"}],"functionName":{"name":"mload","nativeSrc":"1786:5:17","nodeType":"YulIdentifier","src":"1786:5:17"},"nativeSrc":"1786:17:17","nodeType":"YulFunctionCall","src":"1786:17:17"}],"functionName":{"name":"revert","nativeSrc":"1758:6:17","nodeType":"YulIdentifier","src":"1758:6:17"},"nativeSrc":"1758:46:17","nodeType":"YulFunctionCall","src":"1758:46:17"},"nativeSrc":"1758:46:17","nodeType":"YulExpressionStatement","src":"1758:46:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":3614,"isOffset":false,"isSlot":false,"src":"1769:10:17","valueSize":1},{"declaration":3614,"isOffset":false,"isSlot":false,"src":"1792:10:17","valueSize":1}],"flags":["memory-safe"],"id":3617,"nodeType":"InlineAssembly","src":"1719:95:17"}]},"id":3619,"implemented":true,"kind":"function","modifiers":[],"name":"revertWithData","nameLocation":"1655:14:17","nodeType":"FunctionDefinition","parameters":{"id":3615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3614,"mutability":"mutable","name":"returnData","nameLocation":"1683:10:17","nodeType":"VariableDeclaration","scope":3619,"src":"1670:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3613,"name":"bytes","nodeType":"ElementaryTypeName","src":"1670:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1669:25:17"},"returnParameters":{"id":3616,"nodeType":"ParameterList","parameters":[],"src":"1709:0:17"},"scope":3650,"src":"1646:174:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3648,"nodeType":"Block","src":"1905:142:17","statements":[{"assignments":[3629],"declarations":[{"constant":false,"id":3629,"mutability":"mutable","name":"success","nameLocation":"1920:7:17","nodeType":"VariableDeclaration","scope":3648,"src":"1915:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3628,"name":"bool","nodeType":"ElementaryTypeName","src":"1915:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3637,"initialValue":{"arguments":[{"id":3631,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"1935:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":3632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1938:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3633,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"1940:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3634,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"1945:7:17","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1945:9:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3630,"name":"call","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"1930:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory,uint256) returns (bool)"}},"id":3636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1930:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"1915:40:17"},{"condition":{"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1969:8:17","subExpression":{"id":3638,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3629,"src":"1970:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3647,"nodeType":"IfStatement","src":"1965:76:17","trueBody":{"id":3646,"nodeType":"Block","src":"1979:62:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":3642,"name":"maxLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"2022:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3641,"name":"getReturnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"2008:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"}},"id":3643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2008:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3640,"name":"revertWithData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"1993:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1993:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3645,"nodeType":"ExpressionStatement","src":"1993:37:17"}]}}]},"id":3649,"implemented":true,"kind":"function","modifiers":[],"name":"callAndRevert","nameLocation":"1835:13:17","nodeType":"FunctionDefinition","parameters":{"id":3626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3621,"mutability":"mutable","name":"to","nameLocation":"1857:2:17","nodeType":"VariableDeclaration","scope":3649,"src":"1849:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3620,"name":"address","nodeType":"ElementaryTypeName","src":"1849:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3623,"mutability":"mutable","name":"data","nameLocation":"1874:4:17","nodeType":"VariableDeclaration","scope":3649,"src":"1861:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3622,"name":"bytes","nodeType":"ElementaryTypeName","src":"1861:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3625,"mutability":"mutable","name":"maxLen","nameLocation":"1888:6:17","nodeType":"VariableDeclaration","scope":3649,"src":"1880:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3624,"name":"uint256","nodeType":"ElementaryTypeName","src":"1880:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1848:47:17"},"returnParameters":{"id":3627,"nodeType":"ParameterList","parameters":[],"src":"1905:0:17"},"scope":3650,"src":"1826:221:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":3651,"src":"210:1839:17","usedErrors":[],"usedEvents":[]}],"src":"42:2008:17"},"id":17}},"contracts":{"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"contracts/core/EntryPoint.sol":{"EntryPoint":{"abi":[{"inputs":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"ret","type":"bytes"}],"name":"DelegateAndRevert","type":"error"},{"inputs":[{"internalType":"uint256","name":"opIndex","type":"uint256"},{"internalType":"string","name":"reason","type":"string"}],"name":"FailedOp","type":"error"},{"inputs":[{"internalType":"uint256","name":"opIndex","type":"uint256"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"inner","type":"bytes"}],"name":"FailedOpWithRevert","type":"error"},{"inputs":[{"internalType":"bytes","name":"returnData","type":"bytes"}],"name":"PostOpReverted","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"SenderAddressResult","type":"error"},{"inputs":[{"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureValidationFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"factory","type":"address"},{"indexed":false,"internalType":"address","name":"paymaster","type":"address"}],"name":"AccountDeployed","type":"event"},{"anonymous":false,"inputs":[],"name":"BeforeExecution","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"revertReason","type":"bytes"}],"name":"PostOpRevertReason","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureAggregatorChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"paymaster","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"},{"indexed":false,"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"actualGasUsed","type":"uint256"}],"name":"UserOperationEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"revertReason","type":"bytes"}],"name":"UserOperationRevertReason","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[],"name":"SIG_VALIDATION_FAILED","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"delegateAndRevert","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"deposits","outputs":[{"internalType":"uint256","name":"deposit","type":"uint256"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint256","name":"deposit","type":"uint256"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"initCode","type":"bytes"}],"name":"getSenderAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"}],"name":"getUserOpHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"contract IAggregator","name":"aggregator","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct IEntryPoint.UserOpsPerAggregator[]","name":"opsPerAggregator","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleAggregatedOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation[]","name":"ops","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"callData","type":"bytes"},{"components":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"paymasterVerificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"paymasterPostOpGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"address","name":"paymaster","type":"address"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"}],"internalType":"struct EntryPoint.MemoryUserOp","name":"mUserOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"prefund","type":"uint256"},{"internalType":"uint256","name":"contextOffset","type":"uint256"},{"internalType":"uint256","name":"preOpGas","type":"uint256"}],"internalType":"struct EntryPoint.UserOpInfo","name":"opInfo","type":"tuple"},{"internalType":"bytes","name":"context","type":"bytes"}],"name":"innerHandleOp","outputs":[{"internalType":"uint256","name":"actualGasCost","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint192","name":"","type":"uint192"}],"name":"nonceSequenceNumber","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a08060405234620000825760016002556101df8181016001600160401b038111838210176200006c57829162003e56833903906000f080156200006057608052604051613dce9081620000888239608051818181610d2d01526131ea0152f35b6040513d6000823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b600080fdfe60806040526004361015610024575b361561001957600080fd5b61002233612781565b005b60003560e01c806242dc5314611b4557806301ffc9a7146119f357806302101e491461198d5780630396cb60146116555780630bd28e3b146115d95780631b2e01b814611545578063205c2878146113b057806335567e1a146112f85780635287ce12146111ea5780636b21db5114610f2c57806370a0823114610ec7578063850aaf6214610e085780638f41ec5a14610dce5780639b249f6914610c7f578063b760faf914610c45578063bb9fe6bf14610a73578063c23a5cea146107cf578063ea8ad612146101ac5763fc7e286d0361000e57346101a75760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a75773ffffffffffffffffffffffffffffffffffffffff6101456122d9565b16600052600060205260a0604060002065ffffffffffff6001825492015460405192835260ff8116151560208401526dffffffffffffffffffffffffffff8160081c16604084015263ffffffff8160781c16606084015260981c166080820152f35b600080fd5b346101a7576101ba36612351565b906101c3612a01565b60009160005b82811061057a57506101db84936125c1565b6000805b8481106103075750507fbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972600080a16000809360005b8181106102525761024b868660007f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d8180a2613b91565b6001600255005b6102ad61026082848a6127cf565b73ffffffffffffffffffffffffffffffffffffffff61028160208301612863565b167f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d600080a28061280f565b906000915b8083106102c457505050600101610214565b909194976102fe6102f86001926102f28c8b6102eb826102e58e8b8d6126d6565b92612693565b519161354a565b90612532565b9961253f565b950191906102b2565b60206103148287896127cf565b61032a610321828061280f565b93909201612863565b9160009273ffffffffffffffffffffffffffffffffffffffff8091165b82851061035b5750505050506001016101df565b909192939561038a83610383610371848c612693565b5161037d8b898b6126d6565b85612a3a565b9290613d02565b91168403610515576104b0576103a08491613d02565b911661044b576103c0576103b560019161253f565b960193929190610347565b60a487604051907f220266b6000000000000000000000000000000000000000000000000000000008252600482015260406024820152602160448201527f41413332207061796d61737465722065787069726564206f72206e6f7420647560648201527f65000000000000000000000000000000000000000000000000000000000000006084820152fd5b608488604051907f220266b6000000000000000000000000000000000000000000000000000000008252600482015260406024820152601460448201527f41413334207369676e6174757265206572726f720000000000000000000000006064820152fd5b608488604051907f220266b6000000000000000000000000000000000000000000000000000000008252600482015260406024820152601760448201527f414132322065787069726564206f72206e6f74206475650000000000000000006064820152fd5b608489604051907f220266b6000000000000000000000000000000000000000000000000000000008252600482015260406024820152601460448201527f41413234207369676e6174757265206572726f720000000000000000000000006064820152fd5b6105858184876127cf565b93610590858061280f565b919095602073ffffffffffffffffffffffffffffffffffffffff6105b5828401612863565b1697600192838a1461077157896105e5575b5050505060019293949550906105dc91612532565b939291016101c9565b8060406105f3920190612884565b918a3b156101a757929391906040519485937ffe96cf2300000000000000000000000000000000000000000000000000000000855288604486016040600488015252606490818601918a60051b8701019680936000915b8c83106106f15750505050505083839261068f927ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8560009803016024860152612742565b03818a5afa90816106e2575b506106d157602486604051907f86a9f7500000000000000000000000000000000000000000000000000000000082526004820152fd5b93945084936105dc600189806105c7565b6106eb906121f7565b8861069b565b91939596977fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9c908a9294969a0301865288357ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec1833603018112156101a7578361075e879385839401612925565b9a0196019301909189979695949261064a565b606483604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601760248201527f4141393620696e76616c69642061676772656761746f720000000000000000006044820152fd5b346101a7576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a7576108076122d9565b33600052600082526001604060002001908154916dffffffffffffffffffffffffffff8360081c16928315610a155765ffffffffffff8160981c1680156109b75742106109595760009373ffffffffffffffffffffffffffffffffffffffff859485947fffffffffffffff000000000000000000000000000000000000000000000000ff86951690556040517fb7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda33391806108e58786836020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b0390a2165af16108f3612579565b50156108fb57005b606490604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601860248201527f6661696c656420746f207769746864726177207374616b6500000000000000006044820152fd5b606485604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601b60248201527f5374616b65207769746864726177616c206973206e6f742064756500000000006044820152fd5b606486604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601d60248201527f6d7573742063616c6c20756e6c6f636b5374616b6528292066697273740000006044820152fd5b606485604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601460248201527f4e6f207374616b6520746f2077697468647261770000000000000000000000006044820152fd5b346101a75760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a7573360005260006020526001604060002001805463ffffffff8160781c16908115610be75760ff1615610b895765ffffffffffff908142160191818311610b5a5780547fffffffffffffff000000000000ffffffffffffffffffffffffffffffffffff001678ffffffffffff00000000000000000000000000000000000000609885901b161790556040519116815233907ffa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a90602090a2005b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f616c726561647920756e7374616b696e670000000000000000000000000000006044820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f6e6f74207374616b6564000000000000000000000000000000000000000000006044820152fd5b60207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a757610022610c7a6122d9565b612781565b346101a75760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a75760043567ffffffffffffffff81116101a7576020610cd3610d269236906004016122fc565b919073ffffffffffffffffffffffffffffffffffffffff9260405194859283927f570e1a360000000000000000000000000000000000000000000000000000000084528560048501526024840191612742565b03816000857f0000000000000000000000000000000000000000000000000000000000000000165af1908115610dc257602492600092610d91575b50604051917f6ca7b806000000000000000000000000000000000000000000000000000000008352166004820152fd5b610db491925060203d602011610dbb575b610dac8183612227565b810190612716565b9083610d61565b503d610da2565b6040513d6000823e3d90fd5b346101a75760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a757602060405160018152f35b346101a75760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a757610e3f6122d9565b60243567ffffffffffffffff81116101a757600091610e63839236906004016122fc565b90816040519283928337810184815203915af4610e7e612579565b90610ec36040519283927f9941055400000000000000000000000000000000000000000000000000000000845215156004840152604060248401526044830190612400565b0390fd5b346101a75760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a75773ffffffffffffffffffffffffffffffffffffffff610f136122d9565b1660005260006020526020604060002054604051908152f35b346101a757610f3a36612351565b610f45929192612a01565b610f4e836125c1565b60005b848110610fc657506000927fbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972600080a16000915b858310610f965761024b8585613b91565b909193600190610fbc610faa8789876126d6565b610fb48886612693565b51908861354a565b0194019190610f85565b610ff1610fea610fd883859795612693565b51610fe48489876126d6565b84612a3a565b9190613d02565b73ffffffffffffffffffffffffffffffffffffffff92918316611185576111205761101b90613d02565b91166110bb5761103057600101929092610f51565b60a490604051907f220266b6000000000000000000000000000000000000000000000000000000008252600482015260406024820152602160448201527f41413332207061796d61737465722065787069726564206f72206e6f7420647560648201527f65000000000000000000000000000000000000000000000000000000000000006084820152fd5b608482604051907f220266b6000000000000000000000000000000000000000000000000000000008252600482015260406024820152601460448201527f41413334207369676e6174757265206572726f720000000000000000000000006064820152fd5b608483604051907f220266b6000000000000000000000000000000000000000000000000000000008252600482015260406024820152601760448201527f414132322065787069726564206f72206e6f74206475650000000000000000006064820152fd5b608484604051907f220266b6000000000000000000000000000000000000000000000000000000008252600482015260406024820152601460448201527f41413234207369676e6174757265206572726f720000000000000000000000006064820152fd5b346101a75760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a75773ffffffffffffffffffffffffffffffffffffffff6112366122d9565b600060806040516112468161218f565b828152826020820152826040820152826060820152015216600052600060205260a06040600020608060405161127b8161218f565b6001835493848352015490602081019060ff8316151582526dffffffffffffffffffffffffffff60408201818560081c16815263ffffffff936060840193858760781c16855265ffffffffffff978891019660981c1686526040519788525115156020880152511660408601525116606084015251166080820152f35b346101a75760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a75760206113316122d9565b73ffffffffffffffffffffffffffffffffffffffff61134e61232a565b911660005260018252604060002077ffffffffffffffffffffffffffffffffffffffffffffffff821660005282526040600020547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000006040519260401b16178152f35b346101a75760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a7576113e76122d9565b602435903360005260006020526040600020908154918284116114e7576000808573ffffffffffffffffffffffffffffffffffffffff8295839561142b848a61256c565b90556040805173ffffffffffffffffffffffffffffffffffffffff831681526020810185905233917fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb91a2165af1611481612579565b501561148957005b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6661696c656420746f20776974686472617700000000000000000000000000006044820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f576974686472617720616d6f756e7420746f6f206c61726765000000000000006044820152fd5b346101a75760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a75761157c6122d9565b73ffffffffffffffffffffffffffffffffffffffff61159961232a565b9116600052600160205277ffffffffffffffffffffffffffffffffffffffffffffffff604060002091166000526020526020604060002054604051908152f35b346101a75760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a75760043577ffffffffffffffffffffffffffffffffffffffffffffffff81168091036101a7573360005260016020526040600020906000526020526040600020611651815461253f565b9055005b6020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a75760043563ffffffff918282168092036101a7573360005260008152604060002092821561192f576001840154908160781c1683106118d1576116d76dffffffffffffffffffffffffffff9182349160081c16612532565b93841561187357818511611815579065ffffffffffff6117e49254604051906116ff8261218f565b8152848101926001845260408201908816815260608201878152600160808401936000855233600052600089526040600020905181550194511515917fffffffffffffffffffffffffff0000000000000000000000000000000000000060ff72ffffffff0000000000000000000000000000006effffffffffffffffffffffffffff008954945160081b16945160781b1694169116171717835551167fffffffffffffff000000000000ffffffffffffffffffffffffffffffffffffff78ffffffffffff0000000000000000000000000000000000000083549260981b169116179055565b6040519283528201527fa5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c0160403392a2005b606483604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152600e60248201527f7374616b65206f766572666c6f770000000000000000000000000000000000006044820152fd5b606483604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601260248201527f6e6f207374616b652073706563696669656400000000000000000000000000006044820152fd5b606482604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601c60248201527f63616e6e6f7420646563726561736520756e7374616b652074696d65000000006044820152fd5b606482604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601a60248201527f6d757374207370656369667920756e7374616b652064656c61790000000000006044820152fd5b346101a7577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6020813601126101a7576004359067ffffffffffffffff82116101a7576101409082360301126101a7576119eb602091600401612443565b604051908152f35b346101a75760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a7576004357fffffffff0000000000000000000000000000000000000000000000000000000081168091036101a757807f6c393cb70000000000000000000000000000000000000000000000000000000060209214908115611b1b575b8115611af1575b8115611ac7575b8115611a9d575b506040519015158152f35b7f01ffc9a70000000000000000000000000000000000000000000000000000000091501482611a92565b7f3e84f0210000000000000000000000000000000000000000000000000000000081149150611a8b565b7fcf28ef970000000000000000000000000000000000000000000000000000000081149150611a84565b7f9d9523010000000000000000000000000000000000000000000000000000000081149150611a7d565b346101a7576102007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a75767ffffffffffffffff6004358181116101a757366023820112156101a757611ba79036906024816004013591016122a2565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc3601916101c083126101a75761014060405193611be58561218f565b126101a75760405192611bf7846121da565b60243573ffffffffffffffffffffffffffffffffffffffff811681036101a7578452602093604435858201526064356040820152608435606082015260a435608082015260c43560a082015260e43560c08201526101043573ffffffffffffffffffffffffffffffffffffffff811681036101a75760e082015261012435610100820152610144356101208201528152610164358482015260408101926101843584526101a43560608301526101c43560808301526101e4359081116101a757611cc59036906004016122fc565b925a91303303612131578351606081015192603f5a0260061c61271060a084015186010111612108576000938151918261202e575b50505050611d1491925a90036080850151019436916122a2565b9160005a825195611d2487613cb6565b9073ffffffffffffffffffffffffffffffffffffffff60e0890151168015600014611edb575073ffffffffffffffffffffffffffffffffffffffff885116925b5a9003019560608801519051611ed0575b6080850151870390818111611ebc575b505085029687815110611e58579087611da092510390613c82565b506003831015611e2b57506080867f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f9201519273ffffffffffffffffffffffffffffffffffffffff865116948873ffffffffffffffffffffffffffffffffffffffff60e0890151169701519160405192835215898301528760408301526060820152a4604051908152f35b807f4e487b7100000000000000000000000000000000000000000000000000000000602492526021600452fd5b6084838a604051917f220266b600000000000000000000000000000000000000000000000000000000835260048301526040602483015260448201527f414135312070726566756e642062656c6f772061637475616c476173436f73746064820152fd5b6064919003600a0204909501948980611d85565b60a088015101611d75565b92838851611eea575b50611d64565b6003881015611fff576002880315611ee45760a08a999897969c9b9a0151813b156101a757886000918983611f5b956040518097819682957f7c627b210000000000000000000000000000000000000000000000000000000084526004840152608060248401526084830190612400565b8b8b0260448301528b60648301520393f19081611feb575b50611fdd578a8a3d610800808211611fd5575b506040519282828501016040528184528284013e610ec36040519283927fad7954bc00000000000000000000000000000000000000000000000000000000845260048401526024830190612400565b905083611f86565b99939495969798998b611ee4565b611ff6919c506121f7565b60009a8c611f73565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91600092918380938d73ffffffffffffffffffffffffffffffffffffffff885116910192f115612061575b808080611cfa565b611d1492503d610800808211612100575b5060405190898183010160405280825260008a83013e8051612099575b5050600191612059565b7f1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a2018980880151926120f68273ffffffffffffffffffffffffffffffffffffffff875116960151916040805194859485528401526040830190612400565b0390a3878061208f565b905089612072565b887fdeaddead000000000000000000000000000000000000000000000000000000006000526000fd5b606487604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601760248201527f4141393220696e7465726e616c2063616c6c206f6e6c790000000000000000006044820152fd5b60a0810190811067ffffffffffffffff8211176121ab57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610140810190811067ffffffffffffffff8211176121ab57604052565b67ffffffffffffffff81116121ab57604052565b6060810190811067ffffffffffffffff8211176121ab57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176121ab57604052565b67ffffffffffffffff81116121ab57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b9291926122ae82612268565b916122bc6040519384612227565b8294818452818301116101a7578281602093846000960137010152565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036101a757565b9181601f840112156101a75782359167ffffffffffffffff83116101a757602083818601950101116101a757565b6024359077ffffffffffffffffffffffffffffffffffffffffffffffff821682036101a757565b9060407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8301126101a75760043567ffffffffffffffff928382116101a757806023830112156101a75781600401359384116101a75760248460051b830101116101a757602401919060243573ffffffffffffffffffffffffffffffffffffffff811681036101a75790565b60005b8381106123f05750506000910152565b81810151838201526020016123e0565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209361243c815180928187528780880191016123dd565b0116010190565b60409061245282820182612884565b9081845191823720906124686060820182612884565b90818551918237209061010060e061248282840184612884565b908188519182372092865194602086019673ffffffffffffffffffffffffffffffffffffffff833516885260208301358988015260608701526080860152608081013560a086015260a081013560c086015260c081013582860152013590830152610120908183015281526124f6816121da565b5190209080519060208201928352308183015246606083015260608252608082019082821067ffffffffffffffff8311176121ab575251902090565b91908201809211610b5a57565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610b5a5760010190565b91908203918211610b5a57565b3d156125a4573d9061258a82612268565b916125986040519384612227565b82523d6000602084013e565b606090565b67ffffffffffffffff81116121ab5760051b60200190565b906125cb826125a9565b6040906125db6040519182612227565b8381527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe061260982956125a9565b019160005b83811061261b5750505050565b60209082516126298161218f565b8351612634816121da565b600081526000849181838201528187820152816060818184015260809282848201528260a08201528260c08201528260e0820152826101008201528261012082015286528185870152818987015285015283015282860101520161260e565b80518210156126a75760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b91908110156126a75760051b810135907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec1813603018212156101a7570190565b908160209103126101a7575173ffffffffffffffffffffffffffffffffffffffff811681036101a75790565b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0938186528686013760008582860101520116010190565b7f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4602073ffffffffffffffffffffffffffffffffffffffff6127c33485613c82565b936040519485521692a2565b91908110156126a75760051b810135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa1813603018212156101a7570190565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1813603018212156101a7570180359067ffffffffffffffff82116101a757602001918160051b360383136101a757565b3573ffffffffffffffffffffffffffffffffffffffff811681036101a75790565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1813603018212156101a7570180359067ffffffffffffffff82116101a7576020019181360383136101a757565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1823603018112156101a757016020813591019167ffffffffffffffff82116101a75781360383136101a757565b61014091813573ffffffffffffffffffffffffffffffffffffffff81168091036101a75761299b6129806129fe956129df9385526020860135602086015261297060408701876128d5565b9091806040880152860191612742565b61298d60608601866128d5565b908583036060870152612742565b6080840135608084015260a084013560a084015260c084013560c084015260e084013560e08401526101006129d2818601866128d5565b9185840390860152612742565b916129f061012091828101906128d5565b929091818503910152612742565b90565b6002805414612a105760028055565b60046040517f3ee5aeb5000000000000000000000000000000000000000000000000000000008152fd5b9290916000925a908251813573ffffffffffffffffffffffffffffffffffffffff81168091036101a75781526020820135602082015260808201356fffffffffffffffffffffffffffffffff8116606083015260801c604082015260a082013560c082015261010060c08301358183015260e0830135610120830152612ac281840184612884565b801561352e57603481106134d057806014116101a757806024116101a7576034116101a757602481013560801c60a0840152601481013560801c60808401523560601c60e08301525b612b1483612443565b60208601526effffffffffffffffffffffffffffff60c083015160408401511760608401511760808401511760e08501359060c08601359060a08601511717171161347257604082015160608301510160808301510160a08301510160c0830151019082015102845173ffffffffffffffffffffffffffffffffffffffff815116612ba26040860186612884565b80613183575b5050612c17602073ffffffffffffffffffffffffffffffffffffffff60e085015116936000908515613151575b60400151828b01516000868b604051978896879586937f8803e45100000000000000000000000000000000000000000000000000000000855260048501613ce0565b0393f16000918161311d575b50612ccb573d8b610800808311612cc3575b50604051916020818401016040528083526000602084013e610ec36040519283927f65c8fd4d000000000000000000000000000000000000000000000000000000008452600484015260606024840152600d60648401527f4141323320726576657274656400000000000000000000000000000000000000608484015260a0604484015260a4830190612400565b915082612c35565b9115613097575b509773ffffffffffffffffffffffffffffffffffffffff835116602084015190600052600160205260406000208160401c60005260205267ffffffffffffffff604060002091825492612d248461253f565b905516036130325760609273ffffffffffffffffffffffffffffffffffffffff60e082015116612de6575b5a860390608060408201519101510110612d8157506040850152606084015260809160a090910135905a900301910152565b608490604051907f220266b6000000000000000000000000000000000000000000000000000000008252600482015260406024820152601e60448201527f41413430206f76657220766572696669636174696f6e4761734c696d697400006064820152fd5b9198969594939250965083519773ffffffffffffffffffffffffffffffffffffffff60e08a0151169889600052600060205260406000208054838110612fcd579a6080600093859384612e789d9e9f0390550151908360208a015191604051809d819682957f703ae88f0000000000000000000000000000000000000000000000000000000084528c60048501613ce0565b0393f19687600091600099612f40575b50612f30573d8a610800808311612f28575b50604051916020818401016040528083526000602084013e610ec36040519283927f65c8fd4d000000000000000000000000000000000000000000000000000000008452600484015260606024840152600d60648401527f4141333320726576657274656400000000000000000000000000000000000000608484015260a0604484015260a4830190612400565b915082612e9a565b9890919293949596979892612d4f565b915097503d90816000823e612f558282612227565b60408183810103126101a75780519067ffffffffffffffff82116101a757828101601f8383010112156101a7578181015191612f9083612268565b93612f9e6040519586612227565b83855282016020848385010101116101a757602092612fc49184808701918501016123dd565b01519738612e88565b60848b604051907f220266b6000000000000000000000000000000000000000000000000000000008252600482015260406024820152601e60448201527f41413331207061796d6173746572206465706f73697420746f6f206c6f7700006064820152fd5b608490604051907f220266b6000000000000000000000000000000000000000000000000000000008252600482015260406024820152601a60448201527f4141323520696e76616c6964206163636f756e74206e6f6e63650000000000006064820152fd5b6000526000602052604060002080548084116130b857839003905538612cd2565b60848b604051907f220266b6000000000000000000000000000000000000000000000000000000008252600482015260406024820152601760448201527f41413231206469646e2774207061792070726566756e640000000000000000006064820152fd5b9091506020813d602011613149575b8161313960209383612227565b810103126101a757519038612c23565b3d915061312c565b905083600052600082526040600020548681116000146131795750604060005b919050612bd5565b6040908703613171565b823b61340d57604089510151602060405180927f570e1a36000000000000000000000000000000000000000000000000000000008252826004830152816000816131d160248201898b612742565b039273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690f1908115610dc2576000916133ee575b5073ffffffffffffffffffffffffffffffffffffffff811615613389578373ffffffffffffffffffffffffffffffffffffffff821603613324573b156132bf576014116101a75781907fd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d604060208b01519273ffffffffffffffffffffffffffffffffffffffff60e08d510151168251913560601c82526020820152a33880612ba8565b60848c604051907f220266b6000000000000000000000000000000000000000000000000000000008252600482015260406024820152602060448201527f4141313520696e6974436f6465206d757374206372656174652073656e6465726064820152fd5b60848d604051907f220266b6000000000000000000000000000000000000000000000000000000008252600482015260406024820152602060448201527f4141313420696e6974436f6465206d7573742072657475726e2073656e6465726064820152fd5b60848d604051907f220266b6000000000000000000000000000000000000000000000000000000008252600482015260406024820152601b60448201527f4141313320696e6974436f6465206661696c6564206f72204f4f4700000000006064820152fd5b613407915060203d602011610dbb57610dac8183612227565b3861321b565b60848c604051907f220266b6000000000000000000000000000000000000000000000000000000008252600482015260406024820152601f60448201527f414131302073656e64657220616c726561647920636f6e7374727563746564006064820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f41413934206761732076616c756573206f766572666c6f7700000000000000006044820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4141393320696e76616c6964207061796d6173746572416e64446174610000006044820152fd5b5050600060e083015260006080830152600060a0830152612b0b565b9092915a90606081015160006040938451977fffffffff000000000000000000000000000000000000000000000000000000008961358b6060840184612884565b8660038211613b89575b7f18ad2e1200000000000000000000000000000000000000000000000000000000941684148714613a3057505050613665916137509160208801516135ed8a5193849360208501528b60248501526064840190612925565b90604483015203906136257fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe092838101835282612227565b61374489519485927e42dc530000000000000000000000000000000000000000000000000000000060208501526102006024850152610224840190612400565b613713604484018b60806101a091805173ffffffffffffffffffffffffffffffffffffffff808251168652602082015160208701526040820151604087015260608201516060870152838201518487015260a082015160a087015260c082015160c087015260e08201511660e0860152610100808201519086015261012080910151908501526020810151610140850152604081015161016085015260608101516101808501520151910152565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc8382030161020484015288612400565b03908101835282612227565b6020928184809351910182305af160005198865215613772575b505050505050565b909192939495965060003d8314613a22575b7fdeaddead000000000000000000000000000000000000000000000000000000000361380d57608486868051917f220266b600000000000000000000000000000000000000000000000000000000835260048301526024820152600f60448201527f41413935206f7574206f662067617300000000000000000000000000000000006064820152fd5b61389b90828596949501518651907ff62676f440ff169a3a9afdbf812e89e7f95975ee8e5c31214ffdef631c5f47928573ffffffffffffffffffffffffffffffffffffffff8451169301513d90610800808311613a1a575b5088519188818401018a5280835260008984013e613891895192839283528a8a8401528a830190612400565b0390a35a9061256c565b6138ab6080860191825190612532565b925a9560008151976138bc89613cb6565b60e08a019873ffffffffffffffffffffffffffffffffffffffff98898b51168015600014613a095750898c5116935b5a9003019660608c015191516139fc575b518703908181116139e8575b5050850299848401908b825110613986575082918b61392992510390613c82565b50611e2b5750918784926000847f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f97608097015198808c51169a51169a01519482519586528501528301526060820152a49038808080808061376a565b60849088878051927f220266b60000000000000000000000000000000000000000000000000000000084526004840152602483015260448201527f414135312070726566756e642062656c6f772061637475616c476173436f73746064820152fd5b6064919003600a0204909501943880613908565b9060a08c015101906138fc565b938251156138eb57600095506138eb565b915038613865565b50816000803e600051613784565b613b83945082935090613a78917e42dc53000000000000000000000000000000000000000000000000000000006020613b579501526102006024860152610224850191612742565b613b26604484018960806101a091805173ffffffffffffffffffffffffffffffffffffffff808251168652602082015160208701526040820151604087015260608201516060870152838201518487015260a082015160a087015260c082015160c087015260e08201511660e0860152610100808201519086015261012080910151908501526020810151610140850152604081015161016085015260608101516101808501520151910152565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc8382030161020484015286612400565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081018a5289612227565b87613750565b508135613595565b73ffffffffffffffffffffffffffffffffffffffff168015613c2457600080809381935af1613bbe612579565b5015613bc657565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f41413931206661696c65642073656e6420746f2062656e6566696369617279006044820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4141393020696e76616c69642062656e656669636961727900000000000000006044820152fd5b73ffffffffffffffffffffffffffffffffffffffff166000526000602052613cb06040600020918254612532565b80915590565b610120610100820151910151808214613cdc57480180821015613cd7575090565b905090565b5090565b613cf860409295949395606083526060830190612925565b9460208201520152565b8015613d8f57600060408051613d178161220b565b828152826020820152015273ffffffffffffffffffffffffffffffffffffffff811690604065ffffffffffff91828160a01c16908115613d87575b60d01c92825191613d628361220b565b8583528460208401521691829101524211908115613d7f57509091565b905042109091565b839150613d52565b5060009060009056fea264697066735822122039437b055a0ba03d9e62cb130b1a5b39234fe52ccceac94f18f2c86b0efa3f2764736f6c6343000817003360808060405234610016576101c3908161001c8239f35b600080fdfe6080600436101561000f57600080fd5b6000803560e01c63570e1a361461002557600080fd5b3461018a5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018a576004359167ffffffffffffffff9081841161018657366023850112156101865783600401358281116101825736602482870101116101825780601411610182577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec810192808411610155577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f81600b8501160116830190838210908211176101555792846024819482600c60209a968b9960405286845289840196603889018837830101525193013560601c5af1908051911561014d575b5073ffffffffffffffffffffffffffffffffffffffff60405191168152f35b90503861012e565b6024857f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b8380fd5b8280fd5b80fdfea264697066735822122024ef3abfd31dde9e4d27e341c25802405d1557306fee7d71d82bd22012501cfb64736f6c63430008170033","opcodes":"PUSH1 0xA0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x82 JUMPI PUSH1 0x1 PUSH1 0x2 SSTORE PUSH2 0x1DF DUP2 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x6C JUMPI DUP3 SWAP2 PUSH3 0x3E56 DUP4 CODECOPY SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO PUSH3 0x60 JUMPI PUSH1 0x80 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3DCE SWAP1 DUP2 PUSH3 0x88 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0xD2D ADD MSTORE PUSH2 0x31EA ADD MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x24 JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22 CALLER PUSH2 0x2781 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x42DC53 EQ PUSH2 0x1B45 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x19F3 JUMPI DUP1 PUSH4 0x2101E49 EQ PUSH2 0x198D JUMPI DUP1 PUSH4 0x396CB60 EQ PUSH2 0x1655 JUMPI DUP1 PUSH4 0xBD28E3B EQ PUSH2 0x15D9 JUMPI DUP1 PUSH4 0x1B2E01B8 EQ PUSH2 0x1545 JUMPI DUP1 PUSH4 0x205C2878 EQ PUSH2 0x13B0 JUMPI DUP1 PUSH4 0x35567E1A EQ PUSH2 0x12F8 JUMPI DUP1 PUSH4 0x5287CE12 EQ PUSH2 0x11EA JUMPI DUP1 PUSH4 0x6B21DB51 EQ PUSH2 0xF2C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xEC7 JUMPI DUP1 PUSH4 0x850AAF62 EQ PUSH2 0xE08 JUMPI DUP1 PUSH4 0x8F41EC5A EQ PUSH2 0xDCE JUMPI DUP1 PUSH4 0x9B249F69 EQ PUSH2 0xC7F JUMPI DUP1 PUSH4 0xB760FAF9 EQ PUSH2 0xC45 JUMPI DUP1 PUSH4 0xBB9FE6BF EQ PUSH2 0xA73 JUMPI DUP1 PUSH4 0xC23A5CEA EQ PUSH2 0x7CF JUMPI DUP1 PUSH4 0xEA8AD612 EQ PUSH2 0x1AC JUMPI PUSH4 0xFC7E286D SUB PUSH2 0xE JUMPI CALLVALUE PUSH2 0x1A7 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x145 PUSH2 0x22D9 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0xA0 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH6 0xFFFFFFFFFFFF PUSH1 0x1 DUP3 SLOAD SWAP3 ADD SLOAD PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0xFF DUP2 AND ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 PUSH1 0x8 SHR AND PUSH1 0x40 DUP5 ADD MSTORE PUSH4 0xFFFFFFFF DUP2 PUSH1 0x78 SHR AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x98 SHR AND PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A7 JUMPI PUSH2 0x1BA CALLDATASIZE PUSH2 0x2351 JUMP JUMPDEST SWAP1 PUSH2 0x1C3 PUSH2 0x2A01 JUMP JUMPDEST PUSH1 0x0 SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x57A JUMPI POP PUSH2 0x1DB DUP5 SWAP4 PUSH2 0x25C1 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP5 DUP2 LT PUSH2 0x307 JUMPI POP POP PUSH32 0xBB47EE3E183A558B1A2FF0874B079F3FC5478B7454EACF2BFC5AF2FF5878F972 PUSH1 0x0 DUP1 LOG1 PUSH1 0x0 DUP1 SWAP4 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x252 JUMPI PUSH2 0x24B DUP7 DUP7 PUSH1 0x0 PUSH32 0x575FF3ACADD5AB348FE1855E217E0F3678F8D767D7494C9F9FEFBEE2E17CCA4D DUP2 DUP1 LOG2 PUSH2 0x3B91 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 SSTORE STOP JUMPDEST PUSH2 0x2AD PUSH2 0x260 DUP3 DUP5 DUP11 PUSH2 0x27CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x281 PUSH1 0x20 DUP4 ADD PUSH2 0x2863 JUMP JUMPDEST AND PUSH32 0x575FF3ACADD5AB348FE1855E217E0F3678F8D767D7494C9F9FEFBEE2E17CCA4D PUSH1 0x0 DUP1 LOG2 DUP1 PUSH2 0x280F JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP1 DUP4 LT PUSH2 0x2C4 JUMPI POP POP POP PUSH1 0x1 ADD PUSH2 0x214 JUMP JUMPDEST SWAP1 SWAP2 SWAP5 SWAP8 PUSH2 0x2FE PUSH2 0x2F8 PUSH1 0x1 SWAP3 PUSH2 0x2F2 DUP13 DUP12 PUSH2 0x2EB DUP3 PUSH2 0x2E5 DUP15 DUP12 DUP14 PUSH2 0x26D6 JUMP JUMPDEST SWAP3 PUSH2 0x2693 JUMP JUMPDEST MLOAD SWAP2 PUSH2 0x354A JUMP JUMPDEST SWAP1 PUSH2 0x2532 JUMP JUMPDEST SWAP10 PUSH2 0x253F JUMP JUMPDEST SWAP6 ADD SWAP2 SWAP1 PUSH2 0x2B2 JUMP JUMPDEST PUSH1 0x20 PUSH2 0x314 DUP3 DUP8 DUP10 PUSH2 0x27CF JUMP JUMPDEST PUSH2 0x32A PUSH2 0x321 DUP3 DUP1 PUSH2 0x280F JUMP JUMPDEST SWAP4 SWAP1 SWAP3 ADD PUSH2 0x2863 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND JUMPDEST DUP3 DUP6 LT PUSH2 0x35B JUMPI POP POP POP POP POP PUSH1 0x1 ADD PUSH2 0x1DF JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP6 PUSH2 0x38A DUP4 PUSH2 0x383 PUSH2 0x371 DUP5 DUP13 PUSH2 0x2693 JUMP JUMPDEST MLOAD PUSH2 0x37D DUP12 DUP10 DUP12 PUSH2 0x26D6 JUMP JUMPDEST DUP6 PUSH2 0x2A3A JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x3D02 JUMP JUMPDEST SWAP2 AND DUP5 SUB PUSH2 0x515 JUMPI PUSH2 0x4B0 JUMPI PUSH2 0x3A0 DUP5 SWAP2 PUSH2 0x3D02 JUMP JUMPDEST SWAP2 AND PUSH2 0x44B JUMPI PUSH2 0x3C0 JUMPI PUSH2 0x3B5 PUSH1 0x1 SWAP2 PUSH2 0x253F JUMP JUMPDEST SWAP7 ADD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x347 JUMP JUMPDEST PUSH1 0xA4 DUP8 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x220266B600000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x41413332207061796D61737465722065787069726564206F72206E6F74206475 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6500000000000000000000000000000000000000000000000000000000000000 PUSH1 0x84 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 DUP9 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x220266B600000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x41413334207369676E6174757265206572726F72000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 DUP9 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x220266B600000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x414132322065787069726564206F72206E6F7420647565000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 DUP10 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x220266B600000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x41413234207369676E6174757265206572726F72000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x585 DUP2 DUP5 DUP8 PUSH2 0x27CF JUMP JUMPDEST SWAP4 PUSH2 0x590 DUP6 DUP1 PUSH2 0x280F JUMP JUMPDEST SWAP2 SWAP1 SWAP6 PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x5B5 DUP3 DUP5 ADD PUSH2 0x2863 JUMP JUMPDEST AND SWAP8 PUSH1 0x1 SWAP3 DUP4 DUP11 EQ PUSH2 0x771 JUMPI DUP10 PUSH2 0x5E5 JUMPI JUMPDEST POP POP POP POP PUSH1 0x1 SWAP3 SWAP4 SWAP5 SWAP6 POP SWAP1 PUSH2 0x5DC SWAP2 PUSH2 0x2532 JUMP JUMPDEST SWAP4 SWAP3 SWAP2 ADD PUSH2 0x1C9 JUMP JUMPDEST DUP1 PUSH1 0x40 PUSH2 0x5F3 SWAP3 ADD SWAP1 PUSH2 0x2884 JUMP JUMPDEST SWAP2 DUP11 EXTCODESIZE ISZERO PUSH2 0x1A7 JUMPI SWAP3 SWAP4 SWAP2 SWAP1 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 PUSH32 0xFE96CF2300000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP9 PUSH1 0x44 DUP7 ADD PUSH1 0x40 PUSH1 0x4 DUP9 ADD MSTORE MSTORE PUSH1 0x64 SWAP1 DUP2 DUP7 ADD SWAP2 DUP11 PUSH1 0x5 SHL DUP8 ADD ADD SWAP7 DUP1 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP13 DUP4 LT PUSH2 0x6F1 JUMPI POP POP POP POP POP POP DUP4 DUP4 SWAP3 PUSH2 0x68F SWAP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC DUP6 PUSH1 0x0 SWAP9 SUB ADD PUSH1 0x24 DUP7 ADD MSTORE PUSH2 0x2742 JUMP JUMPDEST SUB DUP2 DUP11 GAS STATICCALL SWAP1 DUP2 PUSH2 0x6E2 JUMPI JUMPDEST POP PUSH2 0x6D1 JUMPI PUSH1 0x24 DUP7 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x86A9F75000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP4 SWAP5 POP DUP5 SWAP4 PUSH2 0x5DC PUSH1 0x1 DUP10 DUP1 PUSH2 0x5C7 JUMP JUMPDEST PUSH2 0x6EB SWAP1 PUSH2 0x21F7 JUMP JUMPDEST DUP9 PUSH2 0x69B JUMP JUMPDEST SWAP2 SWAP4 SWAP6 SWAP7 SWAP8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF9C SWAP1 DUP11 SWAP3 SWAP5 SWAP7 SWAP11 SUB ADD DUP7 MSTORE DUP9 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEC1 DUP4 CALLDATASIZE SUB ADD DUP2 SLT ISZERO PUSH2 0x1A7 JUMPI DUP4 PUSH2 0x75E DUP8 SWAP4 DUP6 DUP4 SWAP5 ADD PUSH2 0x2925 JUMP JUMPDEST SWAP11 ADD SWAP7 ADD SWAP4 ADD SWAP1 SWAP2 DUP10 SWAP8 SWAP7 SWAP6 SWAP5 SWAP3 PUSH2 0x64A JUMP JUMPDEST PUSH1 0x64 DUP4 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4141393620696E76616C69642061676772656761746F72000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x1A7 JUMPI PUSH1 0x20 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI PUSH2 0x807 PUSH2 0x22D9 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP1 DUP2 SLOAD SWAP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x8 SHR AND SWAP3 DUP4 ISZERO PUSH2 0xA15 JUMPI PUSH6 0xFFFFFFFFFFFF DUP2 PUSH1 0x98 SHR AND DUP1 ISZERO PUSH2 0x9B7 JUMPI TIMESTAMP LT PUSH2 0x959 JUMPI PUSH1 0x0 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 SWAP5 DUP6 SWAP5 PUSH32 0xFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000FF DUP7 SWAP6 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xB7C918E0E249F999E965CAFEB6C664271B3F4317D296461500E71DA39F0CBDA3 CALLER SWAP2 DUP1 PUSH2 0x8E5 DUP8 DUP7 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 AND GAS CALL PUSH2 0x8F3 PUSH2 0x2579 JUMP JUMPDEST POP ISZERO PUSH2 0x8FB JUMPI STOP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6661696C656420746F207769746864726177207374616B650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP6 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B65207769746864726177616C206973206E6F74206475650000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP7 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D7573742063616C6C20756E6C6F636B5374616B652829206669727374000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP6 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207374616B6520746F207769746864726177000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x1A7 JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH4 0xFFFFFFFF DUP2 PUSH1 0x78 SHR AND SWAP1 DUP2 ISZERO PUSH2 0xBE7 JUMPI PUSH1 0xFF AND ISZERO PUSH2 0xB89 JUMPI PUSH6 0xFFFFFFFFFFFF SWAP1 DUP2 TIMESTAMP AND ADD SWAP2 DUP2 DUP4 GT PUSH2 0xB5A JUMPI DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFF000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH25 0xFFFFFFFFFFFF00000000000000000000000000000000000000 PUSH1 0x98 DUP6 SWAP1 SHL AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE CALLER SWAP1 PUSH32 0xFA9B3C14CC825C412C9ED81B3BA365A5B459439403F18829E572ED53A4180F0A SWAP1 PUSH1 0x20 SWAP1 LOG2 STOP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x616C726561647920756E7374616B696E67000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F74207374616B656400000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI PUSH2 0x22 PUSH2 0xC7A PUSH2 0x22D9 JUMP JUMPDEST PUSH2 0x2781 JUMP JUMPDEST CALLVALUE PUSH2 0x1A7 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1A7 JUMPI PUSH1 0x20 PUSH2 0xCD3 PUSH2 0xD26 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x22FC JUMP JUMPDEST SWAP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP3 DUP4 SWAP3 PUSH32 0x570E1A3600000000000000000000000000000000000000000000000000000000 DUP5 MSTORE DUP6 PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD SWAP2 PUSH2 0x2742 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 DUP6 PUSH32 0x0 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xDC2 JUMPI PUSH1 0x24 SWAP3 PUSH1 0x0 SWAP3 PUSH2 0xD91 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 PUSH32 0x6CA7B80600000000000000000000000000000000000000000000000000000000 DUP4 MSTORE AND PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0xDB4 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xDBB JUMPI JUMPDEST PUSH2 0xDAC DUP2 DUP4 PUSH2 0x2227 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2716 JUMP JUMPDEST SWAP1 DUP4 PUSH2 0xD61 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A7 JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A7 JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI PUSH2 0xE3F PUSH2 0x22D9 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1A7 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xE63 DUP4 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x22FC JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 CALLDATACOPY DUP2 ADD DUP5 DUP2 MSTORE SUB SWAP2 GAS DELEGATECALL PUSH2 0xE7E PUSH2 0x2579 JUMP JUMPDEST SWAP1 PUSH2 0xEC3 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH32 0x9941055400000000000000000000000000000000000000000000000000000000 DUP5 MSTORE ISZERO ISZERO PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP1 PUSH2 0x2400 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A7 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xF13 PUSH2 0x22D9 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A7 JUMPI PUSH2 0xF3A CALLDATASIZE PUSH2 0x2351 JUMP JUMPDEST PUSH2 0xF45 SWAP3 SWAP2 SWAP3 PUSH2 0x2A01 JUMP JUMPDEST PUSH2 0xF4E DUP4 PUSH2 0x25C1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0xFC6 JUMPI POP PUSH1 0x0 SWAP3 PUSH32 0xBB47EE3E183A558B1A2FF0874B079F3FC5478B7454EACF2BFC5AF2FF5878F972 PUSH1 0x0 DUP1 LOG1 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0xF96 JUMPI PUSH2 0x24B DUP6 DUP6 PUSH2 0x3B91 JUMP JUMPDEST SWAP1 SWAP2 SWAP4 PUSH1 0x1 SWAP1 PUSH2 0xFBC PUSH2 0xFAA DUP8 DUP10 DUP8 PUSH2 0x26D6 JUMP JUMPDEST PUSH2 0xFB4 DUP9 DUP7 PUSH2 0x2693 JUMP JUMPDEST MLOAD SWAP1 DUP9 PUSH2 0x354A JUMP JUMPDEST ADD SWAP5 ADD SWAP2 SWAP1 PUSH2 0xF85 JUMP JUMPDEST PUSH2 0xFF1 PUSH2 0xFEA PUSH2 0xFD8 DUP4 DUP6 SWAP8 SWAP6 PUSH2 0x2693 JUMP JUMPDEST MLOAD PUSH2 0xFE4 DUP5 DUP10 DUP8 PUSH2 0x26D6 JUMP JUMPDEST DUP5 PUSH2 0x2A3A JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x3D02 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP2 DUP4 AND PUSH2 0x1185 JUMPI PUSH2 0x1120 JUMPI PUSH2 0x101B SWAP1 PUSH2 0x3D02 JUMP JUMPDEST SWAP2 AND PUSH2 0x10BB JUMPI PUSH2 0x1030 JUMPI PUSH1 0x1 ADD SWAP3 SWAP1 SWAP3 PUSH2 0xF51 JUMP JUMPDEST PUSH1 0xA4 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x220266B600000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x41413332207061796D61737465722065787069726564206F72206E6F74206475 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6500000000000000000000000000000000000000000000000000000000000000 PUSH1 0x84 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 DUP3 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x220266B600000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x41413334207369676E6174757265206572726F72000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 DUP4 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x220266B600000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x414132322065787069726564206F72206E6F7420647565000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 DUP5 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x220266B600000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x41413234207369676E6174757265206572726F72000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x1A7 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1236 PUSH2 0x22D9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 PUSH1 0x40 MLOAD PUSH2 0x1246 DUP2 PUSH2 0x218F JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0xA0 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x80 PUSH1 0x40 MLOAD PUSH2 0x127B DUP2 PUSH2 0x218F JUMP JUMPDEST PUSH1 0x1 DUP4 SLOAD SWAP4 DUP5 DUP4 MSTORE ADD SLOAD SWAP1 PUSH1 0x20 DUP2 ADD SWAP1 PUSH1 0xFF DUP4 AND ISZERO ISZERO DUP3 MSTORE PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP3 ADD DUP2 DUP6 PUSH1 0x8 SHR AND DUP2 MSTORE PUSH4 0xFFFFFFFF SWAP4 PUSH1 0x60 DUP5 ADD SWAP4 DUP6 DUP8 PUSH1 0x78 SHR AND DUP6 MSTORE PUSH6 0xFFFFFFFFFFFF SWAP8 DUP9 SWAP2 ADD SWAP7 PUSH1 0x98 SHR AND DUP7 MSTORE PUSH1 0x40 MLOAD SWAP8 DUP9 MSTORE MLOAD ISZERO ISZERO PUSH1 0x20 DUP9 ADD MSTORE MLOAD AND PUSH1 0x40 DUP7 ADD MSTORE MLOAD AND PUSH1 0x60 DUP5 ADD MSTORE MLOAD AND PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A7 JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI PUSH1 0x20 PUSH2 0x1331 PUSH2 0x22D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x134E PUSH2 0x232A JUMP JUMPDEST SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 MSTORE DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x40 SHL AND OR DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A7 JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI PUSH2 0x13E7 PUSH2 0x22D9 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD SWAP2 DUP3 DUP5 GT PUSH2 0x14E7 JUMPI PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SWAP6 DUP4 SWAP6 PUSH2 0x142B DUP5 DUP11 PUSH2 0x256C JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xD1C19FBCD4551A5EDFB66D43D2E337C04837AFDA3482B42BDF569A8FCCDAE5FB SWAP2 LOG2 AND GAS CALL PUSH2 0x1481 PUSH2 0x2579 JUMP JUMPDEST POP ISZERO PUSH2 0x1489 JUMPI STOP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6661696C656420746F2077697468647261770000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576974686472617720616D6F756E7420746F6F206C6172676500000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x1A7 JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI PUSH2 0x157C PUSH2 0x22D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1599 PUSH2 0x232A JUMP JUMPDEST SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A7 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI PUSH1 0x4 CALLDATALOAD PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x1A7 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1651 DUP2 SLOAD PUSH2 0x253F JUMP JUMPDEST SWAP1 SSTORE STOP JUMPDEST PUSH1 0x20 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI PUSH1 0x4 CALLDATALOAD PUSH4 0xFFFFFFFF SWAP2 DUP3 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1A7 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 DUP3 ISZERO PUSH2 0x192F JUMPI PUSH1 0x1 DUP5 ADD SLOAD SWAP1 DUP2 PUSH1 0x78 SHR AND DUP4 LT PUSH2 0x18D1 JUMPI PUSH2 0x16D7 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 CALLVALUE SWAP2 PUSH1 0x8 SHR AND PUSH2 0x2532 JUMP JUMPDEST SWAP4 DUP5 ISZERO PUSH2 0x1873 JUMPI DUP2 DUP6 GT PUSH2 0x1815 JUMPI SWAP1 PUSH6 0xFFFFFFFFFFFF PUSH2 0x17E4 SWAP3 SLOAD PUSH1 0x40 MLOAD SWAP1 PUSH2 0x16FF DUP3 PUSH2 0x218F JUMP JUMPDEST DUP2 MSTORE DUP5 DUP2 ADD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x40 DUP3 ADD SWAP1 DUP9 AND DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x80 DUP5 ADD SWAP4 PUSH1 0x0 DUP6 MSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x0 DUP10 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 MLOAD DUP2 SSTORE ADD SWAP5 MLOAD ISZERO ISZERO SWAP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000000000 PUSH1 0xFF PUSH19 0xFFFFFFFF000000000000000000000000000000 PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP10 SLOAD SWAP5 MLOAD PUSH1 0x8 SHL AND SWAP5 MLOAD PUSH1 0x78 SHL AND SWAP5 AND SWAP2 AND OR OR OR DUP4 SSTORE MLOAD AND PUSH32 0xFFFFFFFFFFFFFF000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH25 0xFFFFFFFFFFFF00000000000000000000000000000000000000 DUP4 SLOAD SWAP3 PUSH1 0x98 SHL AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD MSTORE PUSH32 0xA5AE833D0BB1DCD632D98A8B70973E8516812898E19BF27B70071EBC8DC52C01 PUSH1 0x40 CALLER SWAP3 LOG2 STOP JUMPDEST PUSH1 0x64 DUP4 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7374616B65206F766572666C6F77000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP4 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F207374616B65207370656369666965640000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP3 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F7420646563726561736520756E7374616B652074696D6500000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP3 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D757374207370656369667920756E7374616B652064656C6179000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x1A7 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x20 DUP2 CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1A7 JUMPI PUSH2 0x140 SWAP1 DUP3 CALLDATASIZE SUB ADD SLT PUSH2 0x1A7 JUMPI PUSH2 0x19EB PUSH1 0x20 SWAP2 PUSH1 0x4 ADD PUSH2 0x2443 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A7 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI PUSH1 0x4 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x1A7 JUMPI DUP1 PUSH32 0x6C393CB700000000000000000000000000000000000000000000000000000000 PUSH1 0x20 SWAP3 EQ SWAP1 DUP2 ISZERO PUSH2 0x1B1B JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x1AF1 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x1AC7 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x1A9D JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ DUP3 PUSH2 0x1A92 JUMP JUMPDEST PUSH32 0x3E84F02100000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP2 POP PUSH2 0x1A8B JUMP JUMPDEST PUSH32 0xCF28EF9700000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP2 POP PUSH2 0x1A84 JUMP JUMPDEST PUSH32 0x9D95230100000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP2 POP PUSH2 0x1A7D JUMP JUMPDEST CALLVALUE PUSH2 0x1A7 JUMPI PUSH2 0x200 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x1A7 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x1A7 JUMPI PUSH2 0x1BA7 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x22A2 JUMP JUMPDEST SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDC CALLDATASIZE ADD SWAP2 PUSH2 0x1C0 DUP4 SLT PUSH2 0x1A7 JUMPI PUSH2 0x140 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x1BE5 DUP6 PUSH2 0x218F JUMP JUMPDEST SLT PUSH2 0x1A7 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1BF7 DUP5 PUSH2 0x21DA JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x1A7 JUMPI DUP5 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x44 CALLDATALOAD DUP6 DUP3 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xE4 CALLDATALOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x104 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x1A7 JUMPI PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x124 CALLDATALOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x144 CALLDATALOAD PUSH2 0x120 DUP3 ADD MSTORE DUP2 MSTORE PUSH2 0x164 CALLDATALOAD DUP5 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP3 PUSH2 0x184 CALLDATALOAD DUP5 MSTORE PUSH2 0x1A4 CALLDATALOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1C4 CALLDATALOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1E4 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x1A7 JUMPI PUSH2 0x1CC5 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x22FC JUMP JUMPDEST SWAP3 GAS SWAP2 ADDRESS CALLER SUB PUSH2 0x2131 JUMPI DUP4 MLOAD PUSH1 0x60 DUP2 ADD MLOAD SWAP3 PUSH1 0x3F GAS MUL PUSH1 0x6 SHR PUSH2 0x2710 PUSH1 0xA0 DUP5 ADD MLOAD DUP7 ADD ADD GT PUSH2 0x2108 JUMPI PUSH1 0x0 SWAP4 DUP2 MLOAD SWAP2 DUP3 PUSH2 0x202E JUMPI JUMPDEST POP POP POP POP PUSH2 0x1D14 SWAP2 SWAP3 GAS SWAP1 SUB PUSH1 0x80 DUP6 ADD MLOAD ADD SWAP5 CALLDATASIZE SWAP2 PUSH2 0x22A2 JUMP JUMPDEST SWAP2 PUSH1 0x0 GAS DUP3 MLOAD SWAP6 PUSH2 0x1D24 DUP8 PUSH2 0x3CB6 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xE0 DUP10 ADD MLOAD AND DUP1 ISZERO PUSH1 0x0 EQ PUSH2 0x1EDB JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 MLOAD AND SWAP3 JUMPDEST GAS SWAP1 SUB ADD SWAP6 PUSH1 0x60 DUP9 ADD MLOAD SWAP1 MLOAD PUSH2 0x1ED0 JUMPI JUMPDEST PUSH1 0x80 DUP6 ADD MLOAD DUP8 SUB SWAP1 DUP2 DUP2 GT PUSH2 0x1EBC JUMPI JUMPDEST POP POP DUP6 MUL SWAP7 DUP8 DUP2 MLOAD LT PUSH2 0x1E58 JUMPI SWAP1 DUP8 PUSH2 0x1DA0 SWAP3 MLOAD SUB SWAP1 PUSH2 0x3C82 JUMP JUMPDEST POP PUSH1 0x3 DUP4 LT ISZERO PUSH2 0x1E2B JUMPI POP PUSH1 0x80 DUP7 PUSH32 0x49628FD1471006C1482DA88028E9CE4DBB080B815C9B0344D39E5A8E6EC1419F SWAP3 ADD MLOAD SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 MLOAD AND SWAP5 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xE0 DUP10 ADD MLOAD AND SWAP8 ADD MLOAD SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE ISZERO DUP10 DUP4 ADD MSTORE DUP8 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE LOG4 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x24 SWAP3 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x84 DUP4 DUP11 PUSH1 0x40 MLOAD SWAP2 PUSH32 0x220266B600000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x414135312070726566756E642062656C6F772061637475616C476173436F7374 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP2 SWAP1 SUB PUSH1 0xA MUL DIV SWAP1 SWAP6 ADD SWAP5 DUP10 DUP1 PUSH2 0x1D85 JUMP JUMPDEST PUSH1 0xA0 DUP9 ADD MLOAD ADD PUSH2 0x1D75 JUMP JUMPDEST SWAP3 DUP4 DUP9 MLOAD PUSH2 0x1EEA JUMPI JUMPDEST POP PUSH2 0x1D64 JUMP JUMPDEST PUSH1 0x3 DUP9 LT ISZERO PUSH2 0x1FFF JUMPI PUSH1 0x2 DUP9 SUB ISZERO PUSH2 0x1EE4 JUMPI PUSH1 0xA0 DUP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP13 SWAP12 SWAP11 ADD MLOAD DUP2 EXTCODESIZE ISZERO PUSH2 0x1A7 JUMPI DUP9 PUSH1 0x0 SWAP2 DUP10 DUP4 PUSH2 0x1F5B SWAP6 PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP7 DUP3 SWAP6 PUSH32 0x7C627B2100000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x2400 JUMP JUMPDEST DUP12 DUP12 MUL PUSH1 0x44 DUP4 ADD MSTORE DUP12 PUSH1 0x64 DUP4 ADD MSTORE SUB SWAP4 CALL SWAP1 DUP2 PUSH2 0x1FEB JUMPI JUMPDEST POP PUSH2 0x1FDD JUMPI DUP11 DUP11 RETURNDATASIZE PUSH2 0x800 DUP1 DUP3 GT PUSH2 0x1FD5 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP3 DUP3 DUP3 DUP6 ADD ADD PUSH1 0x40 MSTORE DUP2 DUP5 MSTORE DUP3 DUP5 ADD RETURNDATACOPY PUSH2 0xEC3 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH32 0xAD7954BC00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x2400 JUMP JUMPDEST SWAP1 POP DUP4 PUSH2 0x1F86 JUMP JUMPDEST SWAP10 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 SWAP10 DUP12 PUSH2 0x1EE4 JUMP JUMPDEST PUSH2 0x1FF6 SWAP2 SWAP13 POP PUSH2 0x21F7 JUMP JUMPDEST PUSH1 0x0 SWAP11 DUP13 PUSH2 0x1F73 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x0 SWAP3 SWAP2 DUP4 DUP1 SWAP4 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 MLOAD AND SWAP2 ADD SWAP3 CALL ISZERO PUSH2 0x2061 JUMPI JUMPDEST DUP1 DUP1 DUP1 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x1D14 SWAP3 POP RETURNDATASIZE PUSH2 0x800 DUP1 DUP3 GT PUSH2 0x2100 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP10 DUP2 DUP4 ADD ADD PUSH1 0x40 MSTORE DUP1 DUP3 MSTORE PUSH1 0x0 DUP11 DUP4 ADD RETURNDATACOPY DUP1 MLOAD PUSH2 0x2099 JUMPI JUMPDEST POP POP PUSH1 0x1 SWAP2 PUSH2 0x2059 JUMP JUMPDEST PUSH32 0x1C4FADA7374C0A9EE8841FC38AFE82932DC0F8E69012E927F061A8BAE611A201 DUP10 DUP1 DUP9 ADD MLOAD SWAP3 PUSH2 0x20F6 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 MLOAD AND SWAP7 ADD MLOAD SWAP2 PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 SWAP5 DUP6 MSTORE DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x2400 JUMP JUMPDEST SUB SWAP1 LOG3 DUP8 DUP1 PUSH2 0x208F JUMP JUMPDEST SWAP1 POP DUP10 PUSH2 0x2072 JUMP JUMPDEST DUP9 PUSH32 0xDEADDEAD00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x64 DUP8 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4141393220696E7465726E616C2063616C6C206F6E6C79000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x21AB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x140 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x21AB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x21AB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x21AB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x21AB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x21AB JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x22AE DUP3 PUSH2 0x2268 JUMP JUMPDEST SWAP2 PUSH2 0x22BC PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x2227 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x1A7 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x1A7 JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x1A7 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x1A7 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x1A7 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x1A7 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC DUP4 ADD SLT PUSH2 0x1A7 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP4 DUP3 GT PUSH2 0x1A7 JUMPI DUP1 PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x1A7 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP4 DUP5 GT PUSH2 0x1A7 JUMPI PUSH1 0x24 DUP5 PUSH1 0x5 SHL DUP4 ADD ADD GT PUSH2 0x1A7 JUMPI PUSH1 0x24 ADD SWAP2 SWAP1 PUSH1 0x24 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x1A7 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x23F0 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x23E0 JUMP JUMPDEST SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F PUSH1 0x20 SWAP4 PUSH2 0x243C DUP2 MLOAD DUP1 SWAP3 DUP2 DUP8 MSTORE DUP8 DUP1 DUP9 ADD SWAP2 ADD PUSH2 0x23DD JUMP JUMPDEST ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x2452 DUP3 DUP3 ADD DUP3 PUSH2 0x2884 JUMP JUMPDEST SWAP1 DUP2 DUP5 MLOAD SWAP2 DUP3 CALLDATACOPY KECCAK256 SWAP1 PUSH2 0x2468 PUSH1 0x60 DUP3 ADD DUP3 PUSH2 0x2884 JUMP JUMPDEST SWAP1 DUP2 DUP6 MLOAD SWAP2 DUP3 CALLDATACOPY KECCAK256 SWAP1 PUSH2 0x100 PUSH1 0xE0 PUSH2 0x2482 DUP3 DUP5 ADD DUP5 PUSH2 0x2884 JUMP JUMPDEST SWAP1 DUP2 DUP9 MLOAD SWAP2 DUP3 CALLDATACOPY KECCAK256 SWAP3 DUP7 MLOAD SWAP5 PUSH1 0x20 DUP7 ADD SWAP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 CALLDATALOAD AND DUP9 MSTORE PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP10 DUP9 ADD MSTORE PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x80 DUP2 ADD CALLDATALOAD PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xA0 DUP2 ADD CALLDATALOAD PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xC0 DUP2 ADD CALLDATALOAD DUP3 DUP7 ADD MSTORE ADD CALLDATALOAD SWAP1 DUP4 ADD MSTORE PUSH2 0x120 SWAP1 DUP2 DUP4 ADD MSTORE DUP2 MSTORE PUSH2 0x24F6 DUP2 PUSH2 0x21DA JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 DUP4 MSTORE ADDRESS DUP2 DUP4 ADD MSTORE CHAINID PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x60 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 DUP3 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x21AB JUMPI MSTORE MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xB5A JUMPI JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xB5A JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xB5A JUMPI JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x25A4 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x258A DUP3 PUSH2 0x2268 JUMP JUMPDEST SWAP2 PUSH2 0x2598 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x2227 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x21AB JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x25CB DUP3 PUSH2 0x25A9 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x25DB PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x2227 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x2609 DUP3 SWAP6 PUSH2 0x25A9 JUMP JUMPDEST ADD SWAP2 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x261B JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP3 MLOAD PUSH2 0x2629 DUP2 PUSH2 0x218F JUMP JUMPDEST DUP4 MLOAD PUSH2 0x2634 DUP2 PUSH2 0x21DA JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 DUP5 SWAP2 DUP2 DUP4 DUP3 ADD MSTORE DUP2 DUP8 DUP3 ADD MSTORE DUP2 PUSH1 0x60 DUP2 DUP2 DUP5 ADD MSTORE PUSH1 0x80 SWAP3 DUP3 DUP5 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE DUP7 MSTORE DUP2 DUP6 DUP8 ADD MSTORE DUP2 DUP10 DUP8 ADD MSTORE DUP6 ADD MSTORE DUP4 ADD MSTORE DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x260E JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x26A7 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x26A7 JUMPI PUSH1 0x5 SHL DUP2 ADD CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEC1 DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x1A7 JUMPI ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1A7 JUMPI MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x1A7 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 PUSH1 0x20 SWAP5 SWAP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP4 DUP2 DUP7 MSTORE DUP7 DUP7 ADD CALLDATACOPY PUSH1 0x0 DUP6 DUP3 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH32 0x2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4 PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x27C3 CALLVALUE DUP6 PUSH2 0x3C82 JUMP JUMPDEST SWAP4 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND SWAP3 LOG2 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x26A7 JUMPI PUSH1 0x5 SHL DUP2 ADD CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA1 DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x1A7 JUMPI ADD SWAP1 JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x1A7 JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1A7 JUMPI PUSH1 0x20 ADD SWAP2 DUP2 PUSH1 0x5 SHL CALLDATASIZE SUB DUP4 SGT PUSH2 0x1A7 JUMPI JUMP JUMPDEST CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x1A7 JUMPI SWAP1 JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x1A7 JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1A7 JUMPI PUSH1 0x20 ADD SWAP2 DUP2 CALLDATASIZE SUB DUP4 SGT PUSH2 0x1A7 JUMPI JUMP JUMPDEST SWAP1 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP3 CALLDATASIZE SUB ADD DUP2 SLT ISZERO PUSH2 0x1A7 JUMPI ADD PUSH1 0x20 DUP2 CALLDATALOAD SWAP2 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1A7 JUMPI DUP2 CALLDATASIZE SUB DUP4 SGT PUSH2 0x1A7 JUMPI JUMP JUMPDEST PUSH2 0x140 SWAP2 DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x1A7 JUMPI PUSH2 0x299B PUSH2 0x2980 PUSH2 0x29FE SWAP6 PUSH2 0x29DF SWAP4 DUP6 MSTORE PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x2970 PUSH1 0x40 DUP8 ADD DUP8 PUSH2 0x28D5 JUMP JUMPDEST SWAP1 SWAP2 DUP1 PUSH1 0x40 DUP9 ADD MSTORE DUP7 ADD SWAP2 PUSH2 0x2742 JUMP JUMPDEST PUSH2 0x298D PUSH1 0x60 DUP7 ADD DUP7 PUSH2 0x28D5 JUMP JUMPDEST SWAP1 DUP6 DUP4 SUB PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x2742 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD CALLDATALOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP5 ADD CALLDATALOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP5 ADD CALLDATALOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP5 ADD CALLDATALOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 PUSH2 0x29D2 DUP2 DUP7 ADD DUP7 PUSH2 0x28D5 JUMP JUMPDEST SWAP2 DUP6 DUP5 SUB SWAP1 DUP7 ADD MSTORE PUSH2 0x2742 JUMP JUMPDEST SWAP2 PUSH2 0x29F0 PUSH2 0x120 SWAP2 DUP3 DUP2 ADD SWAP1 PUSH2 0x28D5 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 DUP2 DUP6 SUB SWAP2 ADD MSTORE PUSH2 0x2742 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD EQ PUSH2 0x2A10 JUMPI PUSH1 0x2 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP3 SWAP1 SWAP2 PUSH1 0x0 SWAP3 GAS SWAP1 DUP3 MLOAD DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x1A7 JUMPI DUP2 MSTORE PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 SHR PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xA0 DUP3 ADD CALLDATALOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x100 PUSH1 0xC0 DUP4 ADD CALLDATALOAD DUP2 DUP4 ADD MSTORE PUSH1 0xE0 DUP4 ADD CALLDATALOAD PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x2AC2 DUP2 DUP5 ADD DUP5 PUSH2 0x2884 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x352E JUMPI PUSH1 0x34 DUP2 LT PUSH2 0x34D0 JUMPI DUP1 PUSH1 0x14 GT PUSH2 0x1A7 JUMPI DUP1 PUSH1 0x24 GT PUSH2 0x1A7 JUMPI PUSH1 0x34 GT PUSH2 0x1A7 JUMPI PUSH1 0x24 DUP2 ADD CALLDATALOAD PUSH1 0x80 SHR PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x14 DUP2 ADD CALLDATALOAD PUSH1 0x80 SHR PUSH1 0x80 DUP5 ADD MSTORE CALLDATALOAD PUSH1 0x60 SHR PUSH1 0xE0 DUP4 ADD MSTORE JUMPDEST PUSH2 0x2B14 DUP4 PUSH2 0x2443 JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MSTORE PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD OR PUSH1 0x60 DUP5 ADD MLOAD OR PUSH1 0x80 DUP5 ADD MLOAD OR PUSH1 0xE0 DUP6 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 DUP7 ADD CALLDATALOAD SWAP1 PUSH1 0xA0 DUP7 ADD MLOAD OR OR OR GT PUSH2 0x3472 JUMPI PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 DUP4 ADD MLOAD ADD PUSH1 0x80 DUP4 ADD MLOAD ADD PUSH1 0xA0 DUP4 ADD MLOAD ADD PUSH1 0xC0 DUP4 ADD MLOAD ADD SWAP1 DUP3 ADD MLOAD MUL DUP5 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 MLOAD AND PUSH2 0x2BA2 PUSH1 0x40 DUP7 ADD DUP7 PUSH2 0x2884 JUMP JUMPDEST DUP1 PUSH2 0x3183 JUMPI JUMPDEST POP POP PUSH2 0x2C17 PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xE0 DUP6 ADD MLOAD AND SWAP4 PUSH1 0x0 SWAP1 DUP6 ISZERO PUSH2 0x3151 JUMPI JUMPDEST PUSH1 0x40 ADD MLOAD DUP3 DUP12 ADD MLOAD PUSH1 0x0 DUP7 DUP12 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP4 PUSH32 0x8803E45100000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x3CE0 JUMP JUMPDEST SUB SWAP4 CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x311D JUMPI JUMPDEST POP PUSH2 0x2CCB JUMPI RETURNDATASIZE DUP12 PUSH2 0x800 DUP1 DUP4 GT PUSH2 0x2CC3 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 DUP2 DUP5 ADD ADD PUSH1 0x40 MSTORE DUP1 DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEC3 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH32 0x65C8FD4D00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x60 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0xD PUSH1 0x64 DUP5 ADD MSTORE PUSH32 0x4141323320726576657274656400000000000000000000000000000000000000 PUSH1 0x84 DUP5 ADD MSTORE PUSH1 0xA0 PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0xA4 DUP4 ADD SWAP1 PUSH2 0x2400 JUMP JUMPDEST SWAP2 POP DUP3 PUSH2 0x2C35 JUMP JUMPDEST SWAP2 ISZERO PUSH2 0x3097 JUMPI JUMPDEST POP SWAP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 MLOAD AND PUSH1 0x20 DUP5 ADD MLOAD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x40 SHR PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP3 SLOAD SWAP3 PUSH2 0x2D24 DUP5 PUSH2 0x253F JUMP JUMPDEST SWAP1 SSTORE AND SUB PUSH2 0x3032 JUMPI PUSH1 0x60 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xE0 DUP3 ADD MLOAD AND PUSH2 0x2DE6 JUMPI JUMPDEST GAS DUP7 SUB SWAP1 PUSH1 0x80 PUSH1 0x40 DUP3 ADD MLOAD SWAP2 ADD MLOAD ADD LT PUSH2 0x2D81 JUMPI POP PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 SWAP2 PUSH1 0xA0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 GAS SWAP1 SUB ADD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x220266B600000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x41413430206F76657220766572696669636174696F6E4761734C696D69740000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP9 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 POP SWAP7 POP DUP4 MLOAD SWAP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xE0 DUP11 ADD MLOAD AND SWAP9 DUP10 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP4 DUP2 LT PUSH2 0x2FCD JUMPI SWAP11 PUSH1 0x80 PUSH1 0x0 SWAP4 DUP6 SWAP4 DUP5 PUSH2 0x2E78 SWAP14 SWAP15 SWAP16 SUB SWAP1 SSTORE ADD MLOAD SWAP1 DUP4 PUSH1 0x20 DUP11 ADD MLOAD SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP14 DUP2 SWAP7 DUP3 SWAP6 PUSH32 0x703AE88F00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE DUP13 PUSH1 0x4 DUP6 ADD PUSH2 0x3CE0 JUMP JUMPDEST SUB SWAP4 CALL SWAP7 DUP8 PUSH1 0x0 SWAP2 PUSH1 0x0 SWAP10 PUSH2 0x2F40 JUMPI JUMPDEST POP PUSH2 0x2F30 JUMPI RETURNDATASIZE DUP11 PUSH2 0x800 DUP1 DUP4 GT PUSH2 0x2F28 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 DUP2 DUP5 ADD ADD PUSH1 0x40 MSTORE DUP1 DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEC3 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH32 0x65C8FD4D00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x60 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0xD PUSH1 0x64 DUP5 ADD MSTORE PUSH32 0x4141333320726576657274656400000000000000000000000000000000000000 PUSH1 0x84 DUP5 ADD MSTORE PUSH1 0xA0 PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0xA4 DUP4 ADD SWAP1 PUSH2 0x2400 JUMP JUMPDEST SWAP2 POP DUP3 PUSH2 0x2E9A JUMP JUMPDEST SWAP9 SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 SWAP3 PUSH2 0x2D4F JUMP JUMPDEST SWAP2 POP SWAP8 POP RETURNDATASIZE SWAP1 DUP2 PUSH1 0x0 DUP3 RETURNDATACOPY PUSH2 0x2F55 DUP3 DUP3 PUSH2 0x2227 JUMP JUMPDEST PUSH1 0x40 DUP2 DUP4 DUP2 ADD SUB SLT PUSH2 0x1A7 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1A7 JUMPI DUP3 DUP2 ADD PUSH1 0x1F DUP4 DUP4 ADD ADD SLT ISZERO PUSH2 0x1A7 JUMPI DUP2 DUP2 ADD MLOAD SWAP2 PUSH2 0x2F90 DUP4 PUSH2 0x2268 JUMP JUMPDEST SWAP4 PUSH2 0x2F9E PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x2227 JUMP JUMPDEST DUP4 DUP6 MSTORE DUP3 ADD PUSH1 0x20 DUP5 DUP4 DUP6 ADD ADD ADD GT PUSH2 0x1A7 JUMPI PUSH1 0x20 SWAP3 PUSH2 0x2FC4 SWAP2 DUP5 DUP1 DUP8 ADD SWAP2 DUP6 ADD ADD PUSH2 0x23DD JUMP JUMPDEST ADD MLOAD SWAP8 CODESIZE PUSH2 0x2E88 JUMP JUMPDEST PUSH1 0x84 DUP12 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x220266B600000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x41413331207061796D6173746572206465706F73697420746F6F206C6F770000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x220266B600000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4141323520696E76616C6964206163636F756E74206E6F6E6365000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 DUP5 GT PUSH2 0x30B8 JUMPI DUP4 SWAP1 SUB SWAP1 SSTORE CODESIZE PUSH2 0x2CD2 JUMP JUMPDEST PUSH1 0x84 DUP12 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x220266B600000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x41413231206469646E2774207061792070726566756E64000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3149 JUMPI JUMPDEST DUP2 PUSH2 0x3139 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2227 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A7 JUMPI MLOAD SWAP1 CODESIZE PUSH2 0x2C23 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x312C JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP7 DUP2 GT PUSH1 0x0 EQ PUSH2 0x3179 JUMPI POP PUSH1 0x40 PUSH1 0x0 JUMPDEST SWAP2 SWAP1 POP PUSH2 0x2BD5 JUMP JUMPDEST PUSH1 0x40 SWAP1 DUP8 SUB PUSH2 0x3171 JUMP JUMPDEST DUP3 EXTCODESIZE PUSH2 0x340D JUMPI PUSH1 0x40 DUP10 MLOAD ADD MLOAD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH32 0x570E1A3600000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP3 PUSH1 0x4 DUP4 ADD MSTORE DUP2 PUSH1 0x0 DUP2 PUSH2 0x31D1 PUSH1 0x24 DUP3 ADD DUP10 DUP12 PUSH2 0x2742 JUMP JUMPDEST SUB SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP1 CALL SWAP1 DUP2 ISZERO PUSH2 0xDC2 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x33EE JUMPI JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0x3389 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SUB PUSH2 0x3324 JUMPI EXTCODESIZE ISZERO PUSH2 0x32BF JUMPI PUSH1 0x14 GT PUSH2 0x1A7 JUMPI DUP2 SWAP1 PUSH32 0xD51A9C61267AA6196961883ECF5FF2DA6619C37DAC0FA92122513FB32C032D2D PUSH1 0x40 PUSH1 0x20 DUP12 ADD MLOAD SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xE0 DUP14 MLOAD ADD MLOAD AND DUP3 MLOAD SWAP2 CALLDATALOAD PUSH1 0x60 SHR DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG3 CODESIZE DUP1 PUSH2 0x2BA8 JUMP JUMPDEST PUSH1 0x84 DUP13 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x220266B600000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4141313520696E6974436F6465206D757374206372656174652073656E646572 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 DUP14 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x220266B600000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4141313420696E6974436F6465206D7573742072657475726E2073656E646572 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 DUP14 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x220266B600000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4141313320696E6974436F6465206661696C6564206F72204F4F470000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x3407 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xDBB JUMPI PUSH2 0xDAC DUP2 DUP4 PUSH2 0x2227 JUMP JUMPDEST CODESIZE PUSH2 0x321B JUMP JUMPDEST PUSH1 0x84 DUP13 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x220266B600000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x414131302073656E64657220616C726561647920636F6E737472756374656400 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41413934206761732076616C756573206F766572666C6F770000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4141393320696E76616C6964207061796D6173746572416E6444617461000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP PUSH1 0x0 PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x2B0B JUMP JUMPDEST SWAP1 SWAP3 SWAP2 GAS SWAP1 PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x0 PUSH1 0x40 SWAP4 DUP5 MLOAD SWAP8 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP10 PUSH2 0x358B PUSH1 0x60 DUP5 ADD DUP5 PUSH2 0x2884 JUMP JUMPDEST DUP7 PUSH1 0x3 DUP3 GT PUSH2 0x3B89 JUMPI JUMPDEST PUSH32 0x18AD2E1200000000000000000000000000000000000000000000000000000000 SWAP5 AND DUP5 EQ DUP8 EQ PUSH2 0x3A30 JUMPI POP POP POP PUSH2 0x3665 SWAP2 PUSH2 0x3750 SWAP2 PUSH1 0x20 DUP9 ADD MLOAD PUSH2 0x35ED DUP11 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x20 DUP6 ADD MSTORE DUP12 PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x64 DUP5 ADD SWAP1 PUSH2 0x2925 JUMP JUMPDEST SWAP1 PUSH1 0x44 DUP4 ADD MSTORE SUB SWAP1 PUSH2 0x3625 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP3 DUP4 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x2227 JUMP JUMPDEST PUSH2 0x3744 DUP10 MLOAD SWAP5 DUP6 SWAP3 PUSH31 0x42DC5300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x200 PUSH1 0x24 DUP6 ADD MSTORE PUSH2 0x224 DUP5 ADD SWAP1 PUSH2 0x2400 JUMP JUMPDEST PUSH2 0x3713 PUSH1 0x44 DUP5 ADD DUP12 PUSH1 0x80 PUSH2 0x1A0 SWAP2 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 MLOAD AND DUP7 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP8 ADD MSTORE DUP4 DUP3 ADD MLOAD DUP5 DUP8 ADD MSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xE0 DUP3 ADD MLOAD AND PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH2 0x120 DUP1 SWAP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH2 0x140 DUP6 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH2 0x160 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH2 0x180 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDC DUP4 DUP3 SUB ADD PUSH2 0x204 DUP5 ADD MSTORE DUP9 PUSH2 0x2400 JUMP JUMPDEST SUB SWAP1 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x2227 JUMP JUMPDEST PUSH1 0x20 SWAP3 DUP2 DUP5 DUP1 SWAP4 MLOAD SWAP2 ADD DUP3 ADDRESS GAS CALL PUSH1 0x0 MLOAD SWAP9 DUP7 MSTORE ISZERO PUSH2 0x3772 JUMPI JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 POP PUSH1 0x0 RETURNDATASIZE DUP4 EQ PUSH2 0x3A22 JUMPI JUMPDEST PUSH32 0xDEADDEAD00000000000000000000000000000000000000000000000000000000 SUB PUSH2 0x380D JUMPI PUSH1 0x84 DUP7 DUP7 DUP1 MLOAD SWAP2 PUSH32 0x220266B600000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x41413935206F7574206F66206761730000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x389B SWAP1 DUP3 DUP6 SWAP7 SWAP5 SWAP6 ADD MLOAD DUP7 MLOAD SWAP1 PUSH32 0xF62676F440FF169A3A9AFDBF812E89E7F95975EE8E5C31214FFDEF631C5F4792 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 MLOAD AND SWAP4 ADD MLOAD RETURNDATASIZE SWAP1 PUSH2 0x800 DUP1 DUP4 GT PUSH2 0x3A1A JUMPI JUMPDEST POP DUP9 MLOAD SWAP2 DUP9 DUP2 DUP5 ADD ADD DUP11 MSTORE DUP1 DUP4 MSTORE PUSH1 0x0 DUP10 DUP5 ADD RETURNDATACOPY PUSH2 0x3891 DUP10 MLOAD SWAP3 DUP4 SWAP3 DUP4 MSTORE DUP11 DUP11 DUP5 ADD MSTORE DUP11 DUP4 ADD SWAP1 PUSH2 0x2400 JUMP JUMPDEST SUB SWAP1 LOG3 GAS SWAP1 PUSH2 0x256C JUMP JUMPDEST PUSH2 0x38AB PUSH1 0x80 DUP7 ADD SWAP2 DUP3 MLOAD SWAP1 PUSH2 0x2532 JUMP JUMPDEST SWAP3 GAS SWAP6 PUSH1 0x0 DUP2 MLOAD SWAP8 PUSH2 0x38BC DUP10 PUSH2 0x3CB6 JUMP JUMPDEST PUSH1 0xE0 DUP11 ADD SWAP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP9 DUP10 DUP12 MLOAD AND DUP1 ISZERO PUSH1 0x0 EQ PUSH2 0x3A09 JUMPI POP DUP10 DUP13 MLOAD AND SWAP4 JUMPDEST GAS SWAP1 SUB ADD SWAP7 PUSH1 0x60 DUP13 ADD MLOAD SWAP2 MLOAD PUSH2 0x39FC JUMPI JUMPDEST MLOAD DUP8 SUB SWAP1 DUP2 DUP2 GT PUSH2 0x39E8 JUMPI JUMPDEST POP POP DUP6 MUL SWAP10 DUP5 DUP5 ADD SWAP1 DUP12 DUP3 MLOAD LT PUSH2 0x3986 JUMPI POP DUP3 SWAP2 DUP12 PUSH2 0x3929 SWAP3 MLOAD SUB SWAP1 PUSH2 0x3C82 JUMP JUMPDEST POP PUSH2 0x1E2B JUMPI POP SWAP2 DUP8 DUP5 SWAP3 PUSH1 0x0 DUP5 PUSH32 0x49628FD1471006C1482DA88028E9CE4DBB080B815C9B0344D39E5A8E6EC1419F SWAP8 PUSH1 0x80 SWAP8 ADD MLOAD SWAP9 DUP1 DUP13 MLOAD AND SWAP11 MLOAD AND SWAP11 ADD MLOAD SWAP5 DUP3 MLOAD SWAP6 DUP7 MSTORE DUP6 ADD MSTORE DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE LOG4 SWAP1 CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x376A JUMP JUMPDEST PUSH1 0x84 SWAP1 DUP9 DUP8 DUP1 MLOAD SWAP3 PUSH32 0x220266B600000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x414135312070726566756E642062656C6F772061637475616C476173436F7374 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP2 SWAP1 SUB PUSH1 0xA MUL DIV SWAP1 SWAP6 ADD SWAP5 CODESIZE DUP1 PUSH2 0x3908 JUMP JUMPDEST SWAP1 PUSH1 0xA0 DUP13 ADD MLOAD ADD SWAP1 PUSH2 0x38FC JUMP JUMPDEST SWAP4 DUP3 MLOAD ISZERO PUSH2 0x38EB JUMPI PUSH1 0x0 SWAP6 POP PUSH2 0x38EB JUMP JUMPDEST SWAP2 POP CODESIZE PUSH2 0x3865 JUMP JUMPDEST POP DUP2 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 MLOAD PUSH2 0x3784 JUMP JUMPDEST PUSH2 0x3B83 SWAP5 POP DUP3 SWAP4 POP SWAP1 PUSH2 0x3A78 SWAP2 PUSH31 0x42DC5300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 PUSH2 0x3B57 SWAP6 ADD MSTORE PUSH2 0x200 PUSH1 0x24 DUP7 ADD MSTORE PUSH2 0x224 DUP6 ADD SWAP2 PUSH2 0x2742 JUMP JUMPDEST PUSH2 0x3B26 PUSH1 0x44 DUP5 ADD DUP10 PUSH1 0x80 PUSH2 0x1A0 SWAP2 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 MLOAD AND DUP7 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP8 ADD MSTORE DUP4 DUP3 ADD MLOAD DUP5 DUP8 ADD MSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xE0 DUP3 ADD MLOAD AND PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH2 0x120 DUP1 SWAP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH2 0x140 DUP6 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH2 0x160 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH2 0x180 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDC DUP4 DUP3 SUB ADD PUSH2 0x204 DUP5 ADD MSTORE DUP7 PUSH2 0x2400 JUMP JUMPDEST SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 ADD DUP11 MSTORE DUP10 PUSH2 0x2227 JUMP JUMPDEST DUP8 PUSH2 0x3750 JUMP JUMPDEST POP DUP2 CALLDATALOAD PUSH2 0x3595 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 ISZERO PUSH2 0x3C24 JUMPI PUSH1 0x0 DUP1 DUP1 SWAP4 DUP2 SWAP4 GAS CALL PUSH2 0x3BBE PUSH2 0x2579 JUMP JUMPDEST POP ISZERO PUSH2 0x3BC6 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41413931206661696C65642073656E6420746F2062656E656669636961727900 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4141393020696E76616C69642062656E65666963696172790000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0x3CB0 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2532 JUMP JUMPDEST DUP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x100 DUP3 ADD MLOAD SWAP2 ADD MLOAD DUP1 DUP3 EQ PUSH2 0x3CDC JUMPI BASEFEE ADD DUP1 DUP3 LT ISZERO PUSH2 0x3CD7 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x3CF8 PUSH1 0x40 SWAP3 SWAP6 SWAP5 SWAP4 SWAP6 PUSH1 0x60 DUP4 MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH2 0x2925 JUMP JUMPDEST SWAP5 PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3D8F JUMPI PUSH1 0x0 PUSH1 0x40 DUP1 MLOAD PUSH2 0x3D17 DUP2 PUSH2 0x220B JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SWAP1 PUSH1 0x40 PUSH6 0xFFFFFFFFFFFF SWAP2 DUP3 DUP2 PUSH1 0xA0 SHR AND SWAP1 DUP2 ISZERO PUSH2 0x3D87 JUMPI JUMPDEST PUSH1 0xD0 SHR SWAP3 DUP3 MLOAD SWAP2 PUSH2 0x3D62 DUP4 PUSH2 0x220B JUMP JUMPDEST DUP6 DUP4 MSTORE DUP5 PUSH1 0x20 DUP5 ADD MSTORE AND SWAP2 DUP3 SWAP2 ADD MSTORE TIMESTAMP GT SWAP1 DUP2 ISZERO PUSH2 0x3D7F JUMPI POP SWAP1 SWAP2 JUMP JUMPDEST SWAP1 POP TIMESTAMP LT SWAP1 SWAP2 JUMP JUMPDEST DUP4 SWAP2 POP PUSH2 0x3D52 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 PUSH1 0x0 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY NUMBER PUSH28 0x55A0BA03D9E62CB130B1A5B39234FE52CCCEAC94F18F2C86B0EFA3F 0x27 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x1C3 SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0x570E1A36 EQ PUSH2 0x25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18A JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18A JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP5 GT PUSH2 0x186 JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x186 JUMPI DUP4 PUSH1 0x4 ADD CALLDATALOAD DUP3 DUP2 GT PUSH2 0x182 JUMPI CALLDATASIZE PUSH1 0x24 DUP3 DUP8 ADD ADD GT PUSH2 0x182 JUMPI DUP1 PUSH1 0x14 GT PUSH2 0x182 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEC DUP2 ADD SWAP3 DUP1 DUP5 GT PUSH2 0x155 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x3F DUP2 PUSH1 0xB DUP6 ADD AND ADD AND DUP4 ADD SWAP1 DUP4 DUP3 LT SWAP1 DUP3 GT OR PUSH2 0x155 JUMPI SWAP3 DUP5 PUSH1 0x24 DUP2 SWAP5 DUP3 PUSH1 0xC PUSH1 0x20 SWAP11 SWAP7 DUP12 SWAP10 PUSH1 0x40 MSTORE DUP7 DUP5 MSTORE DUP10 DUP5 ADD SWAP7 PUSH1 0x38 DUP10 ADD DUP9 CALLDATACOPY DUP4 ADD ADD MSTORE MLOAD SWAP4 ADD CALLDATALOAD PUSH1 0x60 SHR GAS CALL SWAP1 DUP1 MLOAD SWAP2 ISZERO PUSH2 0x14D JUMPI JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CODESIZE PUSH2 0x12E JUMP JUMPDEST PUSH1 0x24 DUP6 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 0xEF GASPRICE 0xBF 0xD3 SAR 0xDE SWAP15 0x4D 0x27 0xE3 COINBASE 0xC2 PC MUL BLOCKHASH 0x5D ISZERO JUMPI ADDRESS PUSH16 0xEE7D71D82BD22012501CFB64736F6C63 NUMBER STOP ADDMOD OR STOP CALLER ","sourceMap":"854:29082:3:-:0;;;;;;;1713:1:0;1917:21;1713:1;1064:19:3;;;;-1:-1:-1;;;;;1064:19:3;;;;;;;;;;;;;;;-1:-1:-1;1064:19:3;;;;;;;854:29082;;;;;;;;1064:19;854:29082;;;;;;;;;;;1064:19;854:29082;;;-1:-1:-1;854:29082:3;;;;;1064:19;854:29082;;;-1:-1:-1;854:29082:3;;;;;-1:-1:-1;854:29082:3;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":8921,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":10006,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_struct_PackedUserOperation_calldata_dyn_calldatat_address_payable":{"entryPoint":9041,"id":null,"parameterSlots":1,"returnSlots":3},"abi_decode_available_length_bytes":{"entryPoint":8866,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bytes_calldata":{"entryPoint":8956,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_uint192":{"entryPoint":9002,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_address_payable_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_bytes":{"entryPoint":9216,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes_calldata":{"entryPoint":10050,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_struct_PackedUserOperation_calldata":{"entryPoint":10533,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_PackedUserOperation_calldata_bytes32_uint256":{"entryPoint":15584,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_struct_UserOpInfo":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"access_calldata_tail_array_struct_PackedUserOperation_calldata_dyn_calldata":{"entryPoint":10255,"id":null,"parameterSlots":2,"returnSlots":2},"access_calldata_tail_bytes_calldata":{"entryPoint":10372,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_and_zero_memory_array_array_struct_UserOpInfo_dyn":{"entryPoint":9665,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_struct_UserOpInfo_dyn":{"entryPoint":9641,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":8808,"id":null,"parameterSlots":1,"returnSlots":1},"calldata_access_bytes_calldata":{"entryPoint":10453,"id":null,"parameterSlots":2,"returnSlots":2},"calldata_array_index_access_struct_PackedUserOperation_calldata_dyn_calldata":{"entryPoint":9942,"id":null,"parameterSlots":3,"returnSlots":1},"calldata_array_index_access_struct_UserOpsPerAggregator_calldata_dyn_calldata":{"entryPoint":10191,"id":null,"parameterSlots":3,"returnSlots":1},"checked_add_uint256":{"entryPoint":9522,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":9580,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":9181,"id":null,"parameterSlots":3,"returnSlots":0},"extract_returndata":{"entryPoint":9593,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":8743,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_26292":{"entryPoint":8591,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_26293":{"entryPoint":8666,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_26317":{"entryPoint":8695,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_26384":{"entryPoint":8715,"id":null,"parameterSlots":1,"returnSlots":0},"fun_compensate":{"entryPoint":15249,"id":251,"parameterSlots":2,"returnSlots":0},"fun_depositTo":{"entryPoint":10113,"id":2624,"parameterSlots":1,"returnSlots":0},"fun_executeUserOp":{"entryPoint":13642,"id":399,"parameterSlots":3,"returnSlots":1},"fun_getUserOpGasPrice":{"entryPoint":15542,"id":2051,"parameterSlots":1,"returnSlots":1},"fun_getUserOpHash":{"entryPoint":9283,"id":992,"parameterSlots":1,"returnSlots":1},"fun_getValidationData":{"entryPoint":15618,"id":1624,"parameterSlots":1,"returnSlots":2},"fun_incrementDeposit":{"entryPoint":15490,"id":2604,"parameterSlots":2,"returnSlots":1},"fun_nonReentrantBefore":{"entryPoint":10753,"id":48,"parameterSlots":0,"returnSlots":0},"fun_validatePrepayment":{"entryPoint":10810,"id":1799,"parameterSlots":3,"returnSlots":2},"increment_uint256":{"entryPoint":9535,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_struct_UserOpInfo_dyn":{"entryPoint":9875,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_calldatat_contract_IAggregator":{"entryPoint":10339,"id":null,"parameterSlots":1,"returnSlots":1},"update_storage_value_offsett_uint48_to_uint48":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"139":[{"length":32,"start":3373},{"length":32,"start":12778}]},"linkReferences":{},"object":"60806040526004361015610024575b361561001957600080fd5b61002233612781565b005b60003560e01c806242dc5314611b4557806301ffc9a7146119f357806302101e491461198d5780630396cb60146116555780630bd28e3b146115d95780631b2e01b814611545578063205c2878146113b057806335567e1a146112f85780635287ce12146111ea5780636b21db5114610f2c57806370a0823114610ec7578063850aaf6214610e085780638f41ec5a14610dce5780639b249f6914610c7f578063b760faf914610c45578063bb9fe6bf14610a73578063c23a5cea146107cf578063ea8ad612146101ac5763fc7e286d0361000e57346101a75760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a75773ffffffffffffffffffffffffffffffffffffffff6101456122d9565b16600052600060205260a0604060002065ffffffffffff6001825492015460405192835260ff8116151560208401526dffffffffffffffffffffffffffff8160081c16604084015263ffffffff8160781c16606084015260981c166080820152f35b600080fd5b346101a7576101ba36612351565b906101c3612a01565b60009160005b82811061057a57506101db84936125c1565b6000805b8481106103075750507fbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972600080a16000809360005b8181106102525761024b868660007f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d8180a2613b91565b6001600255005b6102ad61026082848a6127cf565b73ffffffffffffffffffffffffffffffffffffffff61028160208301612863565b167f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d600080a28061280f565b906000915b8083106102c457505050600101610214565b909194976102fe6102f86001926102f28c8b6102eb826102e58e8b8d6126d6565b92612693565b519161354a565b90612532565b9961253f565b950191906102b2565b60206103148287896127cf565b61032a610321828061280f565b93909201612863565b9160009273ffffffffffffffffffffffffffffffffffffffff8091165b82851061035b5750505050506001016101df565b909192939561038a83610383610371848c612693565b5161037d8b898b6126d6565b85612a3a565b9290613d02565b91168403610515576104b0576103a08491613d02565b911661044b576103c0576103b560019161253f565b960193929190610347565b60a487604051907f220266b6000000000000000000000000000000000000000000000000000000008252600482015260406024820152602160448201527f41413332207061796d61737465722065787069726564206f72206e6f7420647560648201527f65000000000000000000000000000000000000000000000000000000000000006084820152fd5b608488604051907f220266b6000000000000000000000000000000000000000000000000000000008252600482015260406024820152601460448201527f41413334207369676e6174757265206572726f720000000000000000000000006064820152fd5b608488604051907f220266b6000000000000000000000000000000000000000000000000000000008252600482015260406024820152601760448201527f414132322065787069726564206f72206e6f74206475650000000000000000006064820152fd5b608489604051907f220266b6000000000000000000000000000000000000000000000000000000008252600482015260406024820152601460448201527f41413234207369676e6174757265206572726f720000000000000000000000006064820152fd5b6105858184876127cf565b93610590858061280f565b919095602073ffffffffffffffffffffffffffffffffffffffff6105b5828401612863565b1697600192838a1461077157896105e5575b5050505060019293949550906105dc91612532565b939291016101c9565b8060406105f3920190612884565b918a3b156101a757929391906040519485937ffe96cf2300000000000000000000000000000000000000000000000000000000855288604486016040600488015252606490818601918a60051b8701019680936000915b8c83106106f15750505050505083839261068f927ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8560009803016024860152612742565b03818a5afa90816106e2575b506106d157602486604051907f86a9f7500000000000000000000000000000000000000000000000000000000082526004820152fd5b93945084936105dc600189806105c7565b6106eb906121f7565b8861069b565b91939596977fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9c908a9294969a0301865288357ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec1833603018112156101a7578361075e879385839401612925565b9a0196019301909189979695949261064a565b606483604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601760248201527f4141393620696e76616c69642061676772656761746f720000000000000000006044820152fd5b346101a7576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a7576108076122d9565b33600052600082526001604060002001908154916dffffffffffffffffffffffffffff8360081c16928315610a155765ffffffffffff8160981c1680156109b75742106109595760009373ffffffffffffffffffffffffffffffffffffffff859485947fffffffffffffff000000000000000000000000000000000000000000000000ff86951690556040517fb7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda33391806108e58786836020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b0390a2165af16108f3612579565b50156108fb57005b606490604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601860248201527f6661696c656420746f207769746864726177207374616b6500000000000000006044820152fd5b606485604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601b60248201527f5374616b65207769746864726177616c206973206e6f742064756500000000006044820152fd5b606486604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601d60248201527f6d7573742063616c6c20756e6c6f636b5374616b6528292066697273740000006044820152fd5b606485604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601460248201527f4e6f207374616b6520746f2077697468647261770000000000000000000000006044820152fd5b346101a75760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a7573360005260006020526001604060002001805463ffffffff8160781c16908115610be75760ff1615610b895765ffffffffffff908142160191818311610b5a5780547fffffffffffffff000000000000ffffffffffffffffffffffffffffffffffff001678ffffffffffff00000000000000000000000000000000000000609885901b161790556040519116815233907ffa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a90602090a2005b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f616c726561647920756e7374616b696e670000000000000000000000000000006044820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f6e6f74207374616b6564000000000000000000000000000000000000000000006044820152fd5b60207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a757610022610c7a6122d9565b612781565b346101a75760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a75760043567ffffffffffffffff81116101a7576020610cd3610d269236906004016122fc565b919073ffffffffffffffffffffffffffffffffffffffff9260405194859283927f570e1a360000000000000000000000000000000000000000000000000000000084528560048501526024840191612742565b03816000857f0000000000000000000000000000000000000000000000000000000000000000165af1908115610dc257602492600092610d91575b50604051917f6ca7b806000000000000000000000000000000000000000000000000000000008352166004820152fd5b610db491925060203d602011610dbb575b610dac8183612227565b810190612716565b9083610d61565b503d610da2565b6040513d6000823e3d90fd5b346101a75760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a757602060405160018152f35b346101a75760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a757610e3f6122d9565b60243567ffffffffffffffff81116101a757600091610e63839236906004016122fc565b90816040519283928337810184815203915af4610e7e612579565b90610ec36040519283927f9941055400000000000000000000000000000000000000000000000000000000845215156004840152604060248401526044830190612400565b0390fd5b346101a75760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a75773ffffffffffffffffffffffffffffffffffffffff610f136122d9565b1660005260006020526020604060002054604051908152f35b346101a757610f3a36612351565b610f45929192612a01565b610f4e836125c1565b60005b848110610fc657506000927fbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972600080a16000915b858310610f965761024b8585613b91565b909193600190610fbc610faa8789876126d6565b610fb48886612693565b51908861354a565b0194019190610f85565b610ff1610fea610fd883859795612693565b51610fe48489876126d6565b84612a3a565b9190613d02565b73ffffffffffffffffffffffffffffffffffffffff92918316611185576111205761101b90613d02565b91166110bb5761103057600101929092610f51565b60a490604051907f220266b6000000000000000000000000000000000000000000000000000000008252600482015260406024820152602160448201527f41413332207061796d61737465722065787069726564206f72206e6f7420647560648201527f65000000000000000000000000000000000000000000000000000000000000006084820152fd5b608482604051907f220266b6000000000000000000000000000000000000000000000000000000008252600482015260406024820152601460448201527f41413334207369676e6174757265206572726f720000000000000000000000006064820152fd5b608483604051907f220266b6000000000000000000000000000000000000000000000000000000008252600482015260406024820152601760448201527f414132322065787069726564206f72206e6f74206475650000000000000000006064820152fd5b608484604051907f220266b6000000000000000000000000000000000000000000000000000000008252600482015260406024820152601460448201527f41413234207369676e6174757265206572726f720000000000000000000000006064820152fd5b346101a75760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a75773ffffffffffffffffffffffffffffffffffffffff6112366122d9565b600060806040516112468161218f565b828152826020820152826040820152826060820152015216600052600060205260a06040600020608060405161127b8161218f565b6001835493848352015490602081019060ff8316151582526dffffffffffffffffffffffffffff60408201818560081c16815263ffffffff936060840193858760781c16855265ffffffffffff978891019660981c1686526040519788525115156020880152511660408601525116606084015251166080820152f35b346101a75760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a75760206113316122d9565b73ffffffffffffffffffffffffffffffffffffffff61134e61232a565b911660005260018252604060002077ffffffffffffffffffffffffffffffffffffffffffffffff821660005282526040600020547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000006040519260401b16178152f35b346101a75760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a7576113e76122d9565b602435903360005260006020526040600020908154918284116114e7576000808573ffffffffffffffffffffffffffffffffffffffff8295839561142b848a61256c565b90556040805173ffffffffffffffffffffffffffffffffffffffff831681526020810185905233917fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb91a2165af1611481612579565b501561148957005b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6661696c656420746f20776974686472617700000000000000000000000000006044820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f576974686472617720616d6f756e7420746f6f206c61726765000000000000006044820152fd5b346101a75760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a75761157c6122d9565b73ffffffffffffffffffffffffffffffffffffffff61159961232a565b9116600052600160205277ffffffffffffffffffffffffffffffffffffffffffffffff604060002091166000526020526020604060002054604051908152f35b346101a75760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a75760043577ffffffffffffffffffffffffffffffffffffffffffffffff81168091036101a7573360005260016020526040600020906000526020526040600020611651815461253f565b9055005b6020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a75760043563ffffffff918282168092036101a7573360005260008152604060002092821561192f576001840154908160781c1683106118d1576116d76dffffffffffffffffffffffffffff9182349160081c16612532565b93841561187357818511611815579065ffffffffffff6117e49254604051906116ff8261218f565b8152848101926001845260408201908816815260608201878152600160808401936000855233600052600089526040600020905181550194511515917fffffffffffffffffffffffffff0000000000000000000000000000000000000060ff72ffffffff0000000000000000000000000000006effffffffffffffffffffffffffff008954945160081b16945160781b1694169116171717835551167fffffffffffffff000000000000ffffffffffffffffffffffffffffffffffffff78ffffffffffff0000000000000000000000000000000000000083549260981b169116179055565b6040519283528201527fa5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c0160403392a2005b606483604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152600e60248201527f7374616b65206f766572666c6f770000000000000000000000000000000000006044820152fd5b606483604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601260248201527f6e6f207374616b652073706563696669656400000000000000000000000000006044820152fd5b606482604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601c60248201527f63616e6e6f7420646563726561736520756e7374616b652074696d65000000006044820152fd5b606482604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601a60248201527f6d757374207370656369667920756e7374616b652064656c61790000000000006044820152fd5b346101a7577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6020813601126101a7576004359067ffffffffffffffff82116101a7576101409082360301126101a7576119eb602091600401612443565b604051908152f35b346101a75760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a7576004357fffffffff0000000000000000000000000000000000000000000000000000000081168091036101a757807f6c393cb70000000000000000000000000000000000000000000000000000000060209214908115611b1b575b8115611af1575b8115611ac7575b8115611a9d575b506040519015158152f35b7f01ffc9a70000000000000000000000000000000000000000000000000000000091501482611a92565b7f3e84f0210000000000000000000000000000000000000000000000000000000081149150611a8b565b7fcf28ef970000000000000000000000000000000000000000000000000000000081149150611a84565b7f9d9523010000000000000000000000000000000000000000000000000000000081149150611a7d565b346101a7576102007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a75767ffffffffffffffff6004358181116101a757366023820112156101a757611ba79036906024816004013591016122a2565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc3601916101c083126101a75761014060405193611be58561218f565b126101a75760405192611bf7846121da565b60243573ffffffffffffffffffffffffffffffffffffffff811681036101a7578452602093604435858201526064356040820152608435606082015260a435608082015260c43560a082015260e43560c08201526101043573ffffffffffffffffffffffffffffffffffffffff811681036101a75760e082015261012435610100820152610144356101208201528152610164358482015260408101926101843584526101a43560608301526101c43560808301526101e4359081116101a757611cc59036906004016122fc565b925a91303303612131578351606081015192603f5a0260061c61271060a084015186010111612108576000938151918261202e575b50505050611d1491925a90036080850151019436916122a2565b9160005a825195611d2487613cb6565b9073ffffffffffffffffffffffffffffffffffffffff60e0890151168015600014611edb575073ffffffffffffffffffffffffffffffffffffffff885116925b5a9003019560608801519051611ed0575b6080850151870390818111611ebc575b505085029687815110611e58579087611da092510390613c82565b506003831015611e2b57506080867f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f9201519273ffffffffffffffffffffffffffffffffffffffff865116948873ffffffffffffffffffffffffffffffffffffffff60e0890151169701519160405192835215898301528760408301526060820152a4604051908152f35b807f4e487b7100000000000000000000000000000000000000000000000000000000602492526021600452fd5b6084838a604051917f220266b600000000000000000000000000000000000000000000000000000000835260048301526040602483015260448201527f414135312070726566756e642062656c6f772061637475616c476173436f73746064820152fd5b6064919003600a0204909501948980611d85565b60a088015101611d75565b92838851611eea575b50611d64565b6003881015611fff576002880315611ee45760a08a999897969c9b9a0151813b156101a757886000918983611f5b956040518097819682957f7c627b210000000000000000000000000000000000000000000000000000000084526004840152608060248401526084830190612400565b8b8b0260448301528b60648301520393f19081611feb575b50611fdd578a8a3d610800808211611fd5575b506040519282828501016040528184528284013e610ec36040519283927fad7954bc00000000000000000000000000000000000000000000000000000000845260048401526024830190612400565b905083611f86565b99939495969798998b611ee4565b611ff6919c506121f7565b60009a8c611f73565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91600092918380938d73ffffffffffffffffffffffffffffffffffffffff885116910192f115612061575b808080611cfa565b611d1492503d610800808211612100575b5060405190898183010160405280825260008a83013e8051612099575b5050600191612059565b7f1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a2018980880151926120f68273ffffffffffffffffffffffffffffffffffffffff875116960151916040805194859485528401526040830190612400565b0390a3878061208f565b905089612072565b887fdeaddead000000000000000000000000000000000000000000000000000000006000526000fd5b606487604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601760248201527f4141393220696e7465726e616c2063616c6c206f6e6c790000000000000000006044820152fd5b60a0810190811067ffffffffffffffff8211176121ab57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610140810190811067ffffffffffffffff8211176121ab57604052565b67ffffffffffffffff81116121ab57604052565b6060810190811067ffffffffffffffff8211176121ab57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176121ab57604052565b67ffffffffffffffff81116121ab57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b9291926122ae82612268565b916122bc6040519384612227565b8294818452818301116101a7578281602093846000960137010152565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036101a757565b9181601f840112156101a75782359167ffffffffffffffff83116101a757602083818601950101116101a757565b6024359077ffffffffffffffffffffffffffffffffffffffffffffffff821682036101a757565b9060407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8301126101a75760043567ffffffffffffffff928382116101a757806023830112156101a75781600401359384116101a75760248460051b830101116101a757602401919060243573ffffffffffffffffffffffffffffffffffffffff811681036101a75790565b60005b8381106123f05750506000910152565b81810151838201526020016123e0565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209361243c815180928187528780880191016123dd565b0116010190565b60409061245282820182612884565b9081845191823720906124686060820182612884565b90818551918237209061010060e061248282840184612884565b908188519182372092865194602086019673ffffffffffffffffffffffffffffffffffffffff833516885260208301358988015260608701526080860152608081013560a086015260a081013560c086015260c081013582860152013590830152610120908183015281526124f6816121da565b5190209080519060208201928352308183015246606083015260608252608082019082821067ffffffffffffffff8311176121ab575251902090565b91908201809211610b5a57565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610b5a5760010190565b91908203918211610b5a57565b3d156125a4573d9061258a82612268565b916125986040519384612227565b82523d6000602084013e565b606090565b67ffffffffffffffff81116121ab5760051b60200190565b906125cb826125a9565b6040906125db6040519182612227565b8381527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe061260982956125a9565b019160005b83811061261b5750505050565b60209082516126298161218f565b8351612634816121da565b600081526000849181838201528187820152816060818184015260809282848201528260a08201528260c08201528260e0820152826101008201528261012082015286528185870152818987015285015283015282860101520161260e565b80518210156126a75760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b91908110156126a75760051b810135907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec1813603018212156101a7570190565b908160209103126101a7575173ffffffffffffffffffffffffffffffffffffffff811681036101a75790565b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0938186528686013760008582860101520116010190565b7f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4602073ffffffffffffffffffffffffffffffffffffffff6127c33485613c82565b936040519485521692a2565b91908110156126a75760051b810135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa1813603018212156101a7570190565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1813603018212156101a7570180359067ffffffffffffffff82116101a757602001918160051b360383136101a757565b3573ffffffffffffffffffffffffffffffffffffffff811681036101a75790565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1813603018212156101a7570180359067ffffffffffffffff82116101a7576020019181360383136101a757565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1823603018112156101a757016020813591019167ffffffffffffffff82116101a75781360383136101a757565b61014091813573ffffffffffffffffffffffffffffffffffffffff81168091036101a75761299b6129806129fe956129df9385526020860135602086015261297060408701876128d5565b9091806040880152860191612742565b61298d60608601866128d5565b908583036060870152612742565b6080840135608084015260a084013560a084015260c084013560c084015260e084013560e08401526101006129d2818601866128d5565b9185840390860152612742565b916129f061012091828101906128d5565b929091818503910152612742565b90565b6002805414612a105760028055565b60046040517f3ee5aeb5000000000000000000000000000000000000000000000000000000008152fd5b9290916000925a908251813573ffffffffffffffffffffffffffffffffffffffff81168091036101a75781526020820135602082015260808201356fffffffffffffffffffffffffffffffff8116606083015260801c604082015260a082013560c082015261010060c08301358183015260e0830135610120830152612ac281840184612884565b801561352e57603481106134d057806014116101a757806024116101a7576034116101a757602481013560801c60a0840152601481013560801c60808401523560601c60e08301525b612b1483612443565b60208601526effffffffffffffffffffffffffffff60c083015160408401511760608401511760808401511760e08501359060c08601359060a08601511717171161347257604082015160608301510160808301510160a08301510160c0830151019082015102845173ffffffffffffffffffffffffffffffffffffffff815116612ba26040860186612884565b80613183575b5050612c17602073ffffffffffffffffffffffffffffffffffffffff60e085015116936000908515613151575b60400151828b01516000868b604051978896879586937f8803e45100000000000000000000000000000000000000000000000000000000855260048501613ce0565b0393f16000918161311d575b50612ccb573d8b610800808311612cc3575b50604051916020818401016040528083526000602084013e610ec36040519283927f65c8fd4d000000000000000000000000000000000000000000000000000000008452600484015260606024840152600d60648401527f4141323320726576657274656400000000000000000000000000000000000000608484015260a0604484015260a4830190612400565b915082612c35565b9115613097575b509773ffffffffffffffffffffffffffffffffffffffff835116602084015190600052600160205260406000208160401c60005260205267ffffffffffffffff604060002091825492612d248461253f565b905516036130325760609273ffffffffffffffffffffffffffffffffffffffff60e082015116612de6575b5a860390608060408201519101510110612d8157506040850152606084015260809160a090910135905a900301910152565b608490604051907f220266b6000000000000000000000000000000000000000000000000000000008252600482015260406024820152601e60448201527f41413430206f76657220766572696669636174696f6e4761734c696d697400006064820152fd5b9198969594939250965083519773ffffffffffffffffffffffffffffffffffffffff60e08a0151169889600052600060205260406000208054838110612fcd579a6080600093859384612e789d9e9f0390550151908360208a015191604051809d819682957f703ae88f0000000000000000000000000000000000000000000000000000000084528c60048501613ce0565b0393f19687600091600099612f40575b50612f30573d8a610800808311612f28575b50604051916020818401016040528083526000602084013e610ec36040519283927f65c8fd4d000000000000000000000000000000000000000000000000000000008452600484015260606024840152600d60648401527f4141333320726576657274656400000000000000000000000000000000000000608484015260a0604484015260a4830190612400565b915082612e9a565b9890919293949596979892612d4f565b915097503d90816000823e612f558282612227565b60408183810103126101a75780519067ffffffffffffffff82116101a757828101601f8383010112156101a7578181015191612f9083612268565b93612f9e6040519586612227565b83855282016020848385010101116101a757602092612fc49184808701918501016123dd565b01519738612e88565b60848b604051907f220266b6000000000000000000000000000000000000000000000000000000008252600482015260406024820152601e60448201527f41413331207061796d6173746572206465706f73697420746f6f206c6f7700006064820152fd5b608490604051907f220266b6000000000000000000000000000000000000000000000000000000008252600482015260406024820152601a60448201527f4141323520696e76616c6964206163636f756e74206e6f6e63650000000000006064820152fd5b6000526000602052604060002080548084116130b857839003905538612cd2565b60848b604051907f220266b6000000000000000000000000000000000000000000000000000000008252600482015260406024820152601760448201527f41413231206469646e2774207061792070726566756e640000000000000000006064820152fd5b9091506020813d602011613149575b8161313960209383612227565b810103126101a757519038612c23565b3d915061312c565b905083600052600082526040600020548681116000146131795750604060005b919050612bd5565b6040908703613171565b823b61340d57604089510151602060405180927f570e1a36000000000000000000000000000000000000000000000000000000008252826004830152816000816131d160248201898b612742565b039273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690f1908115610dc2576000916133ee575b5073ffffffffffffffffffffffffffffffffffffffff811615613389578373ffffffffffffffffffffffffffffffffffffffff821603613324573b156132bf576014116101a75781907fd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d604060208b01519273ffffffffffffffffffffffffffffffffffffffff60e08d510151168251913560601c82526020820152a33880612ba8565b60848c604051907f220266b6000000000000000000000000000000000000000000000000000000008252600482015260406024820152602060448201527f4141313520696e6974436f6465206d757374206372656174652073656e6465726064820152fd5b60848d604051907f220266b6000000000000000000000000000000000000000000000000000000008252600482015260406024820152602060448201527f4141313420696e6974436f6465206d7573742072657475726e2073656e6465726064820152fd5b60848d604051907f220266b6000000000000000000000000000000000000000000000000000000008252600482015260406024820152601b60448201527f4141313320696e6974436f6465206661696c6564206f72204f4f4700000000006064820152fd5b613407915060203d602011610dbb57610dac8183612227565b3861321b565b60848c604051907f220266b6000000000000000000000000000000000000000000000000000000008252600482015260406024820152601f60448201527f414131302073656e64657220616c726561647920636f6e7374727563746564006064820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f41413934206761732076616c756573206f766572666c6f7700000000000000006044820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4141393320696e76616c6964207061796d6173746572416e64446174610000006044820152fd5b5050600060e083015260006080830152600060a0830152612b0b565b9092915a90606081015160006040938451977fffffffff000000000000000000000000000000000000000000000000000000008961358b6060840184612884565b8660038211613b89575b7f18ad2e1200000000000000000000000000000000000000000000000000000000941684148714613a3057505050613665916137509160208801516135ed8a5193849360208501528b60248501526064840190612925565b90604483015203906136257fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe092838101835282612227565b61374489519485927e42dc530000000000000000000000000000000000000000000000000000000060208501526102006024850152610224840190612400565b613713604484018b60806101a091805173ffffffffffffffffffffffffffffffffffffffff808251168652602082015160208701526040820151604087015260608201516060870152838201518487015260a082015160a087015260c082015160c087015260e08201511660e0860152610100808201519086015261012080910151908501526020810151610140850152604081015161016085015260608101516101808501520151910152565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc8382030161020484015288612400565b03908101835282612227565b6020928184809351910182305af160005198865215613772575b505050505050565b909192939495965060003d8314613a22575b7fdeaddead000000000000000000000000000000000000000000000000000000000361380d57608486868051917f220266b600000000000000000000000000000000000000000000000000000000835260048301526024820152600f60448201527f41413935206f7574206f662067617300000000000000000000000000000000006064820152fd5b61389b90828596949501518651907ff62676f440ff169a3a9afdbf812e89e7f95975ee8e5c31214ffdef631c5f47928573ffffffffffffffffffffffffffffffffffffffff8451169301513d90610800808311613a1a575b5088519188818401018a5280835260008984013e613891895192839283528a8a8401528a830190612400565b0390a35a9061256c565b6138ab6080860191825190612532565b925a9560008151976138bc89613cb6565b60e08a019873ffffffffffffffffffffffffffffffffffffffff98898b51168015600014613a095750898c5116935b5a9003019660608c015191516139fc575b518703908181116139e8575b5050850299848401908b825110613986575082918b61392992510390613c82565b50611e2b5750918784926000847f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f97608097015198808c51169a51169a01519482519586528501528301526060820152a49038808080808061376a565b60849088878051927f220266b60000000000000000000000000000000000000000000000000000000084526004840152602483015260448201527f414135312070726566756e642062656c6f772061637475616c476173436f73746064820152fd5b6064919003600a0204909501943880613908565b9060a08c015101906138fc565b938251156138eb57600095506138eb565b915038613865565b50816000803e600051613784565b613b83945082935090613a78917e42dc53000000000000000000000000000000000000000000000000000000006020613b579501526102006024860152610224850191612742565b613b26604484018960806101a091805173ffffffffffffffffffffffffffffffffffffffff808251168652602082015160208701526040820151604087015260608201516060870152838201518487015260a082015160a087015260c082015160c087015260e08201511660e0860152610100808201519086015261012080910151908501526020810151610140850152604081015161016085015260608101516101808501520151910152565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc8382030161020484015286612400565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081018a5289612227565b87613750565b508135613595565b73ffffffffffffffffffffffffffffffffffffffff168015613c2457600080809381935af1613bbe612579565b5015613bc657565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f41413931206661696c65642073656e6420746f2062656e6566696369617279006044820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4141393020696e76616c69642062656e656669636961727900000000000000006044820152fd5b73ffffffffffffffffffffffffffffffffffffffff166000526000602052613cb06040600020918254612532565b80915590565b610120610100820151910151808214613cdc57480180821015613cd7575090565b905090565b5090565b613cf860409295949395606083526060830190612925565b9460208201520152565b8015613d8f57600060408051613d178161220b565b828152826020820152015273ffffffffffffffffffffffffffffffffffffffff811690604065ffffffffffff91828160a01c16908115613d87575b60d01c92825191613d628361220b565b8583528460208401521691829101524211908115613d7f57509091565b905042109091565b839150613d52565b5060009060009056fea264697066735822122039437b055a0ba03d9e62cb130b1a5b39234fe52ccceac94f18f2c86b0efa3f2764736f6c63430008170033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x24 JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22 CALLER PUSH2 0x2781 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x42DC53 EQ PUSH2 0x1B45 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x19F3 JUMPI DUP1 PUSH4 0x2101E49 EQ PUSH2 0x198D JUMPI DUP1 PUSH4 0x396CB60 EQ PUSH2 0x1655 JUMPI DUP1 PUSH4 0xBD28E3B EQ PUSH2 0x15D9 JUMPI DUP1 PUSH4 0x1B2E01B8 EQ PUSH2 0x1545 JUMPI DUP1 PUSH4 0x205C2878 EQ PUSH2 0x13B0 JUMPI DUP1 PUSH4 0x35567E1A EQ PUSH2 0x12F8 JUMPI DUP1 PUSH4 0x5287CE12 EQ PUSH2 0x11EA JUMPI DUP1 PUSH4 0x6B21DB51 EQ PUSH2 0xF2C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xEC7 JUMPI DUP1 PUSH4 0x850AAF62 EQ PUSH2 0xE08 JUMPI DUP1 PUSH4 0x8F41EC5A EQ PUSH2 0xDCE JUMPI DUP1 PUSH4 0x9B249F69 EQ PUSH2 0xC7F JUMPI DUP1 PUSH4 0xB760FAF9 EQ PUSH2 0xC45 JUMPI DUP1 PUSH4 0xBB9FE6BF EQ PUSH2 0xA73 JUMPI DUP1 PUSH4 0xC23A5CEA EQ PUSH2 0x7CF JUMPI DUP1 PUSH4 0xEA8AD612 EQ PUSH2 0x1AC JUMPI PUSH4 0xFC7E286D SUB PUSH2 0xE JUMPI CALLVALUE PUSH2 0x1A7 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x145 PUSH2 0x22D9 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0xA0 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH6 0xFFFFFFFFFFFF PUSH1 0x1 DUP3 SLOAD SWAP3 ADD SLOAD PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0xFF DUP2 AND ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 PUSH1 0x8 SHR AND PUSH1 0x40 DUP5 ADD MSTORE PUSH4 0xFFFFFFFF DUP2 PUSH1 0x78 SHR AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x98 SHR AND PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A7 JUMPI PUSH2 0x1BA CALLDATASIZE PUSH2 0x2351 JUMP JUMPDEST SWAP1 PUSH2 0x1C3 PUSH2 0x2A01 JUMP JUMPDEST PUSH1 0x0 SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x57A JUMPI POP PUSH2 0x1DB DUP5 SWAP4 PUSH2 0x25C1 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP5 DUP2 LT PUSH2 0x307 JUMPI POP POP PUSH32 0xBB47EE3E183A558B1A2FF0874B079F3FC5478B7454EACF2BFC5AF2FF5878F972 PUSH1 0x0 DUP1 LOG1 PUSH1 0x0 DUP1 SWAP4 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x252 JUMPI PUSH2 0x24B DUP7 DUP7 PUSH1 0x0 PUSH32 0x575FF3ACADD5AB348FE1855E217E0F3678F8D767D7494C9F9FEFBEE2E17CCA4D DUP2 DUP1 LOG2 PUSH2 0x3B91 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 SSTORE STOP JUMPDEST PUSH2 0x2AD PUSH2 0x260 DUP3 DUP5 DUP11 PUSH2 0x27CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x281 PUSH1 0x20 DUP4 ADD PUSH2 0x2863 JUMP JUMPDEST AND PUSH32 0x575FF3ACADD5AB348FE1855E217E0F3678F8D767D7494C9F9FEFBEE2E17CCA4D PUSH1 0x0 DUP1 LOG2 DUP1 PUSH2 0x280F JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP1 DUP4 LT PUSH2 0x2C4 JUMPI POP POP POP PUSH1 0x1 ADD PUSH2 0x214 JUMP JUMPDEST SWAP1 SWAP2 SWAP5 SWAP8 PUSH2 0x2FE PUSH2 0x2F8 PUSH1 0x1 SWAP3 PUSH2 0x2F2 DUP13 DUP12 PUSH2 0x2EB DUP3 PUSH2 0x2E5 DUP15 DUP12 DUP14 PUSH2 0x26D6 JUMP JUMPDEST SWAP3 PUSH2 0x2693 JUMP JUMPDEST MLOAD SWAP2 PUSH2 0x354A JUMP JUMPDEST SWAP1 PUSH2 0x2532 JUMP JUMPDEST SWAP10 PUSH2 0x253F JUMP JUMPDEST SWAP6 ADD SWAP2 SWAP1 PUSH2 0x2B2 JUMP JUMPDEST PUSH1 0x20 PUSH2 0x314 DUP3 DUP8 DUP10 PUSH2 0x27CF JUMP JUMPDEST PUSH2 0x32A PUSH2 0x321 DUP3 DUP1 PUSH2 0x280F JUMP JUMPDEST SWAP4 SWAP1 SWAP3 ADD PUSH2 0x2863 JUMP JUMPDEST SWAP2 PUSH1 0x0 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND JUMPDEST DUP3 DUP6 LT PUSH2 0x35B JUMPI POP POP POP POP POP PUSH1 0x1 ADD PUSH2 0x1DF JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP6 PUSH2 0x38A DUP4 PUSH2 0x383 PUSH2 0x371 DUP5 DUP13 PUSH2 0x2693 JUMP JUMPDEST MLOAD PUSH2 0x37D DUP12 DUP10 DUP12 PUSH2 0x26D6 JUMP JUMPDEST DUP6 PUSH2 0x2A3A JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x3D02 JUMP JUMPDEST SWAP2 AND DUP5 SUB PUSH2 0x515 JUMPI PUSH2 0x4B0 JUMPI PUSH2 0x3A0 DUP5 SWAP2 PUSH2 0x3D02 JUMP JUMPDEST SWAP2 AND PUSH2 0x44B JUMPI PUSH2 0x3C0 JUMPI PUSH2 0x3B5 PUSH1 0x1 SWAP2 PUSH2 0x253F JUMP JUMPDEST SWAP7 ADD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x347 JUMP JUMPDEST PUSH1 0xA4 DUP8 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x220266B600000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x41413332207061796D61737465722065787069726564206F72206E6F74206475 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6500000000000000000000000000000000000000000000000000000000000000 PUSH1 0x84 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 DUP9 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x220266B600000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x41413334207369676E6174757265206572726F72000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 DUP9 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x220266B600000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x414132322065787069726564206F72206E6F7420647565000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 DUP10 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x220266B600000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x41413234207369676E6174757265206572726F72000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x585 DUP2 DUP5 DUP8 PUSH2 0x27CF JUMP JUMPDEST SWAP4 PUSH2 0x590 DUP6 DUP1 PUSH2 0x280F JUMP JUMPDEST SWAP2 SWAP1 SWAP6 PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x5B5 DUP3 DUP5 ADD PUSH2 0x2863 JUMP JUMPDEST AND SWAP8 PUSH1 0x1 SWAP3 DUP4 DUP11 EQ PUSH2 0x771 JUMPI DUP10 PUSH2 0x5E5 JUMPI JUMPDEST POP POP POP POP PUSH1 0x1 SWAP3 SWAP4 SWAP5 SWAP6 POP SWAP1 PUSH2 0x5DC SWAP2 PUSH2 0x2532 JUMP JUMPDEST SWAP4 SWAP3 SWAP2 ADD PUSH2 0x1C9 JUMP JUMPDEST DUP1 PUSH1 0x40 PUSH2 0x5F3 SWAP3 ADD SWAP1 PUSH2 0x2884 JUMP JUMPDEST SWAP2 DUP11 EXTCODESIZE ISZERO PUSH2 0x1A7 JUMPI SWAP3 SWAP4 SWAP2 SWAP1 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 PUSH32 0xFE96CF2300000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP9 PUSH1 0x44 DUP7 ADD PUSH1 0x40 PUSH1 0x4 DUP9 ADD MSTORE MSTORE PUSH1 0x64 SWAP1 DUP2 DUP7 ADD SWAP2 DUP11 PUSH1 0x5 SHL DUP8 ADD ADD SWAP7 DUP1 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP13 DUP4 LT PUSH2 0x6F1 JUMPI POP POP POP POP POP POP DUP4 DUP4 SWAP3 PUSH2 0x68F SWAP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC DUP6 PUSH1 0x0 SWAP9 SUB ADD PUSH1 0x24 DUP7 ADD MSTORE PUSH2 0x2742 JUMP JUMPDEST SUB DUP2 DUP11 GAS STATICCALL SWAP1 DUP2 PUSH2 0x6E2 JUMPI JUMPDEST POP PUSH2 0x6D1 JUMPI PUSH1 0x24 DUP7 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x86A9F75000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP4 SWAP5 POP DUP5 SWAP4 PUSH2 0x5DC PUSH1 0x1 DUP10 DUP1 PUSH2 0x5C7 JUMP JUMPDEST PUSH2 0x6EB SWAP1 PUSH2 0x21F7 JUMP JUMPDEST DUP9 PUSH2 0x69B JUMP JUMPDEST SWAP2 SWAP4 SWAP6 SWAP7 SWAP8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF9C SWAP1 DUP11 SWAP3 SWAP5 SWAP7 SWAP11 SUB ADD DUP7 MSTORE DUP9 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEC1 DUP4 CALLDATASIZE SUB ADD DUP2 SLT ISZERO PUSH2 0x1A7 JUMPI DUP4 PUSH2 0x75E DUP8 SWAP4 DUP6 DUP4 SWAP5 ADD PUSH2 0x2925 JUMP JUMPDEST SWAP11 ADD SWAP7 ADD SWAP4 ADD SWAP1 SWAP2 DUP10 SWAP8 SWAP7 SWAP6 SWAP5 SWAP3 PUSH2 0x64A JUMP JUMPDEST PUSH1 0x64 DUP4 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4141393620696E76616C69642061676772656761746F72000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x1A7 JUMPI PUSH1 0x20 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI PUSH2 0x807 PUSH2 0x22D9 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP1 DUP2 SLOAD SWAP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x8 SHR AND SWAP3 DUP4 ISZERO PUSH2 0xA15 JUMPI PUSH6 0xFFFFFFFFFFFF DUP2 PUSH1 0x98 SHR AND DUP1 ISZERO PUSH2 0x9B7 JUMPI TIMESTAMP LT PUSH2 0x959 JUMPI PUSH1 0x0 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 SWAP5 DUP6 SWAP5 PUSH32 0xFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000FF DUP7 SWAP6 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xB7C918E0E249F999E965CAFEB6C664271B3F4317D296461500E71DA39F0CBDA3 CALLER SWAP2 DUP1 PUSH2 0x8E5 DUP8 DUP7 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 AND GAS CALL PUSH2 0x8F3 PUSH2 0x2579 JUMP JUMPDEST POP ISZERO PUSH2 0x8FB JUMPI STOP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6661696C656420746F207769746864726177207374616B650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP6 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B65207769746864726177616C206973206E6F74206475650000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP7 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D7573742063616C6C20756E6C6F636B5374616B652829206669727374000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP6 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207374616B6520746F207769746864726177000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x1A7 JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH4 0xFFFFFFFF DUP2 PUSH1 0x78 SHR AND SWAP1 DUP2 ISZERO PUSH2 0xBE7 JUMPI PUSH1 0xFF AND ISZERO PUSH2 0xB89 JUMPI PUSH6 0xFFFFFFFFFFFF SWAP1 DUP2 TIMESTAMP AND ADD SWAP2 DUP2 DUP4 GT PUSH2 0xB5A JUMPI DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFF000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH25 0xFFFFFFFFFFFF00000000000000000000000000000000000000 PUSH1 0x98 DUP6 SWAP1 SHL AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE CALLER SWAP1 PUSH32 0xFA9B3C14CC825C412C9ED81B3BA365A5B459439403F18829E572ED53A4180F0A SWAP1 PUSH1 0x20 SWAP1 LOG2 STOP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x616C726561647920756E7374616B696E67000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F74207374616B656400000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI PUSH2 0x22 PUSH2 0xC7A PUSH2 0x22D9 JUMP JUMPDEST PUSH2 0x2781 JUMP JUMPDEST CALLVALUE PUSH2 0x1A7 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1A7 JUMPI PUSH1 0x20 PUSH2 0xCD3 PUSH2 0xD26 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x22FC JUMP JUMPDEST SWAP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP3 DUP4 SWAP3 PUSH32 0x570E1A3600000000000000000000000000000000000000000000000000000000 DUP5 MSTORE DUP6 PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD SWAP2 PUSH2 0x2742 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 DUP6 PUSH32 0x0 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xDC2 JUMPI PUSH1 0x24 SWAP3 PUSH1 0x0 SWAP3 PUSH2 0xD91 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 PUSH32 0x6CA7B80600000000000000000000000000000000000000000000000000000000 DUP4 MSTORE AND PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0xDB4 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xDBB JUMPI JUMPDEST PUSH2 0xDAC DUP2 DUP4 PUSH2 0x2227 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2716 JUMP JUMPDEST SWAP1 DUP4 PUSH2 0xD61 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A7 JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A7 JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI PUSH2 0xE3F PUSH2 0x22D9 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1A7 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xE63 DUP4 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x22FC JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 CALLDATACOPY DUP2 ADD DUP5 DUP2 MSTORE SUB SWAP2 GAS DELEGATECALL PUSH2 0xE7E PUSH2 0x2579 JUMP JUMPDEST SWAP1 PUSH2 0xEC3 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH32 0x9941055400000000000000000000000000000000000000000000000000000000 DUP5 MSTORE ISZERO ISZERO PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP1 PUSH2 0x2400 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A7 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xF13 PUSH2 0x22D9 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A7 JUMPI PUSH2 0xF3A CALLDATASIZE PUSH2 0x2351 JUMP JUMPDEST PUSH2 0xF45 SWAP3 SWAP2 SWAP3 PUSH2 0x2A01 JUMP JUMPDEST PUSH2 0xF4E DUP4 PUSH2 0x25C1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0xFC6 JUMPI POP PUSH1 0x0 SWAP3 PUSH32 0xBB47EE3E183A558B1A2FF0874B079F3FC5478B7454EACF2BFC5AF2FF5878F972 PUSH1 0x0 DUP1 LOG1 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0xF96 JUMPI PUSH2 0x24B DUP6 DUP6 PUSH2 0x3B91 JUMP JUMPDEST SWAP1 SWAP2 SWAP4 PUSH1 0x1 SWAP1 PUSH2 0xFBC PUSH2 0xFAA DUP8 DUP10 DUP8 PUSH2 0x26D6 JUMP JUMPDEST PUSH2 0xFB4 DUP9 DUP7 PUSH2 0x2693 JUMP JUMPDEST MLOAD SWAP1 DUP9 PUSH2 0x354A JUMP JUMPDEST ADD SWAP5 ADD SWAP2 SWAP1 PUSH2 0xF85 JUMP JUMPDEST PUSH2 0xFF1 PUSH2 0xFEA PUSH2 0xFD8 DUP4 DUP6 SWAP8 SWAP6 PUSH2 0x2693 JUMP JUMPDEST MLOAD PUSH2 0xFE4 DUP5 DUP10 DUP8 PUSH2 0x26D6 JUMP JUMPDEST DUP5 PUSH2 0x2A3A JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x3D02 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP2 DUP4 AND PUSH2 0x1185 JUMPI PUSH2 0x1120 JUMPI PUSH2 0x101B SWAP1 PUSH2 0x3D02 JUMP JUMPDEST SWAP2 AND PUSH2 0x10BB JUMPI PUSH2 0x1030 JUMPI PUSH1 0x1 ADD SWAP3 SWAP1 SWAP3 PUSH2 0xF51 JUMP JUMPDEST PUSH1 0xA4 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x220266B600000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x41413332207061796D61737465722065787069726564206F72206E6F74206475 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6500000000000000000000000000000000000000000000000000000000000000 PUSH1 0x84 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 DUP3 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x220266B600000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x41413334207369676E6174757265206572726F72000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 DUP4 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x220266B600000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x414132322065787069726564206F72206E6F7420647565000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 DUP5 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x220266B600000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x41413234207369676E6174757265206572726F72000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x1A7 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1236 PUSH2 0x22D9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 PUSH1 0x40 MLOAD PUSH2 0x1246 DUP2 PUSH2 0x218F JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0xA0 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x80 PUSH1 0x40 MLOAD PUSH2 0x127B DUP2 PUSH2 0x218F JUMP JUMPDEST PUSH1 0x1 DUP4 SLOAD SWAP4 DUP5 DUP4 MSTORE ADD SLOAD SWAP1 PUSH1 0x20 DUP2 ADD SWAP1 PUSH1 0xFF DUP4 AND ISZERO ISZERO DUP3 MSTORE PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP3 ADD DUP2 DUP6 PUSH1 0x8 SHR AND DUP2 MSTORE PUSH4 0xFFFFFFFF SWAP4 PUSH1 0x60 DUP5 ADD SWAP4 DUP6 DUP8 PUSH1 0x78 SHR AND DUP6 MSTORE PUSH6 0xFFFFFFFFFFFF SWAP8 DUP9 SWAP2 ADD SWAP7 PUSH1 0x98 SHR AND DUP7 MSTORE PUSH1 0x40 MLOAD SWAP8 DUP9 MSTORE MLOAD ISZERO ISZERO PUSH1 0x20 DUP9 ADD MSTORE MLOAD AND PUSH1 0x40 DUP7 ADD MSTORE MLOAD AND PUSH1 0x60 DUP5 ADD MSTORE MLOAD AND PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A7 JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI PUSH1 0x20 PUSH2 0x1331 PUSH2 0x22D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x134E PUSH2 0x232A JUMP JUMPDEST SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 MSTORE DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x40 SHL AND OR DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A7 JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI PUSH2 0x13E7 PUSH2 0x22D9 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD SWAP2 DUP3 DUP5 GT PUSH2 0x14E7 JUMPI PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SWAP6 DUP4 SWAP6 PUSH2 0x142B DUP5 DUP11 PUSH2 0x256C JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xD1C19FBCD4551A5EDFB66D43D2E337C04837AFDA3482B42BDF569A8FCCDAE5FB SWAP2 LOG2 AND GAS CALL PUSH2 0x1481 PUSH2 0x2579 JUMP JUMPDEST POP ISZERO PUSH2 0x1489 JUMPI STOP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6661696C656420746F2077697468647261770000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576974686472617720616D6F756E7420746F6F206C6172676500000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x1A7 JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI PUSH2 0x157C PUSH2 0x22D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1599 PUSH2 0x232A JUMP JUMPDEST SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A7 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI PUSH1 0x4 CALLDATALOAD PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x1A7 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1651 DUP2 SLOAD PUSH2 0x253F JUMP JUMPDEST SWAP1 SSTORE STOP JUMPDEST PUSH1 0x20 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI PUSH1 0x4 CALLDATALOAD PUSH4 0xFFFFFFFF SWAP2 DUP3 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1A7 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 DUP3 ISZERO PUSH2 0x192F JUMPI PUSH1 0x1 DUP5 ADD SLOAD SWAP1 DUP2 PUSH1 0x78 SHR AND DUP4 LT PUSH2 0x18D1 JUMPI PUSH2 0x16D7 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 CALLVALUE SWAP2 PUSH1 0x8 SHR AND PUSH2 0x2532 JUMP JUMPDEST SWAP4 DUP5 ISZERO PUSH2 0x1873 JUMPI DUP2 DUP6 GT PUSH2 0x1815 JUMPI SWAP1 PUSH6 0xFFFFFFFFFFFF PUSH2 0x17E4 SWAP3 SLOAD PUSH1 0x40 MLOAD SWAP1 PUSH2 0x16FF DUP3 PUSH2 0x218F JUMP JUMPDEST DUP2 MSTORE DUP5 DUP2 ADD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x40 DUP3 ADD SWAP1 DUP9 AND DUP2 MSTORE PUSH1 0x60 DUP3 ADD DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x80 DUP5 ADD SWAP4 PUSH1 0x0 DUP6 MSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x0 DUP10 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 MLOAD DUP2 SSTORE ADD SWAP5 MLOAD ISZERO ISZERO SWAP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000000000 PUSH1 0xFF PUSH19 0xFFFFFFFF000000000000000000000000000000 PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP10 SLOAD SWAP5 MLOAD PUSH1 0x8 SHL AND SWAP5 MLOAD PUSH1 0x78 SHL AND SWAP5 AND SWAP2 AND OR OR OR DUP4 SSTORE MLOAD AND PUSH32 0xFFFFFFFFFFFFFF000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH25 0xFFFFFFFFFFFF00000000000000000000000000000000000000 DUP4 SLOAD SWAP3 PUSH1 0x98 SHL AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD MSTORE PUSH32 0xA5AE833D0BB1DCD632D98A8B70973E8516812898E19BF27B70071EBC8DC52C01 PUSH1 0x40 CALLER SWAP3 LOG2 STOP JUMPDEST PUSH1 0x64 DUP4 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7374616B65206F766572666C6F77000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP4 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F207374616B65207370656369666965640000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP3 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F7420646563726561736520756E7374616B652074696D6500000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP3 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D757374207370656369667920756E7374616B652064656C6179000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x1A7 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x20 DUP2 CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1A7 JUMPI PUSH2 0x140 SWAP1 DUP3 CALLDATASIZE SUB ADD SLT PUSH2 0x1A7 JUMPI PUSH2 0x19EB PUSH1 0x20 SWAP2 PUSH1 0x4 ADD PUSH2 0x2443 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A7 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI PUSH1 0x4 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x1A7 JUMPI DUP1 PUSH32 0x6C393CB700000000000000000000000000000000000000000000000000000000 PUSH1 0x20 SWAP3 EQ SWAP1 DUP2 ISZERO PUSH2 0x1B1B JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x1AF1 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x1AC7 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x1A9D JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ DUP3 PUSH2 0x1A92 JUMP JUMPDEST PUSH32 0x3E84F02100000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP2 POP PUSH2 0x1A8B JUMP JUMPDEST PUSH32 0xCF28EF9700000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP2 POP PUSH2 0x1A84 JUMP JUMPDEST PUSH32 0x9D95230100000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP2 POP PUSH2 0x1A7D JUMP JUMPDEST CALLVALUE PUSH2 0x1A7 JUMPI PUSH2 0x200 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A7 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x1A7 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x1A7 JUMPI PUSH2 0x1BA7 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x22A2 JUMP JUMPDEST SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDC CALLDATASIZE ADD SWAP2 PUSH2 0x1C0 DUP4 SLT PUSH2 0x1A7 JUMPI PUSH2 0x140 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x1BE5 DUP6 PUSH2 0x218F JUMP JUMPDEST SLT PUSH2 0x1A7 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1BF7 DUP5 PUSH2 0x21DA JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x1A7 JUMPI DUP5 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x44 CALLDATALOAD DUP6 DUP3 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xE4 CALLDATALOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x104 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x1A7 JUMPI PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x124 CALLDATALOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x144 CALLDATALOAD PUSH2 0x120 DUP3 ADD MSTORE DUP2 MSTORE PUSH2 0x164 CALLDATALOAD DUP5 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP3 PUSH2 0x184 CALLDATALOAD DUP5 MSTORE PUSH2 0x1A4 CALLDATALOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1C4 CALLDATALOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1E4 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x1A7 JUMPI PUSH2 0x1CC5 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x22FC JUMP JUMPDEST SWAP3 GAS SWAP2 ADDRESS CALLER SUB PUSH2 0x2131 JUMPI DUP4 MLOAD PUSH1 0x60 DUP2 ADD MLOAD SWAP3 PUSH1 0x3F GAS MUL PUSH1 0x6 SHR PUSH2 0x2710 PUSH1 0xA0 DUP5 ADD MLOAD DUP7 ADD ADD GT PUSH2 0x2108 JUMPI PUSH1 0x0 SWAP4 DUP2 MLOAD SWAP2 DUP3 PUSH2 0x202E JUMPI JUMPDEST POP POP POP POP PUSH2 0x1D14 SWAP2 SWAP3 GAS SWAP1 SUB PUSH1 0x80 DUP6 ADD MLOAD ADD SWAP5 CALLDATASIZE SWAP2 PUSH2 0x22A2 JUMP JUMPDEST SWAP2 PUSH1 0x0 GAS DUP3 MLOAD SWAP6 PUSH2 0x1D24 DUP8 PUSH2 0x3CB6 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xE0 DUP10 ADD MLOAD AND DUP1 ISZERO PUSH1 0x0 EQ PUSH2 0x1EDB JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 MLOAD AND SWAP3 JUMPDEST GAS SWAP1 SUB ADD SWAP6 PUSH1 0x60 DUP9 ADD MLOAD SWAP1 MLOAD PUSH2 0x1ED0 JUMPI JUMPDEST PUSH1 0x80 DUP6 ADD MLOAD DUP8 SUB SWAP1 DUP2 DUP2 GT PUSH2 0x1EBC JUMPI JUMPDEST POP POP DUP6 MUL SWAP7 DUP8 DUP2 MLOAD LT PUSH2 0x1E58 JUMPI SWAP1 DUP8 PUSH2 0x1DA0 SWAP3 MLOAD SUB SWAP1 PUSH2 0x3C82 JUMP JUMPDEST POP PUSH1 0x3 DUP4 LT ISZERO PUSH2 0x1E2B JUMPI POP PUSH1 0x80 DUP7 PUSH32 0x49628FD1471006C1482DA88028E9CE4DBB080B815C9B0344D39E5A8E6EC1419F SWAP3 ADD MLOAD SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 MLOAD AND SWAP5 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xE0 DUP10 ADD MLOAD AND SWAP8 ADD MLOAD SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE ISZERO DUP10 DUP4 ADD MSTORE DUP8 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE LOG4 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x24 SWAP3 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x84 DUP4 DUP11 PUSH1 0x40 MLOAD SWAP2 PUSH32 0x220266B600000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x414135312070726566756E642062656C6F772061637475616C476173436F7374 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP2 SWAP1 SUB PUSH1 0xA MUL DIV SWAP1 SWAP6 ADD SWAP5 DUP10 DUP1 PUSH2 0x1D85 JUMP JUMPDEST PUSH1 0xA0 DUP9 ADD MLOAD ADD PUSH2 0x1D75 JUMP JUMPDEST SWAP3 DUP4 DUP9 MLOAD PUSH2 0x1EEA JUMPI JUMPDEST POP PUSH2 0x1D64 JUMP JUMPDEST PUSH1 0x3 DUP9 LT ISZERO PUSH2 0x1FFF JUMPI PUSH1 0x2 DUP9 SUB ISZERO PUSH2 0x1EE4 JUMPI PUSH1 0xA0 DUP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP13 SWAP12 SWAP11 ADD MLOAD DUP2 EXTCODESIZE ISZERO PUSH2 0x1A7 JUMPI DUP9 PUSH1 0x0 SWAP2 DUP10 DUP4 PUSH2 0x1F5B SWAP6 PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP7 DUP3 SWAP6 PUSH32 0x7C627B2100000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x2400 JUMP JUMPDEST DUP12 DUP12 MUL PUSH1 0x44 DUP4 ADD MSTORE DUP12 PUSH1 0x64 DUP4 ADD MSTORE SUB SWAP4 CALL SWAP1 DUP2 PUSH2 0x1FEB JUMPI JUMPDEST POP PUSH2 0x1FDD JUMPI DUP11 DUP11 RETURNDATASIZE PUSH2 0x800 DUP1 DUP3 GT PUSH2 0x1FD5 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP3 DUP3 DUP3 DUP6 ADD ADD PUSH1 0x40 MSTORE DUP2 DUP5 MSTORE DUP3 DUP5 ADD RETURNDATACOPY PUSH2 0xEC3 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH32 0xAD7954BC00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x2400 JUMP JUMPDEST SWAP1 POP DUP4 PUSH2 0x1F86 JUMP JUMPDEST SWAP10 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 SWAP10 DUP12 PUSH2 0x1EE4 JUMP JUMPDEST PUSH2 0x1FF6 SWAP2 SWAP13 POP PUSH2 0x21F7 JUMP JUMPDEST PUSH1 0x0 SWAP11 DUP13 PUSH2 0x1F73 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x0 SWAP3 SWAP2 DUP4 DUP1 SWAP4 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 MLOAD AND SWAP2 ADD SWAP3 CALL ISZERO PUSH2 0x2061 JUMPI JUMPDEST DUP1 DUP1 DUP1 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x1D14 SWAP3 POP RETURNDATASIZE PUSH2 0x800 DUP1 DUP3 GT PUSH2 0x2100 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP10 DUP2 DUP4 ADD ADD PUSH1 0x40 MSTORE DUP1 DUP3 MSTORE PUSH1 0x0 DUP11 DUP4 ADD RETURNDATACOPY DUP1 MLOAD PUSH2 0x2099 JUMPI JUMPDEST POP POP PUSH1 0x1 SWAP2 PUSH2 0x2059 JUMP JUMPDEST PUSH32 0x1C4FADA7374C0A9EE8841FC38AFE82932DC0F8E69012E927F061A8BAE611A201 DUP10 DUP1 DUP9 ADD MLOAD SWAP3 PUSH2 0x20F6 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 MLOAD AND SWAP7 ADD MLOAD SWAP2 PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 SWAP5 DUP6 MSTORE DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x2400 JUMP JUMPDEST SUB SWAP1 LOG3 DUP8 DUP1 PUSH2 0x208F JUMP JUMPDEST SWAP1 POP DUP10 PUSH2 0x2072 JUMP JUMPDEST DUP9 PUSH32 0xDEADDEAD00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x64 DUP8 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4141393220696E7465726E616C2063616C6C206F6E6C79000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x21AB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x140 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x21AB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x21AB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x21AB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x21AB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x21AB JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x22AE DUP3 PUSH2 0x2268 JUMP JUMPDEST SWAP2 PUSH2 0x22BC PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x2227 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x1A7 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x1A7 JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x1A7 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x1A7 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x1A7 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x1A7 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC DUP4 ADD SLT PUSH2 0x1A7 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP4 DUP3 GT PUSH2 0x1A7 JUMPI DUP1 PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x1A7 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP4 DUP5 GT PUSH2 0x1A7 JUMPI PUSH1 0x24 DUP5 PUSH1 0x5 SHL DUP4 ADD ADD GT PUSH2 0x1A7 JUMPI PUSH1 0x24 ADD SWAP2 SWAP1 PUSH1 0x24 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x1A7 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x23F0 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x23E0 JUMP JUMPDEST SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F PUSH1 0x20 SWAP4 PUSH2 0x243C DUP2 MLOAD DUP1 SWAP3 DUP2 DUP8 MSTORE DUP8 DUP1 DUP9 ADD SWAP2 ADD PUSH2 0x23DD JUMP JUMPDEST ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x2452 DUP3 DUP3 ADD DUP3 PUSH2 0x2884 JUMP JUMPDEST SWAP1 DUP2 DUP5 MLOAD SWAP2 DUP3 CALLDATACOPY KECCAK256 SWAP1 PUSH2 0x2468 PUSH1 0x60 DUP3 ADD DUP3 PUSH2 0x2884 JUMP JUMPDEST SWAP1 DUP2 DUP6 MLOAD SWAP2 DUP3 CALLDATACOPY KECCAK256 SWAP1 PUSH2 0x100 PUSH1 0xE0 PUSH2 0x2482 DUP3 DUP5 ADD DUP5 PUSH2 0x2884 JUMP JUMPDEST SWAP1 DUP2 DUP9 MLOAD SWAP2 DUP3 CALLDATACOPY KECCAK256 SWAP3 DUP7 MLOAD SWAP5 PUSH1 0x20 DUP7 ADD SWAP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 CALLDATALOAD AND DUP9 MSTORE PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP10 DUP9 ADD MSTORE PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x80 DUP2 ADD CALLDATALOAD PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xA0 DUP2 ADD CALLDATALOAD PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xC0 DUP2 ADD CALLDATALOAD DUP3 DUP7 ADD MSTORE ADD CALLDATALOAD SWAP1 DUP4 ADD MSTORE PUSH2 0x120 SWAP1 DUP2 DUP4 ADD MSTORE DUP2 MSTORE PUSH2 0x24F6 DUP2 PUSH2 0x21DA JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 DUP4 MSTORE ADDRESS DUP2 DUP4 ADD MSTORE CHAINID PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x60 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 DUP3 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x21AB JUMPI MSTORE MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xB5A JUMPI JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xB5A JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xB5A JUMPI JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x25A4 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x258A DUP3 PUSH2 0x2268 JUMP JUMPDEST SWAP2 PUSH2 0x2598 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x2227 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x21AB JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x25CB DUP3 PUSH2 0x25A9 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x25DB PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x2227 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x2609 DUP3 SWAP6 PUSH2 0x25A9 JUMP JUMPDEST ADD SWAP2 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x261B JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP3 MLOAD PUSH2 0x2629 DUP2 PUSH2 0x218F JUMP JUMPDEST DUP4 MLOAD PUSH2 0x2634 DUP2 PUSH2 0x21DA JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 DUP5 SWAP2 DUP2 DUP4 DUP3 ADD MSTORE DUP2 DUP8 DUP3 ADD MSTORE DUP2 PUSH1 0x60 DUP2 DUP2 DUP5 ADD MSTORE PUSH1 0x80 SWAP3 DUP3 DUP5 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE DUP7 MSTORE DUP2 DUP6 DUP8 ADD MSTORE DUP2 DUP10 DUP8 ADD MSTORE DUP6 ADD MSTORE DUP4 ADD MSTORE DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x260E JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x26A7 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x26A7 JUMPI PUSH1 0x5 SHL DUP2 ADD CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEC1 DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x1A7 JUMPI ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1A7 JUMPI MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x1A7 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 PUSH1 0x20 SWAP5 SWAP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP4 DUP2 DUP7 MSTORE DUP7 DUP7 ADD CALLDATACOPY PUSH1 0x0 DUP6 DUP3 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH32 0x2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4 PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x27C3 CALLVALUE DUP6 PUSH2 0x3C82 JUMP JUMPDEST SWAP4 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND SWAP3 LOG2 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x26A7 JUMPI PUSH1 0x5 SHL DUP2 ADD CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA1 DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x1A7 JUMPI ADD SWAP1 JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x1A7 JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1A7 JUMPI PUSH1 0x20 ADD SWAP2 DUP2 PUSH1 0x5 SHL CALLDATASIZE SUB DUP4 SGT PUSH2 0x1A7 JUMPI JUMP JUMPDEST CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x1A7 JUMPI SWAP1 JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x1A7 JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1A7 JUMPI PUSH1 0x20 ADD SWAP2 DUP2 CALLDATASIZE SUB DUP4 SGT PUSH2 0x1A7 JUMPI JUMP JUMPDEST SWAP1 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP3 CALLDATASIZE SUB ADD DUP2 SLT ISZERO PUSH2 0x1A7 JUMPI ADD PUSH1 0x20 DUP2 CALLDATALOAD SWAP2 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1A7 JUMPI DUP2 CALLDATASIZE SUB DUP4 SGT PUSH2 0x1A7 JUMPI JUMP JUMPDEST PUSH2 0x140 SWAP2 DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x1A7 JUMPI PUSH2 0x299B PUSH2 0x2980 PUSH2 0x29FE SWAP6 PUSH2 0x29DF SWAP4 DUP6 MSTORE PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x2970 PUSH1 0x40 DUP8 ADD DUP8 PUSH2 0x28D5 JUMP JUMPDEST SWAP1 SWAP2 DUP1 PUSH1 0x40 DUP9 ADD MSTORE DUP7 ADD SWAP2 PUSH2 0x2742 JUMP JUMPDEST PUSH2 0x298D PUSH1 0x60 DUP7 ADD DUP7 PUSH2 0x28D5 JUMP JUMPDEST SWAP1 DUP6 DUP4 SUB PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x2742 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD CALLDATALOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP5 ADD CALLDATALOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP5 ADD CALLDATALOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP5 ADD CALLDATALOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 PUSH2 0x29D2 DUP2 DUP7 ADD DUP7 PUSH2 0x28D5 JUMP JUMPDEST SWAP2 DUP6 DUP5 SUB SWAP1 DUP7 ADD MSTORE PUSH2 0x2742 JUMP JUMPDEST SWAP2 PUSH2 0x29F0 PUSH2 0x120 SWAP2 DUP3 DUP2 ADD SWAP1 PUSH2 0x28D5 JUMP JUMPDEST SWAP3 SWAP1 SWAP2 DUP2 DUP6 SUB SWAP2 ADD MSTORE PUSH2 0x2742 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD EQ PUSH2 0x2A10 JUMPI PUSH1 0x2 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP3 SWAP1 SWAP2 PUSH1 0x0 SWAP3 GAS SWAP1 DUP3 MLOAD DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x1A7 JUMPI DUP2 MSTORE PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 SHR PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xA0 DUP3 ADD CALLDATALOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x100 PUSH1 0xC0 DUP4 ADD CALLDATALOAD DUP2 DUP4 ADD MSTORE PUSH1 0xE0 DUP4 ADD CALLDATALOAD PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x2AC2 DUP2 DUP5 ADD DUP5 PUSH2 0x2884 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x352E JUMPI PUSH1 0x34 DUP2 LT PUSH2 0x34D0 JUMPI DUP1 PUSH1 0x14 GT PUSH2 0x1A7 JUMPI DUP1 PUSH1 0x24 GT PUSH2 0x1A7 JUMPI PUSH1 0x34 GT PUSH2 0x1A7 JUMPI PUSH1 0x24 DUP2 ADD CALLDATALOAD PUSH1 0x80 SHR PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x14 DUP2 ADD CALLDATALOAD PUSH1 0x80 SHR PUSH1 0x80 DUP5 ADD MSTORE CALLDATALOAD PUSH1 0x60 SHR PUSH1 0xE0 DUP4 ADD MSTORE JUMPDEST PUSH2 0x2B14 DUP4 PUSH2 0x2443 JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MSTORE PUSH15 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD OR PUSH1 0x60 DUP5 ADD MLOAD OR PUSH1 0x80 DUP5 ADD MLOAD OR PUSH1 0xE0 DUP6 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 DUP7 ADD CALLDATALOAD SWAP1 PUSH1 0xA0 DUP7 ADD MLOAD OR OR OR GT PUSH2 0x3472 JUMPI PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 DUP4 ADD MLOAD ADD PUSH1 0x80 DUP4 ADD MLOAD ADD PUSH1 0xA0 DUP4 ADD MLOAD ADD PUSH1 0xC0 DUP4 ADD MLOAD ADD SWAP1 DUP3 ADD MLOAD MUL DUP5 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 MLOAD AND PUSH2 0x2BA2 PUSH1 0x40 DUP7 ADD DUP7 PUSH2 0x2884 JUMP JUMPDEST DUP1 PUSH2 0x3183 JUMPI JUMPDEST POP POP PUSH2 0x2C17 PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xE0 DUP6 ADD MLOAD AND SWAP4 PUSH1 0x0 SWAP1 DUP6 ISZERO PUSH2 0x3151 JUMPI JUMPDEST PUSH1 0x40 ADD MLOAD DUP3 DUP12 ADD MLOAD PUSH1 0x0 DUP7 DUP12 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP4 PUSH32 0x8803E45100000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH2 0x3CE0 JUMP JUMPDEST SUB SWAP4 CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x311D JUMPI JUMPDEST POP PUSH2 0x2CCB JUMPI RETURNDATASIZE DUP12 PUSH2 0x800 DUP1 DUP4 GT PUSH2 0x2CC3 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 DUP2 DUP5 ADD ADD PUSH1 0x40 MSTORE DUP1 DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEC3 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH32 0x65C8FD4D00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x60 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0xD PUSH1 0x64 DUP5 ADD MSTORE PUSH32 0x4141323320726576657274656400000000000000000000000000000000000000 PUSH1 0x84 DUP5 ADD MSTORE PUSH1 0xA0 PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0xA4 DUP4 ADD SWAP1 PUSH2 0x2400 JUMP JUMPDEST SWAP2 POP DUP3 PUSH2 0x2C35 JUMP JUMPDEST SWAP2 ISZERO PUSH2 0x3097 JUMPI JUMPDEST POP SWAP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 MLOAD AND PUSH1 0x20 DUP5 ADD MLOAD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x40 SHR PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP3 SLOAD SWAP3 PUSH2 0x2D24 DUP5 PUSH2 0x253F JUMP JUMPDEST SWAP1 SSTORE AND SUB PUSH2 0x3032 JUMPI PUSH1 0x60 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xE0 DUP3 ADD MLOAD AND PUSH2 0x2DE6 JUMPI JUMPDEST GAS DUP7 SUB SWAP1 PUSH1 0x80 PUSH1 0x40 DUP3 ADD MLOAD SWAP2 ADD MLOAD ADD LT PUSH2 0x2D81 JUMPI POP PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 SWAP2 PUSH1 0xA0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 GAS SWAP1 SUB ADD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x220266B600000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x41413430206F76657220766572696669636174696F6E4761734C696D69740000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP9 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 POP SWAP7 POP DUP4 MLOAD SWAP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xE0 DUP11 ADD MLOAD AND SWAP9 DUP10 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP4 DUP2 LT PUSH2 0x2FCD JUMPI SWAP11 PUSH1 0x80 PUSH1 0x0 SWAP4 DUP6 SWAP4 DUP5 PUSH2 0x2E78 SWAP14 SWAP15 SWAP16 SUB SWAP1 SSTORE ADD MLOAD SWAP1 DUP4 PUSH1 0x20 DUP11 ADD MLOAD SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP14 DUP2 SWAP7 DUP3 SWAP6 PUSH32 0x703AE88F00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE DUP13 PUSH1 0x4 DUP6 ADD PUSH2 0x3CE0 JUMP JUMPDEST SUB SWAP4 CALL SWAP7 DUP8 PUSH1 0x0 SWAP2 PUSH1 0x0 SWAP10 PUSH2 0x2F40 JUMPI JUMPDEST POP PUSH2 0x2F30 JUMPI RETURNDATASIZE DUP11 PUSH2 0x800 DUP1 DUP4 GT PUSH2 0x2F28 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 DUP2 DUP5 ADD ADD PUSH1 0x40 MSTORE DUP1 DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEC3 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH32 0x65C8FD4D00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x60 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0xD PUSH1 0x64 DUP5 ADD MSTORE PUSH32 0x4141333320726576657274656400000000000000000000000000000000000000 PUSH1 0x84 DUP5 ADD MSTORE PUSH1 0xA0 PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0xA4 DUP4 ADD SWAP1 PUSH2 0x2400 JUMP JUMPDEST SWAP2 POP DUP3 PUSH2 0x2E9A JUMP JUMPDEST SWAP9 SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 SWAP3 PUSH2 0x2D4F JUMP JUMPDEST SWAP2 POP SWAP8 POP RETURNDATASIZE SWAP1 DUP2 PUSH1 0x0 DUP3 RETURNDATACOPY PUSH2 0x2F55 DUP3 DUP3 PUSH2 0x2227 JUMP JUMPDEST PUSH1 0x40 DUP2 DUP4 DUP2 ADD SUB SLT PUSH2 0x1A7 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1A7 JUMPI DUP3 DUP2 ADD PUSH1 0x1F DUP4 DUP4 ADD ADD SLT ISZERO PUSH2 0x1A7 JUMPI DUP2 DUP2 ADD MLOAD SWAP2 PUSH2 0x2F90 DUP4 PUSH2 0x2268 JUMP JUMPDEST SWAP4 PUSH2 0x2F9E PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x2227 JUMP JUMPDEST DUP4 DUP6 MSTORE DUP3 ADD PUSH1 0x20 DUP5 DUP4 DUP6 ADD ADD ADD GT PUSH2 0x1A7 JUMPI PUSH1 0x20 SWAP3 PUSH2 0x2FC4 SWAP2 DUP5 DUP1 DUP8 ADD SWAP2 DUP6 ADD ADD PUSH2 0x23DD JUMP JUMPDEST ADD MLOAD SWAP8 CODESIZE PUSH2 0x2E88 JUMP JUMPDEST PUSH1 0x84 DUP12 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x220266B600000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x41413331207061796D6173746572206465706F73697420746F6F206C6F770000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x220266B600000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4141323520696E76616C6964206163636F756E74206E6F6E6365000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 DUP5 GT PUSH2 0x30B8 JUMPI DUP4 SWAP1 SUB SWAP1 SSTORE CODESIZE PUSH2 0x2CD2 JUMP JUMPDEST PUSH1 0x84 DUP12 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x220266B600000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x41413231206469646E2774207061792070726566756E64000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3149 JUMPI JUMPDEST DUP2 PUSH2 0x3139 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2227 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A7 JUMPI MLOAD SWAP1 CODESIZE PUSH2 0x2C23 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x312C JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP7 DUP2 GT PUSH1 0x0 EQ PUSH2 0x3179 JUMPI POP PUSH1 0x40 PUSH1 0x0 JUMPDEST SWAP2 SWAP1 POP PUSH2 0x2BD5 JUMP JUMPDEST PUSH1 0x40 SWAP1 DUP8 SUB PUSH2 0x3171 JUMP JUMPDEST DUP3 EXTCODESIZE PUSH2 0x340D JUMPI PUSH1 0x40 DUP10 MLOAD ADD MLOAD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH32 0x570E1A3600000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP3 PUSH1 0x4 DUP4 ADD MSTORE DUP2 PUSH1 0x0 DUP2 PUSH2 0x31D1 PUSH1 0x24 DUP3 ADD DUP10 DUP12 PUSH2 0x2742 JUMP JUMPDEST SUB SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND SWAP1 CALL SWAP1 DUP2 ISZERO PUSH2 0xDC2 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x33EE JUMPI JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0x3389 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SUB PUSH2 0x3324 JUMPI EXTCODESIZE ISZERO PUSH2 0x32BF JUMPI PUSH1 0x14 GT PUSH2 0x1A7 JUMPI DUP2 SWAP1 PUSH32 0xD51A9C61267AA6196961883ECF5FF2DA6619C37DAC0FA92122513FB32C032D2D PUSH1 0x40 PUSH1 0x20 DUP12 ADD MLOAD SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xE0 DUP14 MLOAD ADD MLOAD AND DUP3 MLOAD SWAP2 CALLDATALOAD PUSH1 0x60 SHR DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG3 CODESIZE DUP1 PUSH2 0x2BA8 JUMP JUMPDEST PUSH1 0x84 DUP13 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x220266B600000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4141313520696E6974436F6465206D757374206372656174652073656E646572 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 DUP14 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x220266B600000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4141313420696E6974436F6465206D7573742072657475726E2073656E646572 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 DUP14 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x220266B600000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4141313320696E6974436F6465206661696C6564206F72204F4F470000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x3407 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xDBB JUMPI PUSH2 0xDAC DUP2 DUP4 PUSH2 0x2227 JUMP JUMPDEST CODESIZE PUSH2 0x321B JUMP JUMPDEST PUSH1 0x84 DUP13 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x220266B600000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x414131302073656E64657220616C726561647920636F6E737472756374656400 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41413934206761732076616C756573206F766572666C6F770000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4141393320696E76616C6964207061796D6173746572416E6444617461000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP PUSH1 0x0 PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x2B0B JUMP JUMPDEST SWAP1 SWAP3 SWAP2 GAS SWAP1 PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x0 PUSH1 0x40 SWAP4 DUP5 MLOAD SWAP8 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP10 PUSH2 0x358B PUSH1 0x60 DUP5 ADD DUP5 PUSH2 0x2884 JUMP JUMPDEST DUP7 PUSH1 0x3 DUP3 GT PUSH2 0x3B89 JUMPI JUMPDEST PUSH32 0x18AD2E1200000000000000000000000000000000000000000000000000000000 SWAP5 AND DUP5 EQ DUP8 EQ PUSH2 0x3A30 JUMPI POP POP POP PUSH2 0x3665 SWAP2 PUSH2 0x3750 SWAP2 PUSH1 0x20 DUP9 ADD MLOAD PUSH2 0x35ED DUP11 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x20 DUP6 ADD MSTORE DUP12 PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x64 DUP5 ADD SWAP1 PUSH2 0x2925 JUMP JUMPDEST SWAP1 PUSH1 0x44 DUP4 ADD MSTORE SUB SWAP1 PUSH2 0x3625 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP3 DUP4 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x2227 JUMP JUMPDEST PUSH2 0x3744 DUP10 MLOAD SWAP5 DUP6 SWAP3 PUSH31 0x42DC5300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x200 PUSH1 0x24 DUP6 ADD MSTORE PUSH2 0x224 DUP5 ADD SWAP1 PUSH2 0x2400 JUMP JUMPDEST PUSH2 0x3713 PUSH1 0x44 DUP5 ADD DUP12 PUSH1 0x80 PUSH2 0x1A0 SWAP2 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 MLOAD AND DUP7 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP8 ADD MSTORE DUP4 DUP3 ADD MLOAD DUP5 DUP8 ADD MSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xE0 DUP3 ADD MLOAD AND PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH2 0x120 DUP1 SWAP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH2 0x140 DUP6 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH2 0x160 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH2 0x180 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDC DUP4 DUP3 SUB ADD PUSH2 0x204 DUP5 ADD MSTORE DUP9 PUSH2 0x2400 JUMP JUMPDEST SUB SWAP1 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x2227 JUMP JUMPDEST PUSH1 0x20 SWAP3 DUP2 DUP5 DUP1 SWAP4 MLOAD SWAP2 ADD DUP3 ADDRESS GAS CALL PUSH1 0x0 MLOAD SWAP9 DUP7 MSTORE ISZERO PUSH2 0x3772 JUMPI JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 POP PUSH1 0x0 RETURNDATASIZE DUP4 EQ PUSH2 0x3A22 JUMPI JUMPDEST PUSH32 0xDEADDEAD00000000000000000000000000000000000000000000000000000000 SUB PUSH2 0x380D JUMPI PUSH1 0x84 DUP7 DUP7 DUP1 MLOAD SWAP2 PUSH32 0x220266B600000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x41413935206F7574206F66206761730000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x389B SWAP1 DUP3 DUP6 SWAP7 SWAP5 SWAP6 ADD MLOAD DUP7 MLOAD SWAP1 PUSH32 0xF62676F440FF169A3A9AFDBF812E89E7F95975EE8E5C31214FFDEF631C5F4792 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 MLOAD AND SWAP4 ADD MLOAD RETURNDATASIZE SWAP1 PUSH2 0x800 DUP1 DUP4 GT PUSH2 0x3A1A JUMPI JUMPDEST POP DUP9 MLOAD SWAP2 DUP9 DUP2 DUP5 ADD ADD DUP11 MSTORE DUP1 DUP4 MSTORE PUSH1 0x0 DUP10 DUP5 ADD RETURNDATACOPY PUSH2 0x3891 DUP10 MLOAD SWAP3 DUP4 SWAP3 DUP4 MSTORE DUP11 DUP11 DUP5 ADD MSTORE DUP11 DUP4 ADD SWAP1 PUSH2 0x2400 JUMP JUMPDEST SUB SWAP1 LOG3 GAS SWAP1 PUSH2 0x256C JUMP JUMPDEST PUSH2 0x38AB PUSH1 0x80 DUP7 ADD SWAP2 DUP3 MLOAD SWAP1 PUSH2 0x2532 JUMP JUMPDEST SWAP3 GAS SWAP6 PUSH1 0x0 DUP2 MLOAD SWAP8 PUSH2 0x38BC DUP10 PUSH2 0x3CB6 JUMP JUMPDEST PUSH1 0xE0 DUP11 ADD SWAP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP9 DUP10 DUP12 MLOAD AND DUP1 ISZERO PUSH1 0x0 EQ PUSH2 0x3A09 JUMPI POP DUP10 DUP13 MLOAD AND SWAP4 JUMPDEST GAS SWAP1 SUB ADD SWAP7 PUSH1 0x60 DUP13 ADD MLOAD SWAP2 MLOAD PUSH2 0x39FC JUMPI JUMPDEST MLOAD DUP8 SUB SWAP1 DUP2 DUP2 GT PUSH2 0x39E8 JUMPI JUMPDEST POP POP DUP6 MUL SWAP10 DUP5 DUP5 ADD SWAP1 DUP12 DUP3 MLOAD LT PUSH2 0x3986 JUMPI POP DUP3 SWAP2 DUP12 PUSH2 0x3929 SWAP3 MLOAD SUB SWAP1 PUSH2 0x3C82 JUMP JUMPDEST POP PUSH2 0x1E2B JUMPI POP SWAP2 DUP8 DUP5 SWAP3 PUSH1 0x0 DUP5 PUSH32 0x49628FD1471006C1482DA88028E9CE4DBB080B815C9B0344D39E5A8E6EC1419F SWAP8 PUSH1 0x80 SWAP8 ADD MLOAD SWAP9 DUP1 DUP13 MLOAD AND SWAP11 MLOAD AND SWAP11 ADD MLOAD SWAP5 DUP3 MLOAD SWAP6 DUP7 MSTORE DUP6 ADD MSTORE DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE LOG4 SWAP1 CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x376A JUMP JUMPDEST PUSH1 0x84 SWAP1 DUP9 DUP8 DUP1 MLOAD SWAP3 PUSH32 0x220266B600000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x414135312070726566756E642062656C6F772061637475616C476173436F7374 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP2 SWAP1 SUB PUSH1 0xA MUL DIV SWAP1 SWAP6 ADD SWAP5 CODESIZE DUP1 PUSH2 0x3908 JUMP JUMPDEST SWAP1 PUSH1 0xA0 DUP13 ADD MLOAD ADD SWAP1 PUSH2 0x38FC JUMP JUMPDEST SWAP4 DUP3 MLOAD ISZERO PUSH2 0x38EB JUMPI PUSH1 0x0 SWAP6 POP PUSH2 0x38EB JUMP JUMPDEST SWAP2 POP CODESIZE PUSH2 0x3865 JUMP JUMPDEST POP DUP2 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 MLOAD PUSH2 0x3784 JUMP JUMPDEST PUSH2 0x3B83 SWAP5 POP DUP3 SWAP4 POP SWAP1 PUSH2 0x3A78 SWAP2 PUSH31 0x42DC5300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 PUSH2 0x3B57 SWAP6 ADD MSTORE PUSH2 0x200 PUSH1 0x24 DUP7 ADD MSTORE PUSH2 0x224 DUP6 ADD SWAP2 PUSH2 0x2742 JUMP JUMPDEST PUSH2 0x3B26 PUSH1 0x44 DUP5 ADD DUP10 PUSH1 0x80 PUSH2 0x1A0 SWAP2 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 MLOAD AND DUP7 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x60 DUP8 ADD MSTORE DUP4 DUP3 ADD MLOAD DUP5 DUP8 ADD MSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xE0 DUP3 ADD MLOAD AND PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH2 0x120 DUP1 SWAP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH2 0x140 DUP6 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH2 0x160 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH2 0x180 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDC DUP4 DUP3 SUB ADD PUSH2 0x204 DUP5 ADD MSTORE DUP7 PUSH2 0x2400 JUMP JUMPDEST SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 ADD DUP11 MSTORE DUP10 PUSH2 0x2227 JUMP JUMPDEST DUP8 PUSH2 0x3750 JUMP JUMPDEST POP DUP2 CALLDATALOAD PUSH2 0x3595 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 ISZERO PUSH2 0x3C24 JUMPI PUSH1 0x0 DUP1 DUP1 SWAP4 DUP2 SWAP4 GAS CALL PUSH2 0x3BBE PUSH2 0x2579 JUMP JUMPDEST POP ISZERO PUSH2 0x3BC6 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41413931206661696C65642073656E6420746F2062656E656669636961727900 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4141393020696E76616C69642062656E65666963696172790000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0x3CB0 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2532 JUMP JUMPDEST DUP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x100 DUP3 ADD MLOAD SWAP2 ADD MLOAD DUP1 DUP3 EQ PUSH2 0x3CDC JUMPI BASEFEE ADD DUP1 DUP3 LT ISZERO PUSH2 0x3CD7 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x3CF8 PUSH1 0x40 SWAP3 SWAP6 SWAP5 SWAP4 SWAP6 PUSH1 0x60 DUP4 MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH2 0x2925 JUMP JUMPDEST SWAP5 PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3D8F JUMPI PUSH1 0x0 PUSH1 0x40 DUP1 MLOAD PUSH2 0x3D17 DUP2 PUSH2 0x220B JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SWAP1 PUSH1 0x40 PUSH6 0xFFFFFFFFFFFF SWAP2 DUP3 DUP2 PUSH1 0xA0 SHR AND SWAP1 DUP2 ISZERO PUSH2 0x3D87 JUMPI JUMPDEST PUSH1 0xD0 SHR SWAP3 DUP3 MLOAD SWAP2 PUSH2 0x3D62 DUP4 PUSH2 0x220B JUMP JUMPDEST DUP6 DUP4 MSTORE DUP5 PUSH1 0x20 DUP5 ADD MSTORE AND SWAP2 DUP3 SWAP2 ADD MSTORE TIMESTAMP GT SWAP1 DUP2 ISZERO PUSH2 0x3D7F JUMPI POP SWAP1 SWAP2 JUMP JUMPDEST SWAP1 POP TIMESTAMP LT SWAP1 SWAP2 JUMP JUMPDEST DUP4 SWAP2 POP PUSH2 0x3D52 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 PUSH1 0x0 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY NUMBER PUSH28 0x55A0BA03D9E62CB130B1A5B39234FE52CCCEAC94F18F2C86B0EFA3F 0x27 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"854:29082:3:-:0;;;;;;;;;-1:-1:-1;854:29082:3;;;;;;;;1414:10:7;;;:::i;:::-;854:29082:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29896:31;854:29082;29896:31;;;854:29082;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;507:47:7;854:29082:3;;507:47:7;;854:29082:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2322:103:0;;;:::i;:::-;854:29082:3;7285:13;854:29082;7300:11;;;;;;8087:26;;;;;:::i;:::-;854:29082;;8173:11;;;;;;8999:17;;;854:29082;8999:17;;854:29082;;9084:13;854:29082;9099:11;;;;;;9631:9;9557:38;;854:29082;9205:51;9557:38;;;9631:9;:::i;:::-;7637:1;2924:21:0;854:29082:3;;9112:3;9307:11;9167:19;;;;;:::i;:::-;854:29082;9240:14;7488;9240;;;:::i;:::-;854:29082;9205:51;854:29082;9205:51;;9307:11;;:::i;:::-;9379:13;854:29082;9374:159;9394:10;;;;;;9112:3;;;7637:1;854:29082;9084:13;;9406:3;9466:6;;;;9509:9;9429:62;7637:1;9466:6;9442:49;9466:6;;9474:16;9466:6;;;;;;:::i;:::-;9474:16;;:::i;:::-;;9442:49;;:::i;:::-;9429:62;;:::i;:::-;9509:9;;:::i;:::-;9406:3;854:29082;9379:13;;;;8186:3;7488:14;8241:19;;;;;:::i;:::-;8361:14;8311:11;;;;:::i;:::-;8361:14;;;;;:::i;:::-;8436:13;854:29082;;;;;;8451:10;;;;;;8186:3;;;;;7637:1;854:29082;8158:13;;8463:3;8513:16;;;;;20711:56;8513:16;8665:44;8513:16;;;;:::i;:::-;;8694:6;;;;;:::i;:::-;8665:44;;:::i;:::-;20711:56;;;:::i;:::-;854:29082;;20781:32;;20777:111;;20897:96;;21295:65;;;;:::i;:::-;854:29082;;21370:105;;21484:106;;8950:9;7637:1;8950:9;;:::i;:::-;8463:3;854:29082;8436:13;;;;;;21484:106;854:29082;;;;21525:54;;;;854:29082;21525:54;;854:29082;;;;;;;;;;;;;;;;;;;;;21525:54;21370:105;854:29082;;;;21423:41;;;;854:29082;21423:41;;854:29082;;;;;;;;;;;;;;;;21423:41;20897:96;854:29082;;;;20938:44;;;;854:29082;20938:44;;854:29082;;;;;;;;;;;;;;;;20938:44;20777:111;854:29082;;;;20836:41;;;;854:29082;20836:41;;854:29082;;;;;;;;;;;;;;;;20836:41;7313:3;7368:19;;;;;:::i;:::-;7438:11;;;;;:::i;:::-;7488:14;;;;854:29082;7488:14;;;;;:::i;:::-;854:29082;7637:1;;7606:33;;;;854:29082;;7715:33;7711:289;;7313:3;8014:22;;;;7637:1;8014:22;;;;;;;;;:::i;:::-;7313:3;7285:13;;854:29082;7285:13;;7711:289;7868:13;854:29082;7868:13;;;;;:::i;:::-;7833:49;;;;;;854:29082;;;;;;7833:49;;;854:29082;7833:49;;854:29082;;;;;;7833:49;;854:29082;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7833:49;;;;;;;;;854:29082;-1:-1:-1;7829:157:3;;854:29082;;;;7921:46;;;;854:29082;7921:46;;854:29082;7921:46;7829:157;;;-1:-1:-1;7829:157:3;;8014:22;7637:1;7711:289;;;;7833:49;;;;:::i;:::-;;;;854:29082;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3934:10:7;854:29082:3;;;;;3971:10:7;854:29082:3;;;3971:10:7;854:29082:3;;;;;;;;;3999:9:7;;;854:29082:3;;;;;;;4051:21:7;;854:29082:3;;4158:15:7;-1:-1:-1;854:29082:3;;;;;;;;;;;;;;;;;4330:50:7;3934:10;4330:50;;;;;;854:29082:3;;;;;;;;;;;;;;;;;4330:50:7;;;;854:29082:3;4408:38:7;;;;:::i;:::-;;854:29082:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3285:10:7;854:29082:3;;;;;3314:20:7;854:29082:3;;;3314:20:7;854:29082:3;;;;;;;3314:25:7;;;854:29082:3;;;;;;;;3444:15:7;;;854:29082:3;;;;;;;;;;;;;;;;;;;;;;;;;;;3285:10:7;;3569:39;;854:29082:3;;3569:39:7;854:29082:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;16143:38;;;;;854:29082;16143:38;;;854:29082;16143:38;;854:29082;;;;;;:::i;:::-;16143:38;1178:14;854:29082;1178:14;;854:29082;16143:38;;;;;;;854:29082;16143:38;854:29082;16143:38;;;854:29082;;;;16198:27;;;;854:29082;;16198:27;;854:29082;16198:27;16143:38;;;;;854:29082;16143:38;854:29082;16143:38;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;854:29082;;;;;;;;;;;;;;;;;;;;;;;1829:1;854:29082;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;29854:25;;;;;;:::i;:::-;854:29082;;;;29896:31;;;;;;854:29082;;;29896:31;;854:29082;;;;;;;;;;;:::i;:::-;29896:31;;;854:29082;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2322:103:0;;;;;:::i;:::-;6188:24:3;;;:::i;:::-;854:29082;6267:10;;;;;;6742:21;854:29082;6782:17;;854:29082;6782:17;;854:29082;6814:120;6834:10;;;;;;6973:9;;;;:::i;6846:3::-;6900:6;;;854:29082;6900:6;6882:37;6900:6;;;;;:::i;:::-;6908:10;;;;:::i;:::-;;6882:37;;;:::i;:::-;854:29082;6846:3;854:29082;6819:13;;;;6279:3;20711:56;6468:38;6329:10;;;;;;:::i;:::-;;6491:6;;;;;:::i;:::-;6468:38;;:::i;:::-;20711:56;;;:::i;:::-;854:29082;;;;;20777:111;;20897:96;;21295:65;;;:::i;:::-;854:29082;;21370:105;;21484:106;;854:29082;;6252:13;;;;;21484:106;854:29082;;;;21525:54;;;;854:29082;21525:54;;854:29082;;;;;;;;;;;;;;;;;;;;;21525:54;21370:105;854:29082;;;;21423:41;;;;854:29082;21423:41;;854:29082;;;;;;;;;;;;;;;;21423:41;20897:96;854:29082;;;;20938:44;;;;854:29082;20938:44;;854:29082;;;;;;;;;;;;;;;;20938:44;20777:111;854:29082;;;;20836:41;;;;854:29082;20836:41;;854:29082;;;;;;;;;;;;;;;;20836:41;854:29082;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;471:19:5;854:29082:3;;;;;;;;;;;;;;;;;;;;;;;471:55:5;854:29082:3;;;;;;;;;;;;;;;;:::i;:::-;;;4842:10:7;;854:29082:3;;;;;;;;;;;4871:30:7;;;;854:29082:3;;;4956:29:7;;854:29082:3;4956:29:7;;;;;;;;:::i;:::-;854:29082:3;;;;;;;;;;;;;;;;4842:10:7;;5000:54;;;854:29082:3;5082:47:7;;;;:::i;:::-;;854:29082:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;277:74:5;854:29082:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;877:10:5;854:29082:3;;857:19:5;854:29082:3;;;;;;;;;;;;;857:38:5;854:29082:3;;857:38:5;:::i;:::-;854:29082:3;;;;;;;;;;;;;;;;;;;;;;;;2465:10:7;854:29082:3;;;;;;;;2494:19:7;;;854:29082:3;;2594:20:7;;;854:29082:3;;;;;;2575:39:7;;854:29082:3;;2694:22:7;854:29082:3;2707:9:7;;;854:29082:3;;;;2694:22:7;:::i;:::-;2734:9;;;854:29082:3;;2784:26:7;;;854:29082:3;;;;;;;;;;;;;:::i;:::-;;;2862:137:7;;;854:29082:3;2594:20:7;854:29082:3;;;2862:137:7;;854:29082:3;;;;;2862:137:7;;;854:29082:3;;;2594:20:7;2862:137;;;854:29082:3;;;;2465:10:7;854:29082:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3014:47:7;854:29082:3;2465:10:7;3014:47;;854:29082:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;2105:114;2121:97;854:29082;2105:114;;:174;;;;;854:29082;2105:236;;;;854:29082;2105:298;;;;854:29082;2105:350;;;;854:29082;;;;;;;;;;2105:350;876:25:1;861:40;;;2105:350:3;;;:298;2187:31;2357:46;;;-1:-1:-1;2105:298:3;;:236;2153:31;2295:46;;;-1:-1:-1;2105:236:3;;:174;2121:29;2235:44;;;-1:-1:-1;2105:174:3;;854:29082;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10854:9;;10903:4;;10881:10;:27;854:29082;;10976:14;;854:29082;11024:20;;854:29082;11180:9;11192:2;11180:9;854:29082;;;1372:5;854:29082;11249:31;;854:29082;;;;-1:-1:-1;11159:331:3;;854:29082;1372:5;;;11586:19;;11582:584;;854:29082;12229:9;;;;1547:4;12229:9;;;1547:4;;854:29082;;;;;;;1547:4;;:::i;:::-;12406:51;854:29082;25641:9;25749:14;;25796:26;;;;:::i;:::-;25857:17;854:29082;;25857:17;;1372:5;854:29082;25892:23;;25888:839;854:29082;;;1372:5;854:29082;1372:5;;854:29082;25888:839;;26762:9;1547:4;;854:29082;26894:20;854:29082;26894:20;;854:29082;1372:5;;27051:116;;25888:839;854:29082;;;;1547:4;;27376:36;;;;27372:274;;25888:839;854:29082;;;;;;;;27728:30;27724:129;;854:29082;;27927:40;854:29082;;1547:4;27927:40;;:::i;:::-;;854:29082;;;;;;;;;28056:248;854:29082;;1547:4;1372:5;854:29082;1372:5;;854:29082;25857:17;;854:29082;;25857:17;;1372:5;854:29082;28194:13;;854:29082;;;;;;;27996:41;1600:2;;;854:29082;1600:2;854:29082;1600:2;;854:29082;;1600:2;;854:29082;28056:248;854:29082;;;;;;;;;;;;;;;;27724:129;854:29082;;;;;27785:53;;;;854:29082;27785:53;;854:29082;;;1600:2;;;854:29082;1600:2;;854:29082;1600:2;854:29082;;;1600:2;27785:53;27372:274;854:29082;1547:4;;;1600:2;854:29082;;;;;;27372:274;;;;27051:116;854:29082;27117:31;;854:29082;;27051:116;;25888:839;26004:25;;1372:5;;26047:666;;25888:839;;;;26047:666;854:29082;;;;;;26163:36;26155:44;;26151:544;26047:666;26151:544;854:29082;26294:31;;;;;;;;;854:29082;26231:160;;;;;854:29082;;;;;;;;;26231:160;;;;;;854:29082;26231:160;;854:29082;26231:160;;854:29082;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;26231:160;;;;;;;26151:544;-1:-1:-1;26227:446:3;;1211:349:17;;;1547:4:3;1211:349:17;;;;;26227:446:3;1211:349:17;854:29082:3;1211:349:17;;;;;;;854:29082:3;1211:349:17;;;;;;;;854:29082:3;;;26624:22;;;;;;854:29082;26624:22;;854:29082;;;;;;:::i;1211:349:17:-;;;;;;26227:446:3;;;;;;;;;26151:544;26047:666;;26231:160;;;;;;:::i;:::-;854:29082;26231:160;;;;854:29082;;;;;;;;;;11582:584;1372:5;854:29082;1372:5;;;;;;854:29082;1372:5;;854:29082;385:118:17;;;;11706:8:3;11702:454;;11582:584;;;;;;11702:454;1547:4;1211:349:17;;;1547:4:3;1211:349:17;;;;;11702:454:3;1211:349:17;854:29082:3;1211:349:17;;;;;;;854:29082:3;1211:349:17;;;;854:29082:3;1211:349:17;;;;1372:5:3;;11815:270;;11702:454;12102:39;;854:29082;11702:454;;;11815:270;11865:201;854:29082;;;;1547:4;1372:5;1547:4;1372:5;854:29082;1372:5;;854:29082;11999:13;;854:29082;;;;;;;;;;1547:4;;;854:29082;1547:4;;;;:::i;:::-;11865:201;;;11815:270;;;;1211:349:17;;;;;;11159:331:3;11350:126;;854:29082;11350:126;854:29082;11350:126;854:29082;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;854:29082:3;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1547:4::-;;;;;;;;-1:-1:-1;;1547:4:3;;;;:::o;:::-;;;;;;;;;;;;;;;854:29082;;;1547:4;;1372:5;;854:29082;;;;;;;;;1547:4;;;:::i;:::-;854:29082;;1547:4;;;:::o;12512:206::-;2030:15:8;;;;;;;;:::i;:::-;3716:193:4;;;;;;;;2094:15:8;;;;;;;:::i;:::-;3716:193:4;;;;;;;;2410:23:8;;2327:27;2410:23;;;;;;:::i;:::-;3716:193:4;;;;;;;;854:29082:3;;;2452:219:8;1970:12;2452:219;;823:61;854:29082:3;823:61:8;;854:29082:3;;;1970:12:8;;;854:29082:3;;;;;2094:15:8;854:29082:3;;;2147:23:8;854:29082:3;;;2147:23:8;;;854:29082:3;2209:25:8;854:29082:3;;;2209:25:8;;;854:29082:3;2267:19:8;854:29082:3;;;2267:19:8;;;854:29082:3;;;;;2327:27:8;854:29082:3;;;;;;;;;;;2452:219:8;;;;;:::i;:::-;1372:5:3;3651:25:8;;854:29082:3;;;12655:55;1970:12:8;12655:55:3;;854:29082;;;12689:4;854:29082;;;;12696:13;2094:15:8;854:29082:3;;;2094:15:8;12655:55:3;;2147:23:8;854:29082:3;;;;;;;;;;;;;1372:5;12645:66;;12512:206;:::o;854:29082::-;;;;;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;854:29082:3;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;854:29082:3;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;:::i;:::-;-1:-1:-1;854:29082:3;;-1:-1:-1;854:29082:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1372:5;;854:29082;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;854:29082:3;;;;;;;;;;;:::o;1972:179:7:-;2114:30;854:29082:3;;2062:37:7;2089:9;2062:37;;:::i;:::-;854:29082:3;;;;;;;2114:30:7;;1972:179::o;854:29082:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;:::o;2431:307:0:-;2558:7;854:29082:3;;2558:18:0;2554:86;;2558:7;854:29082:3;;2431:307:0:o;2554:86::-;2599:30;854:29082:3;;2599:30:0;;;;22616:2113:3;;;;854:29082;22880:9;;22929:17;;;854:29082;;;;;;;;;;;;13105:12;;;854:29082;13105:12;13089:13;;854:29082;13222:23;;;854:29082;;;;13158:20;;;854:29082;13222:23;854:29082;13128:28;;;854:29082;13285:25;;;854:29082;13256:26;;;854:29082;13320:20;13256:26;13343:19;;854:29082;13320:20;;;854:29082;13403:27;;;854:29082;13372:28;;;854:29082;13474:23;;;;;;:::i;:::-;13511:27;;;;490:2:8;13579:65:3;;490:2:8;;372;;;;;;434;372;;;490;372;;;434;372;;434;13222:23:3;854:29082;13285:25;13780:31;;854:29082;372:2:8;;;434;13222:23:3;854:29082;13222:23;13741:37;;854:29082;372:2:8;13158:20:3;372:2:8;13403:27:3;13722:17;;854:29082;13507:546;23025:21;;;:::i;:::-;13105:12;23002:20;;854:29082;;13256:26;;;854:29082;13128:28;;;854:29082;23233:69;13158:20;;;854:29082;23233:104;13222:23;23352:37;;854:29082;23233:156;13403:27;;;854:29082;13343:19;13256:26;13343:19;;854:29082;23404:31;13285:25;23404:31;;854:29082;23233:202;:236;:278;23529:33;854:29082;;13128:28;;;854:29082;13158:20;;;854:29082;;13222:23;23352:37;;854:29082;;13285:25;23404:31;;854:29082;;13256:26;;;854:29082;;13320:20;;;854:29082;;16980:14;;854:29082;1372:5;;854:29082;17092:11;13128:28;17092:11;;;;:::i;:::-;15086:20;15082:932;;13507:546;17138:17;;17469:148;13105:12;854:29082;13403:27;17138:17;;1372:5;854:29082;17169:31;854:29082;17218:23;;;17214:222;;13507:546;13128:28;17527;854:29082;23002:20;;;1547:4;854:29082;;;13128:28;854:29082;17469:148;;;;;;;854:29082;17469:148;;;;;;:::i;:::-;;;;854:29082;;17469:148;;;13507:546;-1:-1:-1;17449:414:3;;1211:349:17;;1547:4:3;1211:349:17;;;;;17449:414:3;1211:349:17;13128:28:3;1211:349:17;;13105:12:3;1211:349:17;;;;13128:28:3;1211:349:17;;;;854:29082:3;13105:12;1211:349:17;;;854:29082:3;13128:28;854:29082;17761:87;;;;;;17469:148;17761:87;;854:29082;13158:20;854:29082;;;;;;;;;;;;;;13285:25;854:29082;;;;;;;;;:::i;1211:349:17:-;;-1:-1:-1;1211:349:17;;;17449:414:3;;17218:23;17876:369;;17449:414;23666:146;1372:5;854:29082;1372:5;;854:29082;13105:12;13089:13;;854:29082;;;;;13105:12;854:29082;13128:28;854:29082;;;13128:28;854:29082;;;13105:12;854:29082;;13128:28;854:29082;;;;;1203:34:5;;;;:::i;:::-;854:29082:3;;;1203:41:5;23823:140:3;;13158:20;24007:17;854:29082;13403:27;24007:17;;1372:5;854:29082;24003:250;;17449:414;24313:9;1547:4;;13128:28;13222:23;13128:28;;;854:29082;23352:37;;854:29082;;24341:78;24337:175;;-1:-1:-1;13128:28:3;24525:17;;854:29082;13158:20;24574:23;;854:29082;13222:23;;13285:25;;;;854:29082;;24675:9;1547:4;;854:29082;24645:18;;854:29082;22616:2113::o;24337:175::-;854:29082;;13128:28;854:29082;24446:51;;;;17469:148;24446:51;;854:29082;13128:28;854:29082;;;;;;;;;;;;;;24446:51;24003:250;24091:151;;;;;;;;;;19131:14;;19179:17;854:29082;13403:27;19179:17;;1372:5;854:29082;;;;;;13105:12;854:29082;13128:28;854:29082;;;;19336:25;;;19332:122;;1547:4;13222:23;854:29082;1547:4;;;;19550:207;1547:4;;;;854:29082;;19601:37;854:29082;23002:20;;13105:12;23002:20;;1547:4;854:29082;13128:28;854:29082;19550:207;;;;;;854:29082;19550:207;;;17469:148;19550:207;;;:::i;:::-;;;;;;854:29082;;;19550:207;;;24003:250;-1:-1:-1;19530:532:3;;1211:349:17;;1547:4:3;1211:349:17;;;;;19530:532:3;1211:349:17;13128:28:3;1211:349:17;;13105:12:3;1211:349:17;;;;13128:28:3;1211:349:17;;;;854:29082:3;13105:12;1211:349:17;;;854:29082:3;13128:28;854:29082;19960:87;;;;;;17469:148;19960:87;;854:29082;13158:20;854:29082;;;;;;;;;;;;;;13285:25;854:29082;;;;;;;;;:::i;1211:349:17:-;;-1:-1:-1;1211:349:17;;;19530:532:3;19845:18;;;;;;;;;;24003:250;;;19550:207;;;;;;;;854:29082;19550:207;;;;;;:::i;:::-;13128:28;19550:207;;;;854:29082;;;;;;;;;;;;19550:207;;;854:29082;;;;;;;;;;;;;;;;;:::i;:::-;;;13128:28;854:29082;;;;:::i;:::-;;;;19550:207;;13105:12;854:29082;;;;;;;;;13105:12;854:29082;;;;;;;;;;;;:::i;:::-;;;19550:207;;;;19332:122;854:29082;;13128:28;854:29082;19388:51;;;;17469:148;19388:51;;854:29082;13128:28;854:29082;;;;;;;;;;;;;;19388:51;23823:140;854:29082;;13128:28;854:29082;23905:47;;;;17469:148;23905:47;;854:29082;13128:28;854:29082;;;;;;;;;;;;;;23905:47;17876:369;854:29082;;;13105:12;854:29082;13128:28;854:29082;;;;18048:25;;;18044:123;;1547:4;;;854:29082;;17876:369;;;18044:123;854:29082;;13128:28;854:29082;18104:44;;;;17469:148;18104:44;;854:29082;13128:28;854:29082;;;;;;;;;;;;;;18104:44;17469:148;;;;13105:12;17469:148;;13105:12;17469:148;;;;;;13105:12;17469:148;;;:::i;:::-;;;854:29082;;;;;17469:148;;;;;;;-1:-1:-1;17469:148:3;;17214:222;854:29082;;;;;;;;13128:28;854:29082;;;17332:21;;;:89;:21;;;:89;13128:28;854:29082;17332:89;17214:222;;;;;17332:89;13128:28;1547:4;;;17332:89;;15082:932;15178:18;;15174:104;;13128:28;15361:14;;:35;854:29082;13105:12;13128:28;854:29082;15310:110;;854:29082;15310:110;;;;;;854:29082;;;;;;;;;;;:::i;:::-;15310:110;1178:14;854:29082;1178:14;854:29082;15310:110;;;;;;;854:29082;15310:110;;;15082:932;854:29082;;;;15438:21;15434:98;;854:29082;;;;15550:17;15546:99;;15663:19;:24;15659:106;;15824:2;372::8;;;23002:20:3;;15848:155;13128:28;13105:12;23002:20;;1547:4;15965:14;854:29082;13403:27;15965:14;;:24;1372:5;854:29082;;;372:2:8;;13158:20:3;372:2:8;854:29082:3;;13105:12;854:29082;;;15848:155;15082:932;;;;15659:106;854:29082;;13128:28;854:29082;15712:53;;;;15310:110;15712:53;;854:29082;13128:28;854:29082;;;;13105:12;854:29082;;;;;;;;;15712:53;15546:99;854:29082;;13128:28;854:29082;15592:53;;;;15310:110;15592:53;;854:29082;13128:28;854:29082;;;;13105:12;854:29082;;;;;;;;;15592:53;15434:98;854:29082;;13128:28;854:29082;15484:48;;;;15310:110;15484:48;;854:29082;13128:28;854:29082;;;;;;;;;;;;;;15484:48;15310:110;;;;13105:12;15310:110;13105:12;15310:110;;;;;;;:::i;:::-;;;;15174:104;854:29082;;13128:28;854:29082;15226:52;;;;;;;854:29082;13128:28;854:29082;;;;;;;;;;;;;;15226:52;854:29082;;13128:28;854:29082;;;;13105:12;854:29082;;;;;;;;;;;;;;;490:2:8;;13128:28:3;854:29082;490:2:8;;;13105:12:3;490:2:8;;;;;;;;854:29082:3;490:2:8;854:29082:3;;;490:2:8;;13507:546:3;13908:17;;854:29082;13403:27;13908:17;;854:29082;;13222:23;13952:37;;854:29082;;13285:25;14007:31;;854:29082;13507:546;;3277:2670;;;;3487:9;3554:20;;;;854:29082;;3651:83;;;;3773:15;854:29082;3773:15;;3554:20;3773:15;;;;:::i;:::-;3802:22;3868:180;;;;;3277:2670;4078:38;;854:29082;4065:51;;4078:38;;;;4220:17;;;854:29082;4220:17;4269:68;4220:17;;;;1547:4;854:29082;;;4165:74;;;4220:17;4165:74;;;;;;;854:29082;;;;;;:::i;:::-;;;;;;4165:74;;;;;;;;;;;;:::i;:::-;854:29082;;;4269:68;;;854:29082;4220:17;4269:68;;;854:29082;4165:74;4269:68;;854:29082;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4269:68;;;;;;;;:::i;:::-;4491:220;;;;;;;;;;;;;854:29082;4491:220;;;;4734:8;4730:1211;;4061:417;3277:2670;;;;;;:::o;4730:1211::-;4758:23;;;;;;;;854:29082;4795:227;;;;;4730:1211;854:29082;5120:35;854:29082;;1478:13;854:29082;;;;5333:36;;;;;;;854:29082;1478:13;;;;;;;;854:29082;1478:13;854:29082;;;1478:13;5333:36;5116:535;5685:18;5453:17;;;;;;;1547:4;5492:14;;1372:5;5413:223;1372:5;854:29082;1372:5;;854:29082;5535:20;;854:29082;1211:349:17;1547:4:3;;1211:349:17;;;;;5116:535:3;1211:349:17;;;;;;;;;;;;;;854:29082:3;1211:349:17;;;;1547:4:3;854:29082;;;;;;;1547:4;;;;;;;;;;:::i;:::-;5413:223;;;5694:9;5685:18;;:::i;:::-;:36;5706:15;;;854:29082;;;5685:36;;:::i;:::-;25641:9;;25684:21;854:29082;25749:14;;25796:26;;;;:::i;:::-;25857:17;;;854:29082;;1372:5;;;;854:29082;25892:23;;25888:839;854:29082;;;1372:5;;;;854:29082;25888:839;;26762:9;1547:4;;854:29082;26894:20;3554;26894;;854:29082;1372:5;;27051:116;;25888:839;854:29082;1547:4;;27376:36;;;;27372:274;;25888:839;854:29082;;;;27728:14;;;;854:29082;;;;27728:30;27724:129;;854:29082;;;;27927:40;854:29082;;1547:4;27927:40;;:::i;:::-;;854:29082;;28092:17;;;;;854:29082;28092:17;28056:248;28092:17;5706:15;28092:17;;1547:4;1372:5;;;;854:29082;1372:5;;854:29082;28194:13;;854:29082;;;;;;;1600:2;;854:29082;1600:2;;854:29082;3554:20;1600:2;;854:29082;28056:248;4730:1211;;;;;;;;;27724:129;1600:2;854:29082;;;;;27785:53;;;;;;;854:29082;1600:2;;;;;;;854:29082;1600:2;854:29082;;;1600:2;27785:53;27372:274;27573:3;1547:4;;;1600:2;854:29082;;;;;;27372:274;;;;27051:116;27117:31;;;;854:29082;;27051:116;;;25888:839;1372:5;;;26047:666;25888:839;26047:666;854:29082;;-1:-1:-1;25888:839:3;;1211:349:17;;-1:-1:-1;1211:349:17;;;4795:227:3;;;854:29082;4795:227;;854:29082;4795:227;;;4061:417;4400:63;;;;;;;854:29082;4400:63;854:29082;4400:63;854:29082;4400:63;;;854:29082;4400:63;;;854:29082;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4400:63;;;;;;;;:::i;:::-;4388:75;4061:417;;3868:180;;;;;;2691:279;854:29082;;2784:25;;854:29082;;2807:1;2867:35;;;;;;;;;:::i;:::-;;854:29082;;;2691:279::o;854:29082::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1596:259:7;854:29082:3;;1720:8:7;854:29082:3;1720:8:7;854:29082:3;;1767:21:7;854:29082:3;1720:8:7;854:29082:3;;;;1767:21:7;:::i;:::-;854:29082:3;;;1596:259:7;:::o;28565:531:3:-;28789:28;28724:20;;;854:29082;28789:28;;854:29082;28835:36;;;28831:173;;29065:13;854:29082;4093:5:4;;;;;;:13;28565:531:3;:::o;4093:13:4:-;;;28565:531:3;:::o;28831:173::-;28970:19;;:::o;854:29082::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;21762:486::-;21906:19;;21902:76;;21924:1;854:29082;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;1215:3:4;854:29082:3;;1229:15:4;;;1225:67;;21762:486:3;1343:8:4;854:29082:3;;;;;;;;:::i;:::-;;;;1366:50:4;854:29082:3;1366:50:4;;854:29082:3;;1366:50:4;;;;854:29082:3;22133:15;:33;:70;;;;;22116:87;22213:28;21762:486;:::o;22133:70::-;:15;;;22170:33;22213:28;21762:486;:::o;1225:67:4:-;1256:29;;-1:-1:-1;1225:67:4;;21902:76:3;21941:26;21924:1;21941:26;21924:1;21941:26;:::o"},"methodIdentifiers":{"SIG_VALIDATION_FAILED()":"8f41ec5a","addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","delegateAndRevert(address,bytes)":"850aaf62","depositTo(address)":"b760faf9","deposits(address)":"fc7e286d","getDepositInfo(address)":"5287ce12","getNonce(address,uint192)":"35567e1a","getSenderAddress(bytes)":"9b249f69","getUserOpHash((address,uint256,bytes,bytes,bytes32,uint256,uint256,uint256,bytes,bytes))":"02101e49","handleAggregatedOps(((address,uint256,bytes,bytes,bytes32,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)":"ea8ad612","handleOps((address,uint256,bytes,bytes,bytes32,uint256,uint256,uint256,bytes,bytes)[],address)":"6b21db51","incrementNonce(uint192)":"0bd28e3b","innerHandleOp(bytes,((address,uint256,uint256,uint256,uint256,uint256,uint256,address,uint256,uint256),bytes32,uint256,uint256,uint256),bytes)":"0042dc53","nonceSequenceNumber(address,uint192)":"1b2e01b8","supportsInterface(bytes4)":"01ffc9a7","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"ret\",\"type\":\"bytes\"}],\"name\":\"DelegateAndRevert\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"FailedOp\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"inner\",\"type\":\"bytes\"}],\"name\":\"FailedOpWithRevert\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"PostOpReverted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SenderAddressResult\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureValidationFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"}],\"name\":\"AccountDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"BeforeExecution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"PostOpRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureAggregatorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasUsed\",\"type\":\"uint256\"}],\"name\":\"UserOperationEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"UserOperationRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"SIG_VALIDATION_FAILED\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"delegateAndRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"getSenderAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"getUserOpHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAggregator\",\"name\":\"aggregator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.UserOpsPerAggregator[]\",\"name\":\"opsPerAggregator\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleAggregatedOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"ops\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymasterVerificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymasterPostOpGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"}],\"internalType\":\"struct EntryPoint.MemoryUserOp\",\"name\":\"mUserOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"prefund\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contextOffset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preOpGas\",\"type\":\"uint256\"}],\"internalType\":\"struct EntryPoint.UserOpInfo\",\"name\":\"opInfo\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"}],\"name\":\"innerHandleOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"\",\"type\":\"uint192\"}],\"name\":\"nonceSequenceNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"FailedOp(uint256,string)\":[{\"params\":{\"opIndex\":\"- Index into the array of ops to the failed one (in simulateValidation, this is always zero).\",\"reason\":\"- Revert reason. The string starts with a unique code \\\"AAmn\\\",                  where \\\"m\\\" is \\\"1\\\" for factory, \\\"2\\\" for account and \\\"3\\\" for paymaster issues,                  so a failure can be attributed to the correct entity.\"}}],\"FailedOpWithRevert(uint256,string,bytes)\":[{\"details\":\"note that inner is truncated to 2048 bytes\",\"params\":{\"inner\":\"- data from inner cought revert reason\",\"opIndex\":\"- Index into the array of ops to the failed one (in simulateValidation, this is always zero).\",\"reason\":\"- Revert reason. see FailedOp(uint,string), above\"}}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SignatureValidationFailed(address)\":[{\"params\":{\"aggregator\":\"The aggregator that failed to verify the signature\"}}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"params\":{\"factory\":\"- The factory used to deploy this account (in the initCode)\",\"paymaster\":\"- The paymaster used by this UserOp\",\"sender\":\"- The account that is deployed\",\"userOpHash\":\"- The userOp that deployed this account. UserOperationEvent will follow.\"}},\"PostOpRevertReason(bytes32,address,uint256,bytes)\":{\"params\":{\"nonce\":\"- The nonce used in the request.\",\"revertReason\":\"- The return bytes from the (reverted) call to \\\"callData\\\".\",\"sender\":\"- The sender of this request.\",\"userOpHash\":\"- The request unique identifier.\"}},\"SignatureAggregatorChanged(address)\":{\"params\":{\"aggregator\":\"- The aggregator used for the following UserOperationEvents.\"}},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"params\":{\"nonce\":\"- The nonce used in the request.\",\"revertReason\":\"- The return bytes from the (reverted) call to \\\"callData\\\".\",\"sender\":\"- The sender of this request.\",\"userOpHash\":\"- The request unique identifier.\"}}},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"The new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"- The account to query.\"}},\"delegateAndRevert(address,bytes)\":{\"details\":\"calling this method, the EntryPoint will make a delegatecall to the given data, and report (via revert) the result.  The method always revert, so is only useful off-chain for dry run calls, in cases where state-override to replace  actual EntryPoint code is less convenient.\"},\"depositTo(address)\":{\"params\":{\"account\":\"- The account to add to.\"}},\"getDepositInfo(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"info\":\"  - Full deposit information of given account.\"}},\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}},\"getSenderAddress(bytes)\":{\"params\":{\"initCode\":\"- The constructor code to be passed into the UserOperation.\"}},\"getUserOpHash((address,uint256,bytes,bytes,bytes32,uint256,uint256,uint256,bytes,bytes))\":{\"params\":{\"userOp\":\"- The user operation to generate the request ID for.\"}},\"handleAggregatedOps(((address,uint256,bytes,bytes,bytes32,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)\":{\"params\":{\"beneficiary\":\"- The address to receive the fees.\",\"opsPerAggregator\":\"- The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\"}},\"handleOps((address,uint256,bytes,bytes,bytes32,uint256,uint256,uint256,bytes,bytes)[],address)\":{\"params\":{\"beneficiary\":\"- The address to receive the fees.\",\"ops\":\"- The operations to execute.\"}},\"innerHandleOp(bytes,((address,uint256,uint256,uint256,uint256,uint256,uint256,address,uint256,uint256),bytes32,uint256,uint256,uint256),bytes)\":{\"params\":{\"callData\":\"- The callData to execute.\",\"context\":\"- The context bytes.\",\"opInfo\":\"- The UserOpInfo struct.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\",\"withdrawAmount\":\"- The amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"FailedOp(uint256,string)\":[{\"notice\":\"A custom revert error of handleOps, to identify the offending op. Should be caught in off-chain handleOps simulation and not happen on-chain. Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts. NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\"}],\"FailedOpWithRevert(uint256,string,bytes)\":[{\"notice\":\"A custom revert error of handleOps, to report a revert by account or paymaster.\"}],\"SignatureValidationFailed(address)\":[{\"notice\":\"Error case when a signature aggregator fails to verify the aggregated signature it had created.\"}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"notice\":\"Account \\\"sender\\\" was deployed.\"},\"BeforeExecution()\":{\"notice\":\"An event emitted by handleOps(), before starting the execution loop. Any event emitted before this event, is part of the validation.\"},\"PostOpRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation Paymaster's \\\"postOp\\\" call reverted with non-zero length.\"},\"SignatureAggregatorChanged(address)\":{\"notice\":\"Signature aggregator used by the following UserOperationEvents within this bundle.\"},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation \\\"callData\\\" reverted with non-zero length.\"}},\"kind\":\"user\",\"methods\":{\"SIG_VALIDATION_FAILED()\":{\"notice\":\"For simulation purposes, validateUserOp (and validatePaymasterUserOp) must return this value in case of signature failure, instead of revert.\"},\"addStake(uint32)\":{\"notice\":\"Add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"balanceOf(address)\":{\"notice\":\"Return the deposit (for gas payment) of the account.\"},\"delegateAndRevert(address,bytes)\":{\"notice\":\"Helper method for dry-run testing.\"},\"depositTo(address)\":{\"notice\":\"Add to the deposit of the given account.\"},\"deposits(address)\":{\"notice\":\"maps paymaster to their deposits and stakes\"},\"getDepositInfo(address)\":{\"notice\":\"Get deposit info.\"},\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"getSenderAddress(bytes)\":{\"notice\":\"Get counterfactual sender address. Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation. This method always revert, and returns the address in SenderAddressResult error\"},\"getUserOpHash((address,uint256,bytes,bytes,bytes32,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"Generate a request Id - unique identifier for this request. The request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\"},\"handleAggregatedOps(((address,uint256,bytes,bytes,bytes32,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperation with Aggregators\"},\"handleOps((address,uint256,bytes,bytes,bytes32,uint256,uint256,uint256,bytes,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperations. No signature aggregator is used. If any account requires an aggregator (that is, it returned an aggregator when performing simulateValidation), then handleAggregatedOps() must be used instead.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"},\"innerHandleOp(bytes,((address,uint256,uint256,uint256,uint256,uint256,uint256,address,uint256,uint256),bytes32,uint256,uint256,uint256),bytes)\":{\"notice\":\"Inner function to handle a UserOperation. Must be declared \\\"external\\\" to open a call context, but it can only be called by handleOps.\"},\"nonceSequenceNumber(address,uint192)\":{\"notice\":\"The next valid sequence number for a given nonce key.\"},\"unlockStake()\":{\"notice\":\"Attempt to unlock the stake. The value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw from the (unlocked) stake. Must first call unlockStake and wait for the unstakeDelay to pass.\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw from the deposit.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/EntryPoint.sol\":\"EntryPoint\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/core/EntryPoint.sol\":{\"keccak256\":\"0x9e01882a2897e681c661ecf0091d25c677ca625cea19a1101e15fb5719108516\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f868d95c32a69cc251016411f6715150b89a482b9f2b20a94a0752fee381046f\",\"dweb:/ipfs/QmeDjbxPcbiwuyXr3Wo66MEPgGWvQ6LByepYqSTNkV43AM\"]},\"contracts/core/Helpers.sol\":{\"keccak256\":\"0xb263aa0cc2c2bd521c5e258a7d162e3f82525a405db48d65c3550b78aa4c9b38\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://930bf706cafdd0ae60ab11d477a2d1582ac0819c15c0b47e79d8266e7b89c95a\",\"dweb:/ipfs/QmTxWuVq6j3MEGV5MiN6hv1ygc55KWx9RzE2YhD7Atbovh\"]},\"contracts/core/NonceManager.sol\":{\"keccak256\":\"0x25b189bde988f94e9cb636fbf19c9fb0a4588387bf4059069863f31290f26c7e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e0a4e66f36e3bbfc3536e05f007db08c23ead28cf339f5883aef4f652f7cbc56\",\"dweb:/ipfs/Qmdx4wgNDEpq4GJ95G3HjJdjvdbTByHQhE3dmUWJHvjb9j\"]},\"contracts/core/SenderCreator.sol\":{\"keccak256\":\"0x005a786a9bb077bf4fee94de70e7562401e53f24203f57b63376e4aad7887a4c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://267d8f9f8ca1fb29c4f97ca1231c122bb0458d69c6fa1db7535e2b75ae2d5add\",\"dweb:/ipfs/Qmda9CZddtRknTkTdJj8EJQZ61kwYEiL8uMqD7Y2ZZcSbF\"]},\"contracts/core/StakeManager.sol\":{\"keccak256\":\"0x150cc2f970eabde33524a88f2770883a03560d844761c19ec2fbde2f09838054\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://4d372a54a93e67cfa299763da3b73e6996e77b0801b5ef5dd8475fb461b946c3\",\"dweb:/ipfs/QmQt427Mz5bNiGtPiK4vWMzrRwWf8uk7RguTMH9eaio1Wr\"]},\"contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0xec7faf7e8f353e26bf87a04f4144b0defc7be3b2bf07feaa1eca996c746b1878\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a22f600ebb1b8cc603a63ba3a66875fbae42f1889ac61f1cdbbdf15fa6101c8d\",\"dweb:/ipfs/QmTxwNWA8PH56Sds7TLfCmvN232PMjaT4z92AuccRR7BQo\"]},\"contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x326646e54996aa78772117dee53ab3116a260bdcb32925aae312edcc707cf3c8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f62723a7ab7ddf170e10bb44c6cce4c127beef385fd5b23b12da02f4bbe81801\",\"dweb:/ipfs/QmTBVJgbdU31jWkP5DfgquZ9zX7HVjBJUkRKK3Yn8Q4mQU\"]},\"contracts/interfaces/IAccountExecute.sol\":{\"keccak256\":\"0x8f3a6970e06d02e4ac55c895cff844360e17956dd953a29c1ce17baf12b12c14\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://0c3462b21829aa826403df8603c09d62ec14ddd4d8b54656da5830c11caeb8d9\",\"dweb:/ipfs/QmPqkKvjpozMZw5n9t6gnvkh29REP3Q69TsRyyuexkt2Va\"]},\"contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x41995ec3e718d714d4024b88a3de215eb4a9eb54519b1a4174d11d6ec21f4c5a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2b954eaac347d54577e6c516c905dec6a6e0d4c3e5eb41a93130f336d963196a\",\"dweb:/ipfs/QmV1wptHfJCJiEfySq5YxgNz9Jm3fbX9yGk19tkLi8pYR7\"]},\"contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0xbfa6a90dee54ab9e98703c4cc5685ebb8aec5790d8f192a12f1221a71b2d1a98\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d4a38ae33832a874e1cdee5dace95fe9b3b87ac4ba962280fb00c3b324cbc20d\",\"dweb:/ipfs/QmUjE1XfaiGZkXQZpJb6hhaQHQbdnKVDaYxA5DA9xLz4Nq\"]},\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2\",\"dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b\"]},\"contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x00b44ed058e9d7ff1adfea374823924f4e244715c55a5bea5e52507083eb647e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ef1ece03b9d3ba57196d502051bb8050efa66414c01dd661a5c72008728f1f8e\",\"dweb:/ipfs/QmYk5TvWoxt7jsvaiks2RfkzoTJasysotFnn8Lj2Rz2etW\"]},\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xf9c7eaa61b21a25f20c77d8ee195d49662392261b901e5cb0995d65dac2b82f4\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://88e17420f4a9d41fa2b019a003aa3ee946ea36e15d153d16b0f350d9f1318af4\",\"dweb:/ipfs/QmSmCQY5yCyuFZHKfk9L8VPhjeqEgqRGpAMoKW8nRNksDv\"]},\"contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x58f78cd1aae32b504f7d25c5786a0f6b6593fc480ac742e5de2033ff8e2d0735\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://03d669a18e5fd9a6b32700d250e896ddf00b0e3b7e925176a676f34df1e52cdd\",\"dweb:/ipfs/QmZRtW4rP2TuDwPEWmjnkhiyfPvDv6iNJawaSrdQPqfrWG\"]},\"contracts/utils/Exec.sol\":{\"keccak256\":\"0x0a7acf7ffca24d7e5fb38e1d0b0b6bef4ff928407b006e5b1c3fe9226a2eb380\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://e45660750a8f7498c55839738ba1f62ed35b4a569b0d9cc19998f5389e60f40e\",\"dweb:/ipfs/QmdTyL1brtvPFFdnegQHSptAYnvQfFbUu5uhABvFDfWRNy\"]}},\"version\":1}"}},"contracts/core/NonceManager.sol":{"NonceManager":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint192","name":"","type":"uint192"}],"name":"nonceSequenceNumber","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getNonce(address,uint192)":"35567e1a","incrementNonce(uint192)":"0bd28e3b","nonceSequenceNumber(address,uint192)":"1b2e01b8"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"\",\"type\":\"uint192\"}],\"name\":\"nonceSequenceNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"},\"nonceSequenceNumber(address,uint192)\":{\"notice\":\"The next valid sequence number for a given nonce key.\"}},\"notice\":\"nonce management functionality\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/NonceManager.sol\":\"NonceManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/core/NonceManager.sol\":{\"keccak256\":\"0x25b189bde988f94e9cb636fbf19c9fb0a4588387bf4059069863f31290f26c7e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e0a4e66f36e3bbfc3536e05f007db08c23ead28cf339f5883aef4f652f7cbc56\",\"dweb:/ipfs/Qmdx4wgNDEpq4GJ95G3HjJdjvdbTByHQhE3dmUWJHvjb9j\"]},\"contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x41995ec3e718d714d4024b88a3de215eb4a9eb54519b1a4174d11d6ec21f4c5a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2b954eaac347d54577e6c516c905dec6a6e0d4c3e5eb41a93130f336d963196a\",\"dweb:/ipfs/QmV1wptHfJCJiEfySq5YxgNz9Jm3fbX9yGk19tkLi8pYR7\"]},\"contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0xbfa6a90dee54ab9e98703c4cc5685ebb8aec5790d8f192a12f1221a71b2d1a98\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d4a38ae33832a874e1cdee5dace95fe9b3b87ac4ba962280fb00c3b324cbc20d\",\"dweb:/ipfs/QmUjE1XfaiGZkXQZpJb6hhaQHQbdnKVDaYxA5DA9xLz4Nq\"]},\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2\",\"dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b\"]},\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xf9c7eaa61b21a25f20c77d8ee195d49662392261b901e5cb0995d65dac2b82f4\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://88e17420f4a9d41fa2b019a003aa3ee946ea36e15d153d16b0f350d9f1318af4\",\"dweb:/ipfs/QmSmCQY5yCyuFZHKfk9L8VPhjeqEgqRGpAMoKW8nRNksDv\"]},\"contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x58f78cd1aae32b504f7d25c5786a0f6b6593fc480ac742e5de2033ff8e2d0735\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://03d669a18e5fd9a6b32700d250e896ddf00b0e3b7e925176a676f34df1e52cdd\",\"dweb:/ipfs/QmZRtW4rP2TuDwPEWmjnkhiyfPvDv6iNJawaSrdQPqfrWG\"]}},\"version\":1}"}},"contracts/core/SenderCreator.sol":{"SenderCreator":{"abi":[{"inputs":[{"internalType":"bytes","name":"initCode","type":"bytes"}],"name":"createSender","outputs":[{"internalType":"address","name":"sender","type":"address"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234610016576101c3908161001c8239f35b600080fdfe6080600436101561000f57600080fd5b6000803560e01c63570e1a361461002557600080fd5b3461018a5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018a576004359167ffffffffffffffff9081841161018657366023850112156101865783600401358281116101825736602482870101116101825780601411610182577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec810192808411610155577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f81600b8501160116830190838210908211176101555792846024819482600c60209a968b9960405286845289840196603889018837830101525193013560601c5af1908051911561014d575b5073ffffffffffffffffffffffffffffffffffffffff60405191168152f35b90503861012e565b6024857f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b8380fd5b8280fd5b80fdfea264697066735822122024ef3abfd31dde9e4d27e341c25802405d1557306fee7d71d82bd22012501cfb64736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x1C3 SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0x570E1A36 EQ PUSH2 0x25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18A JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18A JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP5 GT PUSH2 0x186 JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x186 JUMPI DUP4 PUSH1 0x4 ADD CALLDATALOAD DUP3 DUP2 GT PUSH2 0x182 JUMPI CALLDATASIZE PUSH1 0x24 DUP3 DUP8 ADD ADD GT PUSH2 0x182 JUMPI DUP1 PUSH1 0x14 GT PUSH2 0x182 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEC DUP2 ADD SWAP3 DUP1 DUP5 GT PUSH2 0x155 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x3F DUP2 PUSH1 0xB DUP6 ADD AND ADD AND DUP4 ADD SWAP1 DUP4 DUP3 LT SWAP1 DUP3 GT OR PUSH2 0x155 JUMPI SWAP3 DUP5 PUSH1 0x24 DUP2 SWAP5 DUP3 PUSH1 0xC PUSH1 0x20 SWAP11 SWAP7 DUP12 SWAP10 PUSH1 0x40 MSTORE DUP7 DUP5 MSTORE DUP10 DUP5 ADD SWAP7 PUSH1 0x38 DUP10 ADD DUP9 CALLDATACOPY DUP4 ADD ADD MSTORE MLOAD SWAP4 ADD CALLDATALOAD PUSH1 0x60 SHR GAS CALL SWAP1 DUP1 MLOAD SWAP2 ISZERO PUSH2 0x14D JUMPI JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CODESIZE PUSH2 0x12E JUMP JUMPDEST PUSH1 0x24 DUP6 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 0xEF GASPRICE 0xBF 0xD3 SAR 0xDE SWAP15 0x4D 0x27 0xE3 COINBASE 0xC2 PC MUL BLOCKHASH 0x5D ISZERO JUMPI ADDRESS PUSH16 0xEE7D71D82BD22012501CFB64736F6C63 NUMBER STOP ADDMOD OR STOP CALLER ","sourceMap":"205:1026:6:-:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080600436101561000f57600080fd5b6000803560e01c63570e1a361461002557600080fd5b3461018a5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018a576004359167ffffffffffffffff9081841161018657366023850112156101865783600401358281116101825736602482870101116101825780601411610182577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec810192808411610155577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f81600b8501160116830190838210908211176101555792846024819482600c60209a968b9960405286845289840196603889018837830101525193013560601c5af1908051911561014d575b5073ffffffffffffffffffffffffffffffffffffffff60405191168152f35b90503861012e565b6024857f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b8380fd5b8280fd5b80fdfea264697066735822122024ef3abfd31dde9e4d27e341c25802405d1557306fee7d71d82bd22012501cfb64736f6c63430008170033","opcodes":"PUSH1 0x80 PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0x570E1A36 EQ PUSH2 0x25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18A JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18A JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP5 GT PUSH2 0x186 JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x186 JUMPI DUP4 PUSH1 0x4 ADD CALLDATALOAD DUP3 DUP2 GT PUSH2 0x182 JUMPI CALLDATASIZE PUSH1 0x24 DUP3 DUP8 ADD ADD GT PUSH2 0x182 JUMPI DUP1 PUSH1 0x14 GT PUSH2 0x182 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEC DUP2 ADD SWAP3 DUP1 DUP5 GT PUSH2 0x155 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x3F DUP2 PUSH1 0xB DUP6 ADD AND ADD AND DUP4 ADD SWAP1 DUP4 DUP3 LT SWAP1 DUP3 GT OR PUSH2 0x155 JUMPI SWAP3 DUP5 PUSH1 0x24 DUP2 SWAP5 DUP3 PUSH1 0xC PUSH1 0x20 SWAP11 SWAP7 DUP12 SWAP10 PUSH1 0x40 MSTORE DUP7 DUP5 MSTORE DUP10 DUP5 ADD SWAP7 PUSH1 0x38 DUP10 ADD DUP9 CALLDATACOPY DUP4 ADD ADD MSTORE MLOAD SWAP4 ADD CALLDATALOAD PUSH1 0x60 SHR GAS CALL SWAP1 DUP1 MLOAD SWAP2 ISZERO PUSH2 0x14D JUMPI JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CODESIZE PUSH2 0x12E JUMP JUMPDEST PUSH1 0x24 DUP6 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 0xEF GASPRICE 0xBF 0xD3 SAR 0xDE SWAP15 0x4D 0x27 0xE3 COINBASE 0xC2 PC MUL BLOCKHASH 0x5D ISZERO JUMPI ADDRESS PUSH16 0xEE7D71D82BD22012501CFB64736F6C63 NUMBER STOP ADDMOD OR STOP CALLER ","sourceMap":"205:1026:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;726:2;205:1026;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;863:293;205:1026;;;;;863:293;;;;;1169:8;;1165:58;;205:1026;;;;;;;;;;1165:58;1193:19;;1165:58;;;205:1026;;;;;;;;;;;;;;;;;;;;"},"methodIdentifiers":{"createSender(bytes)":"570e1a36"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"createSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createSender(bytes)\":{\"params\":{\"initCode\":\"- The initCode value from a UserOp. contains 20 bytes of factory address,                   followed by calldata.\"},\"returns\":{\"sender\":\" - The returned address of the created account, or zero address on failure.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createSender(bytes)\":{\"notice\":\"Call the \\\"initCode\\\" factory to create and return the sender account address.\"}},\"notice\":\"Helper contract for EntryPoint, to call userOp.initCode from a \\\"neutral\\\" address, which is explicitly not the entryPoint itself.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/SenderCreator.sol\":\"SenderCreator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/core/SenderCreator.sol\":{\"keccak256\":\"0x005a786a9bb077bf4fee94de70e7562401e53f24203f57b63376e4aad7887a4c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://267d8f9f8ca1fb29c4f97ca1231c122bb0458d69c6fa1db7535e2b75ae2d5add\",\"dweb:/ipfs/Qmda9CZddtRknTkTdJj8EJQZ61kwYEiL8uMqD7Y2ZZcSbF\"]}},\"version\":1}"}},"contracts/core/StakeManager.sol":{"StakeManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"deposits","outputs":[{"internalType":"uint256","name":"deposit","type":"uint256"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint256","name":"deposit","type":"uint256"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","depositTo(address)":"b760faf9","deposits(address)":"fc7e286d","getDepositInfo(address)":"5287ce12","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"The new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"- The account to query.\"}},\"depositTo(address)\":{\"params\":{\"account\":\"- The account to add to.\"}},\"getDepositInfo(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"info\":\"  - Full deposit information of given account.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\",\"withdrawAmount\":\"- The amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"balanceOf(address)\":{\"notice\":\"Return the deposit (for gas payment) of the account.\"},\"depositTo(address)\":{\"notice\":\"Add to the deposit of the given account.\"},\"deposits(address)\":{\"notice\":\"maps paymaster to their deposits and stakes\"},\"getDepositInfo(address)\":{\"notice\":\"Get deposit info.\"},\"unlockStake()\":{\"notice\":\"Attempt to unlock the stake. The value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw from the (unlocked) stake. Must first call unlockStake and wait for the unstakeDelay to pass.\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw from the deposit.\"}},\"notice\":\"Manage deposits and stakes. Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account). Stake is value locked for at least \\\"unstakeDelay\\\" by a paymaster.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/StakeManager.sol\":\"StakeManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/core/StakeManager.sol\":{\"keccak256\":\"0x150cc2f970eabde33524a88f2770883a03560d844761c19ec2fbde2f09838054\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://4d372a54a93e67cfa299763da3b73e6996e77b0801b5ef5dd8475fb461b946c3\",\"dweb:/ipfs/QmQt427Mz5bNiGtPiK4vWMzrRwWf8uk7RguTMH9eaio1Wr\"]},\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xf9c7eaa61b21a25f20c77d8ee195d49662392261b901e5cb0995d65dac2b82f4\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://88e17420f4a9d41fa2b019a003aa3ee946ea36e15d153d16b0f350d9f1318af4\",\"dweb:/ipfs/QmSmCQY5yCyuFZHKfk9L8VPhjeqEgqRGpAMoKW8nRNksDv\"]}},\"version\":1}"}},"contracts/core/UserOperationLib.sol":{"UserOperationLib":{"abi":[{"inputs":[],"name":"PAYMASTER_DATA_OFFSET","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAYMASTER_POSTOP_GAS_OFFSET","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAYMASTER_VALIDATION_GAS_OFFSET","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523461001a576101159081610020823930815050f35b600080fdfe6080806040526004361015601257600080fd5b600090813560e01c90816325093e1b1460a857508063b29a8ff41460745763ede3150214603e57600080fd5b807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112607157602060405160348152f35b80fd5b50807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112607157602060405160148152f35b9050817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011260db5780602460209252f35b5080fdfea26469706673582212206e124cefaf9a3116ac0f09874c1b19961d5e95035e04c4b20c69aa40f7b6a0dd64736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x1A JUMPI PUSH2 0x115 SWAP1 DUP2 PUSH2 0x20 DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x25093E1B EQ PUSH1 0xA8 JUMPI POP DUP1 PUSH4 0xB29A8FF4 EQ PUSH1 0x74 JUMPI PUSH4 0xEDE31502 EQ PUSH1 0x3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH1 0x71 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x34 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH1 0x71 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x14 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH1 0xDB JUMPI DUP1 PUSH1 0x24 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST POP DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x124CEFAF9A3116AC0F09874C1B1996 SAR 0x5E SWAP6 SUB 0x5E DIV 0xC4 0xB2 0xC PUSH10 0xAA40F7B6A0DD64736F6C PUSH4 0x43000817 STOP CALLER ","sourceMap":"282:3403:8:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080806040526004361015601257600080fd5b600090813560e01c90816325093e1b1460a857508063b29a8ff41460745763ede3150214603e57600080fd5b807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112607157602060405160348152f35b80fd5b50807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112607157602060405160148152f35b9050817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011260db5780602460209252f35b5080fdfea26469706673582212206e124cefaf9a3116ac0f09874c1b19961d5e95035e04c4b20c69aa40f7b6a0dd64736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x25093E1B EQ PUSH1 0xA8 JUMPI POP DUP1 PUSH4 0xB29A8FF4 EQ PUSH1 0x74 JUMPI PUSH4 0xEDE31502 EQ PUSH1 0x3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH1 0x71 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x34 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH1 0x71 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x14 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH1 0xDB JUMPI DUP1 PUSH1 0x24 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST POP DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x124CEFAF9A3116AC0F09874C1B1996 SAR 0x5E SWAP6 SUB 0x5E DIV 0xC4 0xB2 0xC PUSH10 0xAA40F7B6A0DD64736F6C PUSH4 0x43000817 STOP CALLER ","sourceMap":"282:3403:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;490:2;282:3403;;;;;;;;;;;;;;;;;;372:2;282:3403;;;;;;;;;;;;;;434:2;282:3403;;;;;;;"},"methodIdentifiers":{"PAYMASTER_DATA_OFFSET()":"ede31502","PAYMASTER_POSTOP_GAS_OFFSET()":"25093e1b","PAYMASTER_VALIDATION_GAS_OFFSET()":"b29a8ff4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"PAYMASTER_DATA_OFFSET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAYMASTER_POSTOP_GAS_OFFSET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAYMASTER_VALIDATION_GAS_OFFSET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Utility functions helpful when working with UserOperation structs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/UserOperationLib.sol\":\"UserOperationLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/core/Helpers.sol\":{\"keccak256\":\"0xb263aa0cc2c2bd521c5e258a7d162e3f82525a405db48d65c3550b78aa4c9b38\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://930bf706cafdd0ae60ab11d477a2d1582ac0819c15c0b47e79d8266e7b89c95a\",\"dweb:/ipfs/QmTxWuVq6j3MEGV5MiN6hv1ygc55KWx9RzE2YhD7Atbovh\"]},\"contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0xec7faf7e8f353e26bf87a04f4144b0defc7be3b2bf07feaa1eca996c746b1878\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a22f600ebb1b8cc603a63ba3a66875fbae42f1889ac61f1cdbbdf15fa6101c8d\",\"dweb:/ipfs/QmTxwNWA8PH56Sds7TLfCmvN232PMjaT4z92AuccRR7BQo\"]},\"contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x58f78cd1aae32b504f7d25c5786a0f6b6593fc480ac742e5de2033ff8e2d0735\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://03d669a18e5fd9a6b32700d250e896ddf00b0e3b7e925176a676f34df1e52cdd\",\"dweb:/ipfs/QmZRtW4rP2TuDwPEWmjnkhiyfPvDv6iNJawaSrdQPqfrWG\"]}},\"version\":1}"}},"contracts/interfaces/IAccount.sol":{"IAccount":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"missingAccountFunds","type":"uint256"}],"name":"validateUserOp","outputs":[{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"8803e451"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"details\":\"Must validate caller is the entryPoint.      Must validate the signature and nonce\",\"params\":{\"missingAccountFunds\":\"- Missing funds on the account's deposit in the entrypoint.                              This is the minimum amount to transfer to the sender(entryPoint) to be                              able to make the call. The excess is left as a deposit in the entrypoint                              for future calls. Can be withdrawn anytime using \\\"entryPoint.withdrawTo()\\\".                              In case there is a paymaster in the request (or the current deposit is high                              enough), this value will be zero.\",\"userOp\":\"- The operation that is about to be executed.\",\"userOpHash\":\"- Hash of the user's request data. can be used as the basis for signature.\"},\"returns\":{\"validationData\":\"      - Packaged ValidationData structure. use `_packValidationData` and                              `_unpackValidationData` to encode and decode.                              <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                 otherwise, an address of an \\\"authorizer\\\" contract.                              <6-byte> validUntil - Last timestamp this operation is valid. 0 for \\\"indefinite\\\"                              <6-byte> validAfter - First timestamp this operation is valid                                                    If an account doesn't use time-range, it is enough to                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.                              Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce the entryPoint will make the call to the recipient only if this validation call returns successfully. signature failure should be reported by returning SIG_VALIDATION_FAILED (1). This allows making a \\\"simulation call\\\" without a valid signature Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAccount.sol\":\"IAccount\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x326646e54996aa78772117dee53ab3116a260bdcb32925aae312edcc707cf3c8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f62723a7ab7ddf170e10bb44c6cce4c127beef385fd5b23b12da02f4bbe81801\",\"dweb:/ipfs/QmTBVJgbdU31jWkP5DfgquZ9zX7HVjBJUkRKK3Yn8Q4mQU\"]},\"contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x58f78cd1aae32b504f7d25c5786a0f6b6593fc480ac742e5de2033ff8e2d0735\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://03d669a18e5fd9a6b32700d250e896ddf00b0e3b7e925176a676f34df1e52cdd\",\"dweb:/ipfs/QmZRtW4rP2TuDwPEWmjnkhiyfPvDv6iNJawaSrdQPqfrWG\"]}},\"version\":1}"}},"contracts/interfaces/IAccountExecute.sol":{"IAccountExecute":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"}],"name":"executeUserOp","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"executeUserOp((address,uint256,bytes,bytes,bytes32,uint256,uint256,uint256,bytes,bytes),bytes32)":"18ad2e12"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"}],\"name\":\"executeUserOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"executeUserOp((address,uint256,bytes,bytes,bytes32,uint256,uint256,uint256,bytes,bytes),bytes32)\":{\"params\":{\"userOp\":\"- The operation that was just validated.\",\"userOpHash\":\"- Hash of the user's request data.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"executeUserOp((address,uint256,bytes,bytes,bytes32,uint256,uint256,uint256,bytes,bytes),bytes32)\":{\"notice\":\"Account may implement this execute method. passing this methodSig at the beginning of callData will cause the entryPoint to pass the full UserOp (and hash) to the account. The account should skip the methodSig, and use the callData (and optionally, other UserOp fields)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAccountExecute.sol\":\"IAccountExecute\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IAccountExecute.sol\":{\"keccak256\":\"0x8f3a6970e06d02e4ac55c895cff844360e17956dd953a29c1ce17baf12b12c14\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://0c3462b21829aa826403df8603c09d62ec14ddd4d8b54656da5830c11caeb8d9\",\"dweb:/ipfs/QmPqkKvjpozMZw5n9t6gnvkh29REP3Q69TsRyyuexkt2Va\"]},\"contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x58f78cd1aae32b504f7d25c5786a0f6b6593fc480ac742e5de2033ff8e2d0735\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://03d669a18e5fd9a6b32700d250e896ddf00b0e3b7e925176a676f34df1e52cdd\",\"dweb:/ipfs/QmZRtW4rP2TuDwPEWmjnkhiyfPvDv6iNJawaSrdQPqfrWG\"]}},\"version\":1}"}},"contracts/interfaces/IAggregator.sol":{"IAggregator":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation[]","name":"userOps","type":"tuple[]"}],"name":"aggregateSignatures","outputs":[{"internalType":"bytes","name":"aggregatedSignature","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"validateSignatures","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"}],"name":"validateUserOpSignature","outputs":[{"internalType":"bytes","name":"sigForUserOp","type":"bytes"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"aggregateSignatures((address,uint256,bytes,bytes,bytes32,uint256,uint256,uint256,bytes,bytes)[])":"33ecca7b","validateSignatures((address,uint256,bytes,bytes,bytes32,uint256,uint256,uint256,bytes,bytes)[],bytes)":"fe96cf23","validateUserOpSignature((address,uint256,bytes,bytes,bytes32,uint256,uint256,uint256,bytes,bytes))":"8c153290"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"}],\"name\":\"aggregateSignatures\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"aggregatedSignature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"validateSignatures\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"validateUserOpSignature\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"sigForUserOp\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,bytes32,uint256,uint256,uint256,bytes,bytes)[])\":{\"params\":{\"userOps\":\"- Array of UserOperations to collect the signatures from.\"},\"returns\":{\"aggregatedSignature\":\"- The aggregated signature.\"}},\"validateSignatures((address,uint256,bytes,bytes,bytes32,uint256,uint256,uint256,bytes,bytes)[],bytes)\":{\"params\":{\"signature\":\"- The aggregated signature.\",\"userOps\":\"- Array of UserOperations to validate the signature for.\"}},\"validateUserOpSignature((address,uint256,bytes,bytes,bytes32,uint256,uint256,uint256,bytes,bytes))\":{\"params\":{\"userOp\":\"- The userOperation received from the user.\"},\"returns\":{\"sigForUserOp\":\"- The value to put into the signature field of the userOp when calling handleOps.                        (usually empty, unless account and aggregator support some kind of \\\"multisig\\\".\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,bytes32,uint256,uint256,uint256,bytes,bytes)[])\":{\"notice\":\"Aggregate multiple signatures into a single value. This method is called off-chain to calculate the signature to pass with handleOps() bundler MAY use optimized custom code perform this aggregation.\"},\"validateSignatures((address,uint256,bytes,bytes,bytes32,uint256,uint256,uint256,bytes,bytes)[],bytes)\":{\"notice\":\"Validate aggregated signature. Revert if the aggregated signature does not match the given list of operations.\"},\"validateUserOpSignature((address,uint256,bytes,bytes,bytes32,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"Validate signature of a single userOp. This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\"}},\"notice\":\"Aggregated Signatures validator.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAggregator.sol\":\"IAggregator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x41995ec3e718d714d4024b88a3de215eb4a9eb54519b1a4174d11d6ec21f4c5a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2b954eaac347d54577e6c516c905dec6a6e0d4c3e5eb41a93130f336d963196a\",\"dweb:/ipfs/QmV1wptHfJCJiEfySq5YxgNz9Jm3fbX9yGk19tkLi8pYR7\"]},\"contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x58f78cd1aae32b504f7d25c5786a0f6b6593fc480ac742e5de2033ff8e2d0735\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://03d669a18e5fd9a6b32700d250e896ddf00b0e3b7e925176a676f34df1e52cdd\",\"dweb:/ipfs/QmZRtW4rP2TuDwPEWmjnkhiyfPvDv6iNJawaSrdQPqfrWG\"]}},\"version\":1}"}},"contracts/interfaces/IEntryPoint.sol":{"IEntryPoint":{"abi":[{"inputs":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"ret","type":"bytes"}],"name":"DelegateAndRevert","type":"error"},{"inputs":[{"internalType":"uint256","name":"opIndex","type":"uint256"},{"internalType":"string","name":"reason","type":"string"}],"name":"FailedOp","type":"error"},{"inputs":[{"internalType":"uint256","name":"opIndex","type":"uint256"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"inner","type":"bytes"}],"name":"FailedOpWithRevert","type":"error"},{"inputs":[{"internalType":"bytes","name":"returnData","type":"bytes"}],"name":"PostOpReverted","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"SenderAddressResult","type":"error"},{"inputs":[{"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureValidationFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"factory","type":"address"},{"indexed":false,"internalType":"address","name":"paymaster","type":"address"}],"name":"AccountDeployed","type":"event"},{"anonymous":false,"inputs":[],"name":"BeforeExecution","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"revertReason","type":"bytes"}],"name":"PostOpRevertReason","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureAggregatorChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"paymaster","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"},{"indexed":false,"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"actualGasUsed","type":"uint256"}],"name":"UserOperationEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"revertReason","type":"bytes"}],"name":"UserOperationRevertReason","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"_unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"delegateAndRevert","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint256","name":"deposit","type":"uint256"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"initCode","type":"bytes"}],"name":"getSenderAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"}],"name":"getUserOpHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"contract IAggregator","name":"aggregator","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct IEntryPoint.UserOpsPerAggregator[]","name":"opsPerAggregator","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleAggregatedOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation[]","name":"ops","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","delegateAndRevert(address,bytes)":"850aaf62","depositTo(address)":"b760faf9","getDepositInfo(address)":"5287ce12","getNonce(address,uint192)":"35567e1a","getSenderAddress(bytes)":"9b249f69","getUserOpHash((address,uint256,bytes,bytes,bytes32,uint256,uint256,uint256,bytes,bytes))":"02101e49","handleAggregatedOps(((address,uint256,bytes,bytes,bytes32,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)":"ea8ad612","handleOps((address,uint256,bytes,bytes,bytes32,uint256,uint256,uint256,bytes,bytes)[],address)":"6b21db51","incrementNonce(uint192)":"0bd28e3b","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"ret\",\"type\":\"bytes\"}],\"name\":\"DelegateAndRevert\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"FailedOp\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"inner\",\"type\":\"bytes\"}],\"name\":\"FailedOpWithRevert\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"PostOpReverted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SenderAddressResult\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureValidationFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"}],\"name\":\"AccountDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"BeforeExecution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"PostOpRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureAggregatorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasUsed\",\"type\":\"uint256\"}],\"name\":\"UserOperationEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"UserOperationRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"delegateAndRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"getSenderAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"getUserOpHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAggregator\",\"name\":\"aggregator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.UserOpsPerAggregator[]\",\"name\":\"opsPerAggregator\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleAggregatedOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"ops\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"FailedOp(uint256,string)\":[{\"params\":{\"opIndex\":\"- Index into the array of ops to the failed one (in simulateValidation, this is always zero).\",\"reason\":\"- Revert reason. The string starts with a unique code \\\"AAmn\\\",                  where \\\"m\\\" is \\\"1\\\" for factory, \\\"2\\\" for account and \\\"3\\\" for paymaster issues,                  so a failure can be attributed to the correct entity.\"}}],\"FailedOpWithRevert(uint256,string,bytes)\":[{\"details\":\"note that inner is truncated to 2048 bytes\",\"params\":{\"inner\":\"- data from inner cought revert reason\",\"opIndex\":\"- Index into the array of ops to the failed one (in simulateValidation, this is always zero).\",\"reason\":\"- Revert reason. see FailedOp(uint,string), above\"}}],\"SignatureValidationFailed(address)\":[{\"params\":{\"aggregator\":\"The aggregator that failed to verify the signature\"}}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"params\":{\"factory\":\"- The factory used to deploy this account (in the initCode)\",\"paymaster\":\"- The paymaster used by this UserOp\",\"sender\":\"- The account that is deployed\",\"userOpHash\":\"- The userOp that deployed this account. UserOperationEvent will follow.\"}},\"PostOpRevertReason(bytes32,address,uint256,bytes)\":{\"params\":{\"nonce\":\"- The nonce used in the request.\",\"revertReason\":\"- The return bytes from the (reverted) call to \\\"callData\\\".\",\"sender\":\"- The sender of this request.\",\"userOpHash\":\"- The request unique identifier.\"}},\"SignatureAggregatorChanged(address)\":{\"params\":{\"aggregator\":\"- The aggregator used for the following UserOperationEvents.\"}},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"params\":{\"nonce\":\"- The nonce used in the request.\",\"revertReason\":\"- The return bytes from the (reverted) call to \\\"callData\\\".\",\"sender\":\"- The sender of this request.\",\"userOpHash\":\"- The request unique identifier.\"}}},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"_unstakeDelaySec\":\"- The new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"_0\":\"- The deposit (for gas payment) of the account.\"}},\"delegateAndRevert(address,bytes)\":{\"details\":\"calling this method, the EntryPoint will make a delegatecall to the given data, and report (via revert) the result.  The method always revert, so is only useful off-chain for dry run calls, in cases where state-override to replace  actual EntryPoint code is less convenient.\"},\"depositTo(address)\":{\"params\":{\"account\":\"- The account to add to.\"}},\"getDepositInfo(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"info\":\"  - Full deposit information of given account.\"}},\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}},\"getSenderAddress(bytes)\":{\"params\":{\"initCode\":\"- The constructor code to be passed into the UserOperation.\"}},\"getUserOpHash((address,uint256,bytes,bytes,bytes32,uint256,uint256,uint256,bytes,bytes))\":{\"params\":{\"userOp\":\"- The user operation to generate the request ID for.\"}},\"handleAggregatedOps(((address,uint256,bytes,bytes,bytes32,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)\":{\"params\":{\"beneficiary\":\"- The address to receive the fees.\",\"opsPerAggregator\":\"- The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\"}},\"handleOps((address,uint256,bytes,bytes,bytes32,uint256,uint256,uint256,bytes,bytes)[],address)\":{\"params\":{\"beneficiary\":\"- The address to receive the fees.\",\"ops\":\"- The operations to execute.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\",\"withdrawAmount\":\"- The amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"FailedOp(uint256,string)\":[{\"notice\":\"A custom revert error of handleOps, to identify the offending op. Should be caught in off-chain handleOps simulation and not happen on-chain. Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts. NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\"}],\"FailedOpWithRevert(uint256,string,bytes)\":[{\"notice\":\"A custom revert error of handleOps, to report a revert by account or paymaster.\"}],\"SignatureValidationFailed(address)\":[{\"notice\":\"Error case when a signature aggregator fails to verify the aggregated signature it had created.\"}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"notice\":\"Account \\\"sender\\\" was deployed.\"},\"BeforeExecution()\":{\"notice\":\"An event emitted by handleOps(), before starting the execution loop. Any event emitted before this event, is part of the validation.\"},\"PostOpRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation Paymaster's \\\"postOp\\\" call reverted with non-zero length.\"},\"SignatureAggregatorChanged(address)\":{\"notice\":\"Signature aggregator used by the following UserOperationEvents within this bundle.\"},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation \\\"callData\\\" reverted with non-zero length.\"}},\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"balanceOf(address)\":{\"notice\":\"Get account balance.\"},\"delegateAndRevert(address,bytes)\":{\"notice\":\"Helper method for dry-run testing.\"},\"depositTo(address)\":{\"notice\":\"Add to the deposit of the given account.\"},\"getDepositInfo(address)\":{\"notice\":\"Get deposit info.\"},\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"getSenderAddress(bytes)\":{\"notice\":\"Get counterfactual sender address. Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation. This method always revert, and returns the address in SenderAddressResult error\"},\"getUserOpHash((address,uint256,bytes,bytes,bytes32,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"Generate a request Id - unique identifier for this request. The request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\"},\"handleAggregatedOps(((address,uint256,bytes,bytes,bytes32,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperation with Aggregators\"},\"handleOps((address,uint256,bytes,bytes,bytes32,uint256,uint256,uint256,bytes,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperations. No signature aggregator is used. If any account requires an aggregator (that is, it returned an aggregator when performing simulateValidation), then handleAggregatedOps() must be used instead.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"},\"unlockStake()\":{\"notice\":\"Attempt to unlock the stake. The value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw from the (unlocked) stake. Must first call unlockStake and wait for the unstakeDelay to pass.\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw from the deposit.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IEntryPoint.sol\":\"IEntryPoint\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x41995ec3e718d714d4024b88a3de215eb4a9eb54519b1a4174d11d6ec21f4c5a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2b954eaac347d54577e6c516c905dec6a6e0d4c3e5eb41a93130f336d963196a\",\"dweb:/ipfs/QmV1wptHfJCJiEfySq5YxgNz9Jm3fbX9yGk19tkLi8pYR7\"]},\"contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0xbfa6a90dee54ab9e98703c4cc5685ebb8aec5790d8f192a12f1221a71b2d1a98\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d4a38ae33832a874e1cdee5dace95fe9b3b87ac4ba962280fb00c3b324cbc20d\",\"dweb:/ipfs/QmUjE1XfaiGZkXQZpJb6hhaQHQbdnKVDaYxA5DA9xLz4Nq\"]},\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2\",\"dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b\"]},\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xf9c7eaa61b21a25f20c77d8ee195d49662392261b901e5cb0995d65dac2b82f4\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://88e17420f4a9d41fa2b019a003aa3ee946ea36e15d153d16b0f350d9f1318af4\",\"dweb:/ipfs/QmSmCQY5yCyuFZHKfk9L8VPhjeqEgqRGpAMoKW8nRNksDv\"]},\"contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x58f78cd1aae32b504f7d25c5786a0f6b6593fc480ac742e5de2033ff8e2d0735\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://03d669a18e5fd9a6b32700d250e896ddf00b0e3b7e925176a676f34df1e52cdd\",\"dweb:/ipfs/QmZRtW4rP2TuDwPEWmjnkhiyfPvDv6iNJawaSrdQPqfrWG\"]}},\"version\":1}"}},"contracts/interfaces/INonceManager.sol":{"INonceManager":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getNonce(address,uint192)":"35567e1a","incrementNonce(uint192)":"0bd28e3b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/INonceManager.sol\":\"INonceManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2\",\"dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b\"]}},\"version\":1}"}},"contracts/interfaces/IPaymaster.sol":{"IPaymaster":{"abi":[{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"mode","type":"uint8"},{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"internalType":"uint256","name":"actualUserOpFeePerGas","type":"uint256"}],"name":"postOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"maxCost","type":"uint256"}],"name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"postOp(uint8,bytes,uint256,uint256)":"7c627b21","validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"703ae88f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actualUserOpFeePerGas\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"postOp(uint8,bytes,uint256,uint256)\":{\"params\":{\"actualGasCost\":\"- Actual gas used so far (without this postOp call).\",\"actualUserOpFeePerGas\":\"- the gas price this UserOp pays. This value is based on the UserOp's maxFeePerGas                        and maxPriorityFee (and basefee)                        It is not the same as tx.gasprice, which is what the bundler pays.\",\"context\":\"- The context value returned by validatePaymasterUserOp\",\"mode\":\"- Enum with the following options:                        opSucceeded - User operation succeeded.                        opReverted  - User op reverted. still has to pay for gas.                        postOpReverted - User op succeeded, but caused postOp (in mode=opSucceeded) to revert.                                         Now this is the 2nd call, after user's op was deliberately reverted.\"}},\"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"- The maximum cost of this transaction (based on maximum gas and gas price from userOp).\",\"userOp\":\"- The user operation.\",\"userOpHash\":\"- Hash of the user's request data.\"},\"returns\":{\"context\":\"       - Value to send to a postOp. Zero length to signify postOp is not required.\",\"validationData\":\"- Signature and time-range of this operation, encoded the same as the return                          value of validateUserOperation.                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                                    otherwise, an address of an \\\"authorizer\\\" contract.                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"                          <6-byte> validAfter - first timestamp this operation is valid                          Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"postOp(uint8,bytes,uint256,uint256)\":{\"notice\":\"Post-operation handler. Must verify sender is the entryPoint.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted). The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"}},\"notice\":\"The interface exposed by a paymaster contract, who agrees to pay the gas for user's operations. A paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPaymaster.sol\":\"IPaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x00b44ed058e9d7ff1adfea374823924f4e244715c55a5bea5e52507083eb647e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ef1ece03b9d3ba57196d502051bb8050efa66414c01dd661a5c72008728f1f8e\",\"dweb:/ipfs/QmYk5TvWoxt7jsvaiks2RfkzoTJasysotFnn8Lj2Rz2etW\"]},\"contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x58f78cd1aae32b504f7d25c5786a0f6b6593fc480ac742e5de2033ff8e2d0735\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://03d669a18e5fd9a6b32700d250e896ddf00b0e3b7e925176a676f34df1e52cdd\",\"dweb:/ipfs/QmZRtW4rP2TuDwPEWmjnkhiyfPvDv6iNJawaSrdQPqfrWG\"]}},\"version\":1}"}},"contracts/interfaces/IStakeManager.sol":{"IStakeManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"_unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint256","name":"deposit","type":"uint256"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","depositTo(address)":"b760faf9","getDepositInfo(address)":"5287ce12","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"_unstakeDelaySec\":\"- The new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"_0\":\"- The deposit (for gas payment) of the account.\"}},\"depositTo(address)\":{\"params\":{\"account\":\"- The account to add to.\"}},\"getDepositInfo(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"info\":\"  - Full deposit information of given account.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\",\"withdrawAmount\":\"- The amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"balanceOf(address)\":{\"notice\":\"Get account balance.\"},\"depositTo(address)\":{\"notice\":\"Add to the deposit of the given account.\"},\"getDepositInfo(address)\":{\"notice\":\"Get deposit info.\"},\"unlockStake()\":{\"notice\":\"Attempt to unlock the stake. The value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw from the (unlocked) stake. Must first call unlockStake and wait for the unstakeDelay to pass.\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw from the deposit.\"}},\"notice\":\"Manage deposits and stakes. Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account). Stake is value locked for at least \\\"unstakeDelay\\\" by the staked entity.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IStakeManager.sol\":\"IStakeManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xf9c7eaa61b21a25f20c77d8ee195d49662392261b901e5cb0995d65dac2b82f4\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://88e17420f4a9d41fa2b019a003aa3ee946ea36e15d153d16b0f350d9f1318af4\",\"dweb:/ipfs/QmSmCQY5yCyuFZHKfk9L8VPhjeqEgqRGpAMoKW8nRNksDv\"]}},\"version\":1}"}},"contracts/utils/Exec.sol":{"Exec":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212202c70e4ae7fae31f4ee982c3ec16dc7f6a23d0c43accf702ea316f3923569cced64736f6c63430008170033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C PUSH17 0xE4AE7FAE31F4EE982C3EC16DC7F6A23D0C NUMBER 0xAC 0xCF PUSH17 0x2EA316F3923569CCED64736F6C63430008 OR STOP CALLER ","sourceMap":"210:1839:17:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212202c70e4ae7fae31f4ee982c3ec16dc7f6a23d0c43accf702ea316f3923569cced64736f6c63430008170033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C PUSH17 0xE4AE7FAE31F4EE982C3EC16DC7F6A23D0C NUMBER 0xAC 0xCF PUSH17 0x2EA316F3923569CCED64736F6C63430008 OR STOP CALLER ","sourceMap":"210:1839:17:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Utility functions helpful when making different kinds of contract calls in Solidity.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Exec.sol\":\"Exec\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/utils/Exec.sol\":{\"keccak256\":\"0x0a7acf7ffca24d7e5fb38e1d0b0b6bef4ff928407b006e5b1c3fe9226a2eb380\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://e45660750a8f7498c55839738ba1f62ed35b4a569b0d9cc19998f5389e60f40e\",\"dweb:/ipfs/QmdTyL1brtvPFFdnegQHSptAYnvQfFbUu5uhABvFDfWRNy\"]}},\"version\":1}"}}}}}