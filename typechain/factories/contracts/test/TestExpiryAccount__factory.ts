/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestExpiryAccount,
  TestExpiryAccountInterface,
} from "../../../contracts/test/TestExpiryAccount";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "anEntryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IEntryPoint",
        name: "entryPoint",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "SimpleAccountInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "addDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint48",
        name: "_after",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "_until",
        type: "uint48",
      },
    ],
    name: "addTemporaryOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "func",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "dest",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "value",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "func",
        type: "bytes[]",
      },
    ],
    name: "executeBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "anOwner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ownerAfter",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ownerUntil",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawDepositTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c06040523060805234801561001457600080fd5b50604051620022013803806200220183398101604081905261003591610046565b6001600160a01b031660a052610076565b60006020828403121561005857600080fd5b81516001600160a01b038116811461006f57600080fd5b9392505050565b60805160a051612126620000db600039600081816103f2015281816107bc0152818161086a01528181610a1801528181610d5b01528181610da201528181611229015261143c015260008181610f6d01528181610f9601526111ba01526121266000f3fe6080604052600436106101635760003560e01c80638da5cb5b116100c0578063c399ec8811610074578063cf6dca5511610059578063cf6dca55146104b3578063d087d288146104d3578063f23a6e61146104e857600080fd5b8063c399ec881461047e578063c4d66de81461049357600080fd5b8063b0d691fe116100a5578063b0d691fe146103e3578063b61d27f614610416578063bc197c811461043657600080fd5b80638da5cb5b1461033b578063ad3cb1cc1461038d57600080fd5b80634a58db19116101175780634f1ef286116100fc5780634f1ef286146102e557806352d1902d146102f85780638803e4511461031b57600080fd5b80634a58db19146102bd5780634d44560d146102c557600080fd5b80633e476951116101485780633e4769511461021a5780633fb5a7a11461026657806347e1da2a1461029b57600080fd5b806301ffc9a71461016f578063150b7a02146101a457600080fd5b3661016a57005b600080fd5b34801561017b57600080fd5b5061018f61018a3660046119f1565b61052e565b60405190151581526020015b60405180910390f35b3480156101b057600080fd5b506101e96101bf366004611a9e565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff00000000000000000000000000000000000000000000000000000000909116815260200161019b565b34801561022657600080fd5b5061024f610235366004611b11565b60026020526000908152604090205465ffffffffffff1681565b60405165ffffffffffff909116815260200161019b565b34801561027257600080fd5b5061024f610281366004611b11565b60016020526000908152604090205465ffffffffffff1681565b3480156102a757600080fd5b506102bb6102b6366004611b73565b610613565b005b6102bb6107ba565b3480156102d157600080fd5b506102bb6102e0366004611c0d565b610860565b6102bb6102f3366004611c68565b61090f565b34801561030457600080fd5b5061030d61092e565b60405190815260200161019b565b34801561032757600080fd5b5061030d610336366004611d4a565b61095d565b34801561034757600080fd5b506000546103689073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161019b565b34801561039957600080fd5b506103d66040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b60405161019b9190611dc2565b3480156103ef57600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610368565b34801561042257600080fd5b506102bb610431366004611e13565b610983565b34801561044257600080fd5b506101e9610451366004611e6f565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b34801561048a57600080fd5b5061030d6109d2565b34801561049f57600080fd5b506102bb6104ae366004611b11565b610a89565b3480156104bf57600080fd5b506102bb6104ce366004611f49565b610c1a565b3480156104df57600080fd5b5061030d610d0e565b3480156104f457600080fd5b506101e9610503366004611f8e565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f150b7a020000000000000000000000000000000000000000000000000000000014806105c157507fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000145b8061060d57507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b61061b610d8a565b8481148015610631575082158061063157508281145b61069c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f77726f6e67206172726179206c656e677468730000000000000000000000000060448201526064015b60405180910390fd5b60008390036107485760005b858110156107425761073a8787838181106106c5576106c5611ff8565b90506020020160208101906106da9190611b11565b60008585858181106106ee576106ee611ff8565b90506020028101906107009190612027565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610e4d92505050565b6001016106a8565b506107b2565b60005b858110156107b0576107a887878381811061076857610768611ff8565b905060200201602081019061077d9190611b11565b86868481811061078f5761078f611ff8565b905060200201358585858181106106ee576106ee611ff8565b60010161074b565b505b505050505050565b7f00000000000000000000000000000000000000000000000000000000000000006040517fb760faf900000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff919091169063b760faf99034906024016000604051808303818588803b15801561084557600080fd5b505af1158015610859573d6000803e3d6000fd5b5050505050565b610868610eca565b7f00000000000000000000000000000000000000000000000000000000000000006040517f205c287800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015260248201849052919091169063205c287890604401600060405180830381600087803b1580156108fb57600080fd5b505af11580156107b2573d6000803e3d6000fd5b610917610f55565b61092082611059565b61092a8282611064565b5050565b60006109386111a2565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b6000610967611211565b61097184846112b0565b905061097c82611387565b9392505050565b61098b610d8a565b6109cc848484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610e4d92505050565b50505050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906370a08231906024015b602060405180830381865afa158015610a60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a84919061208c565b905090565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff16600081158015610ad45750825b905060008267ffffffffffffffff166001148015610af15750303b155b905081158015610aff575080155b15610b36576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001660011785558315610b975784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16680100000000000000001785555b610ba0866113f2565b610bb286600065ffffffffffff610c1a565b83156107b25784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a1505050505050565b610c22610eca565b8165ffffffffffff168165ffffffffffff1611610c9b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f77726f6e6720756e74696c2f61667465720000000000000000000000000000006044820152606401610693565b73ffffffffffffffffffffffffffffffffffffffff929092166000908152600160209081526040808320805465ffffffffffff9586167fffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000009182161790915560029092529091208054929093169116179055565b6040517f35567e1a0000000000000000000000000000000000000000000000000000000081523060048201526000602482018190529073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906335567e1a90604401610a43565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161480610de5575060005473ffffffffffffffffffffffffffffffffffffffff1633145b610e4b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e746044820152606401610693565b565b6000808473ffffffffffffffffffffffffffffffffffffffff168484604051610e7691906120a5565b60006040518083038185875af1925050503d8060008114610eb3576040519150601f19603f3d011682016040523d82523d6000602084013e610eb8565b606091505b50915091508161085957805160208201fd5b60005473ffffffffffffffffffffffffffffffffffffffff16331480610eef57503330145b610e4b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f6f6e6c79206f776e6572000000000000000000000000000000000000000000006044820152606401610693565b3073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016148061102257507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166110097f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610e4b576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611061610eca565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156110e9575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526110e69181019061208c565b60015b611137576040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83166004820152602401610693565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8114611193576040517faa1d49a400000000000000000000000000000000000000000000000000000000815260048101829052602401610693565b61119d8383611486565b505050565b3073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610e4b576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610e4b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e74000000006044820152606401610693565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c829052603c8120600061132d826112f3610120880188612027565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506114e992505050565b73ffffffffffffffffffffffffffffffffffffffff811660009081526002602090815260408083205460019092529091205491925065ffffffffffff9081169116811561137b818484611513565b98975050505050505050565b80156110615760405160009033907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90849084818181858888f193505050503d8060008114610859576040519150601f19603f3d011682016040523d82523d6000602084013e610859565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff838116918217835560405191927f0000000000000000000000000000000000000000000000000000000000000000909116917f47e55c76e7a6f1fd8996a1da8008c1ea29699cca35e7bcd057f2dec313b6e5de9190a350565b61148f8261154b565b60405173ffffffffffffffffffffffffffffffffffffffff8316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a28051156114e15761119d828261161a565b61092a61169d565b6000806000806114f986866116d5565b9250925092506115098282611722565b5090949350505050565b600060d08265ffffffffffff16901b60a08465ffffffffffff16901b8561153b57600061153e565b60015b60ff161717949350505050565b8073ffffffffffffffffffffffffffffffffffffffff163b6000036115b4576040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82166004820152602401610693565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60606000808473ffffffffffffffffffffffffffffffffffffffff168460405161164491906120a5565b600060405180830381855af49150503d806000811461167f576040519150601f19603f3d011682016040523d82523d6000602084013e611684565b606091505b5091509150611694858383611826565b95945050505050565b3415610e4b576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806000835160410361170f5760208401516040850151606086015160001a611701888285856118b5565b95509550955050505061171b565b50508151600091506002905b9250925092565b6000826003811115611736576117366120c1565b0361173f575050565b6001826003811115611753576117536120c1565b0361178a576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600282600381111561179e5761179e6120c1565b036117d8576040517ffce698f700000000000000000000000000000000000000000000000000000000815260048101829052602401610693565b60038260038111156117ec576117ec6120c1565b0361092a576040517fd78bce0c00000000000000000000000000000000000000000000000000000000815260048101829052602401610693565b60608261183b57611836826119af565b61097c565b815115801561185f575073ffffffffffffffffffffffffffffffffffffffff84163b155b156118ae576040517f9996b31500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85166004820152602401610693565b508061097c565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156118f057506000915060039050826119a5565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611944573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811661199b575060009250600191508290506119a5565b9250600091508190505b9450945094915050565b8051156119bf5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060208284031215611a0357600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461097c57600080fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461106157600080fd5b60008083601f840112611a6757600080fd5b50813567ffffffffffffffff811115611a7f57600080fd5b602083019150836020828501011115611a9757600080fd5b9250929050565b600080600080600060808688031215611ab657600080fd5b8535611ac181611a33565b94506020860135611ad181611a33565b935060408601359250606086013567ffffffffffffffff811115611af457600080fd5b611b0088828901611a55565b969995985093965092949392505050565b600060208284031215611b2357600080fd5b813561097c81611a33565b60008083601f840112611b4057600080fd5b50813567ffffffffffffffff811115611b5857600080fd5b6020830191508360208260051b8501011115611a9757600080fd5b60008060008060008060608789031215611b8c57600080fd5b863567ffffffffffffffff80821115611ba457600080fd5b611bb08a838b01611b2e565b90985096506020890135915080821115611bc957600080fd5b611bd58a838b01611b2e565b90965094506040890135915080821115611bee57600080fd5b50611bfb89828a01611b2e565b979a9699509497509295939492505050565b60008060408385031215611c2057600080fd5b8235611c2b81611a33565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008060408385031215611c7b57600080fd5b8235611c8681611a33565b9150602083013567ffffffffffffffff80821115611ca357600080fd5b818501915085601f830112611cb757600080fd5b813581811115611cc957611cc9611c39565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715611d0f57611d0f611c39565b81604052828152886020848701011115611d2857600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600080600060608486031215611d5f57600080fd5b833567ffffffffffffffff811115611d7657600080fd5b84016101408187031215611d8957600080fd5b95602085013595506040909401359392505050565b60005b83811015611db9578181015183820152602001611da1565b50506000910152565b6020815260008251806020840152611de1816040850160208701611d9e565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60008060008060608587031215611e2957600080fd5b8435611e3481611a33565b935060208501359250604085013567ffffffffffffffff811115611e5757600080fd5b611e6387828801611a55565b95989497509550505050565b60008060008060008060008060a0898b031215611e8b57600080fd5b8835611e9681611a33565b97506020890135611ea681611a33565b9650604089013567ffffffffffffffff80821115611ec357600080fd5b611ecf8c838d01611b2e565b909850965060608b0135915080821115611ee857600080fd5b611ef48c838d01611b2e565b909650945060808b0135915080821115611f0d57600080fd5b50611f1a8b828c01611a55565b999c989b5096995094979396929594505050565b803565ffffffffffff81168114611f4457600080fd5b919050565b600080600060608486031215611f5e57600080fd5b8335611f6981611a33565b9250611f7760208501611f2e565b9150611f8560408501611f2e565b90509250925092565b60008060008060008060a08789031215611fa757600080fd5b8635611fb281611a33565b95506020870135611fc281611a33565b94506040870135935060608701359250608087013567ffffffffffffffff811115611fec57600080fd5b611bfb89828a01611a55565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261205c57600080fd5b83018035915067ffffffffffffffff82111561207757600080fd5b602001915036819003821315611a9757600080fd5b60006020828403121561209e57600080fd5b5051919050565b600082516120b7818460208701611d9e565b9190910192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea26469706673582212204fb6824de8367daae7cf71267fabafef1be0a65f35aa143f87e465d1796e7b7364736f6c63430008170033";

type TestExpiryAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestExpiryAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestExpiryAccount__factory extends ContractFactory {
  constructor(...args: TestExpiryAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    anEntryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestExpiryAccount> {
    return super.deploy(
      anEntryPoint,
      overrides || {}
    ) as Promise<TestExpiryAccount>;
  }
  override getDeployTransaction(
    anEntryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(anEntryPoint, overrides || {});
  }
  override attach(address: string): TestExpiryAccount {
    return super.attach(address) as TestExpiryAccount;
  }
  override connect(signer: Signer): TestExpiryAccount__factory {
    return super.connect(signer) as TestExpiryAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestExpiryAccountInterface {
    return new utils.Interface(_abi) as TestExpiryAccountInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestExpiryAccount {
    return new Contract(address, _abi, signerOrProvider) as TestExpiryAccount;
  }
}
